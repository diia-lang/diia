взяти визначення мавка;

зовнішня дія прочитати_файл(шлях: Ю8): Ю8;

дія нативна_дія_друк(обʼєкт_нативної_дії: адреса<МаМа::ОбʼєктНативноїДії>, М: адреса<МаМа::Машина>, обʼєкт_я: адреса<МаМа::Обʼєкт>, аргументи: адреса<Накопичувач<адреса<МаМа::Обʼєкт>>>, іменовані_аргументи: адреса<Реєстр<адреса<МаМа::Назва>, адреса<МаМа::Обʼєкт>>>): адреса<МаМа::Обʼєкт> {
  якщо аргументи != пусто {
    змінна ціль па: позитивне = 0;
    поки па < аргументи.розмір {
      ціль буфер_ю8 = зробити_буфер_ю8();
      МаМа::надрукувати_обʼєкт_в_буфер_ю8(аргументи.дані[па], М, буфер_ю8::адреса, 0);
      ціль ю8 = виділити_ю8_з_буфера(буфер_ю8::адреса);
      звільнити_значення_буфера_ю8(буфер_ю8);
      надрукувати_ю8(ю8);
      звільнити(ю8);
      па += 1;
    }
  }
  вернути пусто;
}

дія надрукувати_помилку(шлях: Ю8, рядок: позитивне, стовпець: позитивне, повідомлення: Ю8) {
  вивести_ю8(шлях);
  вивести_ю8(ю8":");
  вивести_п64(рядок);
  вивести_ю8(ю8":");
  вивести_п64(стовпець);
  вивести_ю8(ю8": ");
  надрукувати_ю8(повідомлення);
}

дія надрукувати_помилку(повідомлення: Ю8) {
  надрукувати_ю8(повідомлення);
}

зовнішня дія стартувати_мавку(кількість_аргументів: ц32, аргументи: памʼять<Ю8>): ц32 {
  ціль шлях = ю8"привіт.м";
  ціль текст_коду = виділити<ТекстКоду>();
  текст_коду.шлях = виділити_копію_ю8(шлях);
  текст_коду.значення = прочитати_файл(шлях);
  ціль результат_розбору_мавки = розібрати_мавку(текст_коду);
  якщо результат_розбору_мавки.успіх == 0 {
    надрукувати_помилку(
      результат_розбору_мавки.помилка.місцезнаходження.текст_коду.шлях,
      результат_розбору_мавки.помилка.місцезнаходження.рядок як п64,
      результат_розбору_мавки.помилка.місцезнаходження.стовпець як п64,
      результат_розбору_мавки.помилка.повідомлення
    );
    вернути 1;
  }
  ціль М = МаМа::виділити_машину();
  ціль обʼєкт_нативної_дії_друк = МаМа::виділити_обʼєкт_нативної_дії(М, МаМа::назва(М, ю8"друк"), нативна_дія_друк, пусто, пусто);
  МаМа::змінити_в_середовищі(М.глобальне_середовище, М.БН.С.друк, обʼєкт_нативної_дії_друк як адреса<МаМа::Обʼєкт>);
  ціль код = МаМа::виділити_код(текст_коду.шлях);
  ціль контекст_компіляції = мавка::виділити_контекст_компіляції();
  ціль помилка_компіляції = мавка::скомпілювати_тіло(М, контекст_компіляції, код, результат_розбору_мавки.тіло);
  якщо помилка_компіляції != пусто {
    якщо помилка_компіляції.місцезнаходження != пусто {
      надрукувати_помилку(
        помилка_компіляції.місцезнаходження.текст_коду.шлях,
        помилка_компіляції.місцезнаходження.рядок як п64,
        помилка_компіляції.місцезнаходження.стовпець як п64,
        помилка_компіляції.повідомлення
      );
    } інакше {
      надрукувати_помилку(помилка_компіляції.повідомлення);
    }
    вернути 1;
  }
  мавка::звільнити_контекст_компіляції(контекст_компіляції);
  звільнити_результат_розбору_мавки(результат_розбору_мавки);
  МаМа::надрукувати_код(код);
  ціль результат_виконання_коду = МаМа::виконати_код(М, М.глобальне_середовище, код);
  якщо М.стан_падіння {
    ціль буфер_ю8 = зробити_буфер_ю8();
    МаМа::надрукувати_обʼєкт_в_буфер_ю8(результат_виконання_коду, М, буфер_ю8::адреса, 0);
    ціль ю8 = виділити_ю8_з_буфера(буфер_ю8::адреса);
    звільнити_значення_буфера_ю8(буфер_ю8);
    якщо М.місцезнаходження_падіння != пусто {
      надрукувати_помилку(
        М.місцезнаходження_падіння.шлях_до_файлу,
        М.місцезнаходження_падіння.рядок як п64,
        М.місцезнаходження_падіння.стовпець як п64,
        ю8
      );
    } інакше {
      надрукувати_помилку(ю8);
    }
    звільнити(ю8);
  }
  МаМа::утилізувати(М);
  вернути 0;
}

//дія нативна_дія_мавки_друк(обʼєкт_нативної_дії: адреса<мавка::Обʼєкт>, В: адреса<мавка::Виконувач>, обʼєкт_я: адреса<мавка::Обʼєкт>, аргументи: адреса<Накопичувач<адреса<мавка::Обʼєкт>>>, іменовані_аргументи: адреса<Реєстр<адреса<мавка::Назва>, адреса<мавка::Обʼєкт>>>): адреса<мавка::Обʼєкт> {
//}

//зовнішня дія новий_старт(): ц32 {
//  ціль В = мавка::створити_виконувач();
//  мавка::визначити_нативну_дію(В, ю8"друк", нативна_дія_мавки_друк);
//  мавка::взяти_модуль(В, ю8"тест");
//  мавка::почати_діалог(В);
//  мавка::знищити_виконувач(В);
//  вернути 0;
//}