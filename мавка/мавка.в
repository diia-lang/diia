////
// Автор це Богданович Давид Когут Прихожденко та Організація Мавки та Організація Організацій
////

взяти визначення МаМа;
взяти визначення мавка/розбирач;

зовнішня дія mavka_dialog(data: адреса, run: (data: адреса, value: адреса<unsigned_char>) -> ніщо);
зовнішня дія mavka_get_path_directory(path: адреса<unsigned_char>, output: адреса<адреса<unsigned_char>>): size_t;
зовнішня дія mavka_sin(value: double): double;
зовнішня дія mavka_cos(value: double): double;
зовнішня дія mavka_tan(value: double): double;
зовнішня дія mavka_asin(value: double): double;
зовнішня дія mavka_acos(value: double): double;
зовнішня дія mavka_atan(value: double): double;
зовнішня дія mavka_atan2(a: double, b: double): double;
зовнішня дія mavka_abs(value: double): double;
зовнішня дія mavka_exp(value: double): double;
зовнішня дія mavka_sqrt(value: double): double;
зовнішня дія mavka_pow(a: double, b: double): double;
зовнішня дія mavka_ceil(value: double): double;
зовнішня дія mavka_floor(value: double): double;
зовнішня дія mavka_round(value: double): double;
зовнішня дія mavka_get_version(output: адреса<адреса<unsigned_char>>, length: адреса<size_t>);
зовнішня дія mavka_read_from_stdin(prefix: адреса<char>, output: адреса<адреса<char>>): позитивне;

секція мавка {
  дія прочитати_з_stdin(префікс: памʼять<п8>, вихід: адреса<памʼять<п8>>): позитивне {
    вернути mavka_read_from_stdin(префікс як адреса<char>, вихід як адреса<адреса<char>>);
  }

  дія отримати_батьківську_директорію(шлях: памʼять<п8>, вихід: адреса<памʼять<п8>>): позитивне {
    вернути mavka_get_path_directory(шлях як адреса<unsigned_char>, вихід як адреса<адреса<unsigned_char>>);
  }
  
  синонім Ю8 = памʼять<п8>;
  синонім Ю32 = памʼять<п32>;

  синонім Накопичувач = МаМа::Накопичувач;
  синонім НакопичувачЮ8 = МаМа::НакопичувачЮ8;

  структура Обʼєкт; // те саме що МаМа::Обʼєкт
  структура Назва;  // те саме що МаМа::Назва

  структура Результат;
  структура Помилка;
  структура Виконувач;
  структура ІменованіАргументи;
}

секція мавка {
  структура МісцезнаходженняПадіння {
    шлях_до_файлу: Ю8;
    рядок: позитивне;
  }

  структура ЕлементІсторіїПадіння {
    шлях_до_файлу: Ю8;
    рядок: позитивне;
    назва_дії: адреса<Назва>;
  }

  структура Падіння {
    місцезнаходження: адреса<МісцезнаходженняПадіння>;
    розмір_історії: позитивне;
    історія: памʼять<ЕлементІсторіїПадіння>;
  }

  структура Результат {
    падіння: адреса<Падіння>;
    значення: адреса<Обʼєкт>;
  }

  структура Виконувач {
    М: адреса<МаМа::Машина>;
    версія_мавки_Ю8: Ю8;
  }
}

// Публічні дії, що можна вільно використовувати.
// Мавка намагається абстрагуватись від МаМа і надати незалежний від МаМа набір дій.
секція мавка {
  синонім НативнаДія = (обʼєкт_нативної_дії: адреса<Обʼєкт>, В: адреса<Виконувач>, обʼєкт_я: адреса<Обʼєкт>, аргументи: адреса<Накопичувач<адреса<Обʼєкт>>>, іменовані_аргументи: адреса<ІменованіАргументи>, дані: адреса) -> Результат;
  синонім ВідкликПередЗвільненнямОбʼєктаНативноїДії = (обʼєкт_нативної_дії: адреса<Обʼєкт>, В: адреса<Виконувач>, дані: адреса) -> ніщо;

  дія виділити<Т>(В: адреса<Виконувач>): адреса<Т>;
  дія виділити<Т>(В: адреса<Виконувач>, кількість: позитивне): памʼять<Т>;
  дія перевиділити<Т>(В: адреса<Виконувач>, значення: памʼять<Т>, кількість: позитивне): памʼять<Т>;
  дія звільнити(В: адреса<Виконувач>, значення: адреса);

  дія виділити<Т>(В: адреса<Виконувач>): адреса<Т> {
    вернути МаМа::виділити<Т>();
  }

  дія виділити<Т>(В: адреса<Виконувач>, кількість: позитивне): памʼять<Т> {
    вернути МаМа::виділити<Т>(кількість) як памʼять<Т>;
  }

  дія перевиділити<Т>(В: адреса<Виконувач>, значення: памʼять<Т>, кількість: позитивне): памʼять<Т> {
    вернути МаМа::перевиділити<Т>(значення, кількість);
  }

  дія звільнити(В: адреса<Виконувач>, значення: адреса) {
    МаМа::звільнити(значення);
  }

  місцева дія створити_виконувач(): адреса<Виконувач>;
  місцева дія знищити_виконувач(В: адреса<Виконувач>);
  місцева дія почати_діалог(В: адреса<Виконувач>): Результат;
  місцева дія взяти_файл_Ю8(В: адреса<Виконувач>, назва_модуля: адреса<Назва>, шлях_до_файлу: Ю8): Результат;
  місцева дія виконати_ю8(В: адреса<Виконувач>, значення: Ю8): Результат;
  місцева дія зберегти_обʼєкт(В: адреса<Виконувач>, обʼєкт: адреса<Обʼєкт>);
  місцева дія видалити_збережений_обʼєкт(В: адреса<Виконувач>);
  місцева дія назва_з_Ю8(В: адреса<Виконувач>, значення: Ю8): адреса<Назва>;
  місцева дія отримати_так(В: адреса<Виконувач>): адреса<Обʼєкт>;
  місцева дія отримати_ні(В: адреса<Виконувач>): адреса<Обʼєкт>;
  місцева дія визначити_глобальний_субʼєкт(В: адреса<Виконувач>, назва: адреса<Назва>, обʼєкт: адреса<Обʼєкт>);
  місцева дія утилізувати(В: адреса<Виконувач>);

  місцева дія створити_нативну_дію(В: адреса<Виконувач>, назва: адреса<Назва>, значення: НативнаДія, дані: адреса, відклик_перед_звільненням: ВідкликПередЗвільненнямОбʼєктаНативноїДії): адреса<Обʼєкт>;
  місцева дія створити_число(В: адреса<Виконувач>, значення: д64): адреса<Обʼєкт>;
  місцева дія створити_текст_з_Ю8(В: адреса<Виконувач>, значення: Ю8): адреса<Обʼєкт>;
  місцева дія створити_юнікод_з_Ю8(В: адреса<Виконувач>, значення: Ю8): адреса<Обʼєкт>;
  місцева дія створити_модуль(В: адреса<Виконувач>, назва: адреса<Назва>): адреса<Обʼєкт>;
  місцева дія створити_список(В: адреса<Виконувач>): адреса<Обʼєкт>;
  місцева дія створити_словник(В: адреса<Виконувач>): адреса<Обʼєкт>;
  місцева дія створити_байти(В: адреса<Виконувач>, розмір: позитивне): адреса<Обʼєкт>;
  місцева дія створити_обʼєкт(В: адреса<Виконувач>): адреса<Обʼєкт>;

  місцева дія обʼєкт_виконати(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, обʼєкт_я: адреса<Обʼєкт>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Обʼєкт>>, іменовані_аргументи: адреса<ІменованіАргументи>): Результат;
  місцева дія обʼєкт_отримати_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: адреса<Назва>): Результат;
  місцева дія обʼєкт_змінити_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: адреса<Назва>, значення: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_видалити_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: адреса<Назва>): Результат;
  місцева дія обʼєкт_виконати_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: адреса<Назва>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Обʼєкт>>, іменовані_аргументи: адреса<ІменованіАргументи>): Результат;
  місцева дія обʼєкт_отримати_елемент(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, ключ: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_змінити_елемент(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, ключ: адреса<Обʼєкт>, значення: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_видалити_елемент(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, ключ: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_отримати_перебір(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;
  місцева дія обʼєкт_додати(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_відняти(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_помножити(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_поділити(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_остача(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_неповна_частка(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_степінь(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_вліво(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_вправо_зі_заповненням(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_двійкове_і(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_двійкове_або(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_двійкове_виключне_або(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_двійкове_не(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;
  місцева дія обʼєкт_більше(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_менше(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_рівно(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_містить(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_є(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  місцева дія обʼєкт_відʼємне(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;
  місцева дія обʼєкт_числове(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;
  місцева дія обʼєкт_заперечити(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;
  місцева дія обʼєкт_збільшити(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;
  місцева дія обʼєкт_зменшити(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;

  місцева дія скопіювати_значення_обʼєкта_юнікоду_як_Ю8(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, адреса_на_розмір_виходу: адреса<позитивне>, адреса_на_вихід: адреса<Ю8>): логічне;

  місцева дія результат_успіх(В: адреса<Виконувач>, обʼєкт: адреса<Обʼєкт>): Результат;
  місцева дія результат_падіння(В: адреса<Виконувач>, обʼєкт: адреса<Обʼєкт>, місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>): Результат;
  місцева дія виділити_падіння(В: адреса<Виконувач>, місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>, розмір_історії: позитивне, історія: памʼять<ЕлементІсторіїПадіння>): адреса<Падіння>;
  місцева дія звільнити_падіння(В: адреса<Виконувач>, падіння: адреса<Падіння>);
  місцева дія виділити_місцезнаходження_падіння(В: адреса<Виконувач>, шлях_до_файлу: Ю8, рядок: позитивне): адреса<МісцезнаходженняПадіння>;
  місцева дія звільнити_місцезнаходження_падіння(В: адреса<Виконувач>, місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>);
  місцева дія отримати_шлях_до_файлу_з_місцезнаходження_падіння(В: адреса<Виконувач>, місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>): Ю8;
  місцева дія отримати_рядок_з_місцезнаходження_падіння(В: адреса<Виконувач>, місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>): позитивне;
  місцева дія надрукувати_обʼєкт_в_накопичувач_ю8(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, накопичувач: адреса<НакопичувачЮ8>, глибина: позитивне);

  місцева дія отримати_значення_числа(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): д64;

  місцева дія перевірити_чи_обʼєкт_виражається_логічним_так(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  місцева дія перевірити_чи_обʼєкт_є_дією(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  місцева дія перевірити_чи_обʼєкт_є_нативною_дією(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  місцева дія перевірити_чи_обʼєкт_є_числом(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  місцева дія перевірити_чи_обʼєкт_є_текстом(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  місцева дія перевірити_чи_обʼєкт_є_юнікодом(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  місцева дія перевірити_чи_обʼєкт_є_модулем(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  місцева дія перевірити_чи_обʼєкт_є_списком(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  місцева дія перевірити_чи_обʼєкт_є_словником(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  місцева дія перевірити_чи_обʼєкт_є_логічним(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  місцева дія перевірити_чи_обʼєкт_є_байтами(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;

  місцева дія записати_в_байти(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, дані: памʼять<п8>, розмір: позитивне, зсув: позитивне);

  місцева дія отримати_копію_даних_тексту(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п8>>): позитивне;
  місцева дія отримати_дані_тексту(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п8>>): позитивне;
  місцева дія отримати_копію_даних_юнікоду(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п32>>): позитивне;
  місцева дія отримати_дані_юнікоду(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п32>>): позитивне;
  місцева дія отримати_копію_даних_юнікоду_як_Ю8(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п8>>): позитивне;
  місцева дія отримати_копію_даних_байтів(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п8>>): позитивне;
  місцева дія отримати_дані_байтів(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п8>>): позитивне;

  місцева дія знайти_іменований_аргумент(В: адреса<Виконувач>, іменовані_аргументи: адреса<ІменованіАргументи>, назва: адреса<Назва>, вихід: адреса<адреса<Обʼєкт>>): логічне;
  місцева дія записати_іменований_аргумент(В: адреса<Виконувач>, іменовані_аргументи: адреса<ІменованіАргументи>, назва: адреса<Назва>, значення: адреса<Обʼєкт>);
  місцева дія виділити_іменовані_аргументи(В: адреса<Виконувач>): адреса<ІменованіАргументи>;
  місцева дія звільнити_іменовані_аргументи(В: адреса<Виконувач>, іменовані_аргументи: адреса<ІменованіАргументи>);
}

// Приватні дії, які не варто рухати.
секція мавка {
  структура ПомилкаКомпіляції;
  структура КонтекстКомпіляції;

  структура ПомилкаКомпіляції {
    повідомлення: Ю8;
    місцезнаходження: адреса<Місцезнаходження>;
  }

  місцева дія виділити_помилку_компіляції(В: адреса<Виконувач>): адреса<ПомилкаКомпіляції>;

  структура КонтекстКомпіляції {
    код_дії: адреса<МаМа::Код>;
  }

  місцева дія виділити_контекст_компіляції(В: адреса<Виконувач>): адреса<КонтекстКомпіляції>;
  місцева дія звільнити_контекст_компіляції(В: адреса<Виконувач>, контекст: адреса<КонтекстКомпіляції>);

  місцева дія скомпілювати_елемент_значення(В: адреса<Виконувач>, контекст: адреса<КонтекстКомпіляції>, код: адреса<МаМа::Код>, елемент: адреса<АСДЗначення>): адреса<ПомилкаКомпіляції>;
  місцева дія скомпілювати_тіло(В: адреса<Виконувач>, контекст: адреса<КонтекстКомпіляції>, код: адреса<МаМа::Код>, тіло: адреса<СписокАСДЗначень>, вернути_в_кінці: логічне): адреса<ПомилкаКомпіляції>;
}