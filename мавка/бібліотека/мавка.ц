////
// Автор це Богданович Давид Когут Прихожденко та Організація Мавки та Організація Організацій
////

взяти визначення мавка/бібліотека;
взяти визначення РМв1;

зовнішня дія mavka_load_shared_object_function_ptr_from_file(path: адреса<unsigned_char>, name: адреса<unsigned_char>): адреса;

секція мавка {
  секція бібліотека {
    дія РМв1_надрукувати_Ю8(значення: памʼять<п8>, Р: адреса<РМв1::Розширення>) {
      МаМа::надрукувати_ю8(значення);
    }

    дія РМв1_надрукувати_обʼєкт(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, глибина: позитивне) {
      ціль В = Р.В як адреса<Виконувач>;
      ціль М = В.М;
      МаМа::надрукувати_обʼєкт(обʼєкт як адреса<МаМа::Обʼєкт>, М, глибина);
    }

    // УВАГА: ця дія звільняє передане падіння мавки з памʼяті!
    дія перетворити_падіння_мавки_в_падіння_РМв1(падіння_мавки: адреса<мавка::Падіння>): адреса<РМв1::Падіння> {
      ціль падіння = виділити<РМв1::Падіння>();
      якщо падіння_мавки.місцезнаходження == пусто {
        падіння.місцезнаходження = пусто;
      } інакше {
        падіння.місцезнаходження = виділити<РМв1::МісцезнаходженняПадіння>();
        якщо МаМа::виділити_копію_Ю8(падіння_мавки.місцезнаходження.шлях_до_файлу, МаМа::порахувати_розмір_Ю8(падіння_мавки.місцезнаходження.шлях_до_файлу), падіння.місцезнаходження.шлях_до_файлу::адреса) == ні {
          МаМа::ПОМЕРТИ(ю8":(");
        }
        падіння.місцезнаходження.рядок = падіння_мавки.місцезнаходження.рядок;
      }
      падіння.розмір_історії = падіння_мавки.розмір_історії;
      падіння.історія = виділити<РМв1::ЕлементІсторіїПадіння>(ц32(падіння_мавки.розмір_історії));
      змінна ціль п: позитивне = 0;
      поки п < падіння_мавки.розмір_історії {
        якщо МаМа::виділити_копію_Ю8(падіння_мавки.історія[п].шлях_до_файлу, МаМа::порахувати_розмір_Ю8(падіння_мавки.історія[п].шлях_до_файлу), падіння.історія[п].шлях_до_файлу::адреса) == ні {
          МаМа::ПОМЕРТИ(ю8":(");
        }
        падіння.історія[п].рядок = падіння_мавки.історія[п].рядок;
        падіння.історія[п].назва_дії = падіння_мавки.історія[п].назва_дії як адреса<РМв1::Назва>;
        п += 1;
      }
      мавка::звільнити_падіння(падіння_мавки);
      вернути падіння;
    }

    // УВАГА: ця дія звільняє падіння мавки з переданого результату з памʼяті!
    дія перетворити_результат_мавки_в_результат_РМв1(результат_мавки: мавка::Результат): РМв1::Результат {
      якщо результат_мавки.падіння == пусто {
        вернути РМв1::Результат {
          падіння = пусто,
          значення = результат_мавки.значення як адреса<РМв1::Обʼєкт>
        };
      } інакше {
        вернути РМв1::Результат {
          падіння = перетворити_падіння_мавки_в_падіння_РМв1(результат_мавки.падіння),
          значення = результат_мавки.значення як адреса<РМв1::Обʼєкт>
        };
      }
    }

    дія РМв1_взяти_файл(Р: адреса<РМв1::Розширення>, назва_модуля: адреса<РМв1::Назва>, шлях_до_файлу: Ю8): РМв1::Результат {
      ціль результат_мавки = мавка::взяти_файл(Р.В як адреса<мавка::Виконувач>, назва_модуля як адреса<мавка::Назва>, шлях_до_файлу);
      вернути перетворити_результат_мавки_в_результат_РМв1(результат_мавки);
    }

    дія РМв1_зберегти_обʼєкт(Р: адреса<РМв1::Розширення>, обʼєкт: адреса<РМв1::Обʼєкт>) {
      мавка::зберегти_обʼєкт(Р.В як адреса<мавка::Виконувач>, обʼєкт як адреса<мавка::Обʼєкт>);
    }

    дія РМв1_видалити_збережений_обʼєкт(Р: адреса<РМв1::Розширення>) {
      мавка::видалити_збережений_обʼєкт(Р.В як адреса<мавка::Виконувач>);
    }

    дія РМв1_назва_з_Ю8(Р: адреса<РМв1::Розширення>, значення: Ю8): адреса<РМв1::Назва> {
      вернути мавка::назва_з_Ю8(Р.В як адреса<мавка::Виконувач>, значення) як адреса<РМв1::Назва>;
    }

    дія РМв1_створити_нативну_дію(Р: адреса<РМв1::Розширення>, назва: адреса<РМв1::Назва>, значення: РМв1::НативнаДія): адреса<РМв1::Обʼєкт> {
      вернути пусто;
    }

    дія РМв1_створити_число(Р: адреса<РМв1::Розширення>, значення: д64): адреса<РМв1::Обʼєкт> {
      вернути мавка::створити_число(Р.В як адреса<мавка::Виконувач>, значення) як адреса<РМв1::Обʼєкт>;
    }

    дія РМв1_створити_текст_з_Ю8(Р: адреса<РМв1::Розширення>, значення: Ю8): адреса<РМв1::Обʼєкт> {
      вернути мавка::створити_текст_з_Ю8(Р.В як адреса<мавка::Виконувач>, значення) як адреса<РМв1::Обʼєкт>;
    }

    дія РМв1_створити_юнікод_з_Ю8(Р: адреса<РМв1::Розширення>, значення: Ю8): адреса<РМв1::Обʼєкт> {
      вернути мавка::створити_юнікод_з_Ю8(Р.В як адреса<мавка::Виконувач>, значення) як адреса<РМв1::Обʼєкт>;
    }

    дія РМв1_створити_модуль(Р: адреса<РМв1::Розширення>, назва: адреса<РМв1::Назва>): адреса<РМв1::Обʼєкт> {
      вернути мавка::створити_модуль(Р.В як адреса<мавка::Виконувач>, назва як адреса<мавка::Назва>) як адреса<РМв1::Обʼєкт>;
    }

    дія РМв1_створити_список(Р: адреса<РМв1::Розширення>): адреса<РМв1::Обʼєкт> {
      вернути мавка::створити_список(Р.В як адреса<мавка::Виконувач>) як адреса<РМв1::Обʼєкт>;
    }

    дія РМв1_створити_словник(Р: адреса<РМв1::Розширення>): адреса<РМв1::Обʼєкт> {
      вернути мавка::створити_словник(Р.В як адреса<мавка::Виконувач>) як адреса<РМв1::Обʼєкт>;
    }

    дія РМв1_створити_обʼєкт(Р: адреса<РМв1::Розширення>): адреса<РМв1::Обʼєкт> {
      вернути мавка::створити_обʼєкт(Р.В як адреса<мавка::Виконувач>) як адреса<РМв1::Обʼєкт>;
    }

    дія РМв1_обʼєкт_виконати_обʼєкт(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<РМв1::Обʼєкт>>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_отримати_властивість(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, назва: адреса<РМв1::Назва>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_змінити_властивість(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, назва: адреса<РМв1::Назва>, значення: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(мавка::обʼєкт_змінити_властивість(
        обʼєкт як адреса<мавка::Обʼєкт>,
        Р.В як адреса<мавка::Виконувач>,
        назва як адреса<мавка::Назва>,
        значення як адреса<мавка::Обʼєкт>
      ));
    }

    дія РМв1_обʼєкт_видалити_властивість(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, назва: адреса<РМв1::Назва>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_виконати_властивість(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, назва: адреса<РМв1::Назва>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<РМв1::Обʼєкт>>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_отримати_елемент(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, ключ: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_змінити_елемент(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, ключ: адреса<РМв1::Обʼєкт>, значення: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_видалити_елемент(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, ключ: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_отримати_перебір(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_додати(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_відняти(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_помножити(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_поділити(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_остача(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_неповна_частка(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_степінь(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_вліво(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_вправо_зі_заповненням(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_двійкове_і(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_двійкове_або(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_двійкове_виключне_або(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_двійкове_не(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_більше(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_менше(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_рівно(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_містить(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_є(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, аргумент: адреса<РМв1::Обʼєкт>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_відʼємне(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_числове(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_заперечити(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_збільшити(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    дія РМв1_обʼєкт_зменшити(обʼєкт: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>): РМв1::Результат {
      вернути РМв1::Результат {
        падіння = пусто,
        значення = пусто
      };
    }

    місцева дія нативна_дія_модуля_мавка_завантажити_РМв1(обʼєкт_нативної_дії: адреса<Обʼєкт>, В: адреса<Виконувач>, обʼєкт_я: адреса<Обʼєкт>, аргументи: адреса<Накопичувач<адреса<Обʼєкт>>>, іменовані_аргументи: адреса<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>): Результат {
      якщо аргументи.розмір > 0 {
        ціль обʼєкт_аргумента_шляху = аргументи.дані[0];
        ціль розмір_ю8_шляху: позитивне = 0;
        ціль ю8_шляху: Ю8 = пусто;
        якщо скомпіювати_значення_обʼєкта_юнікоду_як_Ю8(обʼєкт_аргумента_шляху, В, розмір_ю8_шляху::адреса, ю8_шляху::адреса) == ні {
          вернути результат_падіння(пусто, пусто);
        }
        МаМа::надрукувати_ю8(ю8_шляху);
        ціль завантажити_РМв1 = mavka_load_shared_object_function_ptr_from_file(ю8_шляху, ю8"завантажити_РМв1") як (Р: адреса<РМв1::Розширення>) -> ніщо;
        якщо завантажити_РМв1 == пусто {
          МаМа::надрукувати_ю8(ю8"Помилка завантаження функції з файлу");
          вернути результат_падіння(пусто, пусто);
        }
        ціль розширення = виділити<РМв1::Розширення>();
        розширення.версія = РМв1::ВерсіяРозширення {
          мажор = РМв1::МАЖОР,
          мінор = РМв1::МІНОР,
          патч = РМв1::ПАТЧ
        };
        розширення.дані = пусто;
        розширення.В = В як адреса<РМв1::Виконувач>;
        розширення.виділити_падіння = пусто;
        розширення.обʼєкт_модуля_розширення = пусто;
        розширення.обʼєкт_логічного_так = пусто;
        розширення.обʼєкт_логічного_ні = пусто;
        розширення.надрукувати_Ю8 = РМв1_надрукувати_Ю8;
        розширення.надрукувати_обʼєкт = РМв1_надрукувати_обʼєкт;
        розширення.взяти_файл = РМв1_взяти_файл;
        розширення.зберегти_обʼєкт = РМв1_зберегти_обʼєкт;
        розширення.видалити_збережений_обʼєкт = РМв1_видалити_збережений_обʼєкт;
        розширення.назва_з_Ю8 = РМв1_назва_з_Ю8;
        розширення.створити_нативну_дію = РМв1_створити_нативну_дію;
        розширення.створити_число = РМв1_створити_число;
        розширення.створити_текст_з_Ю8 = РМв1_створити_текст_з_Ю8;
        розширення.створити_юнікод_з_Ю8 = РМв1_створити_юнікод_з_Ю8;
        розширення.створити_модуль = РМв1_створити_модуль;
        розширення.створити_список = РМв1_створити_список;
        розширення.створити_словник = РМв1_створити_словник;
        розширення.створити_обʼєкт = РМв1_створити_обʼєкт;
        розширення.обʼєкт_виконати_обʼєкт = РМв1_обʼєкт_виконати_обʼєкт;
        розширення.обʼєкт_отримати_властивість = РМв1_обʼєкт_отримати_властивість;
        розширення.обʼєкт_змінити_властивість = РМв1_обʼєкт_змінити_властивість;
        розширення.обʼєкт_видалити_властивість = РМв1_обʼєкт_видалити_властивість;
        розширення.обʼєкт_виконати_властивість = РМв1_обʼєкт_виконати_властивість;
        розширення.обʼєкт_отримати_елемент = РМв1_обʼєкт_отримати_елемент;
        розширення.обʼєкт_змінити_елемент = РМв1_обʼєкт_змінити_елемент;
        розширення.обʼєкт_видалити_елемент = РМв1_обʼєкт_видалити_елемент;
        розширення.обʼєкт_отримати_перебір = РМв1_обʼєкт_отримати_перебір;
        розширення.обʼєкт_додати = РМв1_обʼєкт_додати;
        розширення.обʼєкт_відняти = РМв1_обʼєкт_відняти;
        розширення.обʼєкт_помножити = РМв1_обʼєкт_помножити;
        розширення.обʼєкт_поділити = РМв1_обʼєкт_поділити;
        розширення.обʼєкт_остача = РМв1_обʼєкт_остача;
        розширення.обʼєкт_неповна_частка = РМв1_обʼєкт_неповна_частка;
        розширення.обʼєкт_степінь = РМв1_обʼєкт_степінь;
        розширення.обʼєкт_вліво = РМв1_обʼєкт_вліво;
        розширення.обʼєкт_вправо_зі_заповненням = РМв1_обʼєкт_вправо_зі_заповненням;
        розширення.обʼєкт_двійкове_і = РМв1_обʼєкт_двійкове_і;
        розширення.обʼєкт_двійкове_або = РМв1_обʼєкт_двійкове_або;
        розширення.обʼєкт_двійкове_виключне_або = РМв1_обʼєкт_двійкове_виключне_або;
        розширення.обʼєкт_двійкове_не = РМв1_обʼєкт_двійкове_не;
        розширення.обʼєкт_більше = РМв1_обʼєкт_більше;
        розширення.обʼєкт_менше = РМв1_обʼєкт_менше;
        розширення.обʼєкт_рівно = РМв1_обʼєкт_рівно;
        розширення.обʼєкт_містить = РМв1_обʼєкт_містить;
        розширення.обʼєкт_є = РМв1_обʼєкт_є;
        розширення.обʼєкт_відʼємне = РМв1_обʼєкт_відʼємне;
        розширення.обʼєкт_числове = РМв1_обʼєкт_числове;
        розширення.обʼєкт_заперечити = РМв1_обʼєкт_заперечити;
        розширення.обʼєкт_збільшити = РМв1_обʼєкт_збільшити;
        розширення.обʼєкт_зменшити = РМв1_обʼєкт_зменшити;
        завантажити_РМв1(розширення);
      }
      вернути результат_успіх(пусто);
    }

    місцева дія заповнити_модуль_мавка(В: адреса<Виконувач>, обʼєкт_модуля: адреса<Обʼєкт>) {
      обʼєкт_змінити_властивість(обʼєкт_модуля, В, назва_з_Ю8(В, ю8"завантажити_РМв1"), створити_нативну_дію(В, назва_з_Ю8(В, ю8"завантажити_РМв1"), нативна_дія_модуля_мавка_завантажити_РМв1));
    }
  }
}