взяти визначення МаМа;
взяти визначення версія;

дія нативна_дія_друк(М: комірка<мама::Машина>, місцезнаходження: комірка<мама::Місцезнаходження>, обʼєкт_нативної_дії: комірка<мама::Обʼєкт>, аргументи: комірка<вектор<мама::Аргумент>>): мама::Результат {
  якщо аргументи.довжина > 0 {
    змінна х = 0;
    поки х < аргументи.довжина {
      мама::вивести_значення(аргументи.дані[х].значення);
      якщо х != аргументи.довжина - 1 {
        біб::вивести_ю8(ю8" ");
      }
      х = х + 1;
    }
  }
  біб::друк_ю8(ю8"");
  вернути мама::результат_значення(мама::Значення { мама::ЗПусто });
}

дія нативна_дія_вивести(М: комірка<мама::Машина>, місцезнаходження: комірка<мама::Місцезнаходження>, обʼєкт_нативної_дії: комірка<мама::Обʼєкт>, аргументи: комірка<вектор<мама::Аргумент>>): мама::Результат {
  якщо аргументи.довжина > 0 {
    змінна х = 0;
    поки х < аргументи.довжина {
      мама::вивести_значення(аргументи.дані[х].значення);
      х = х + 1;
    }
  } інакше {
    біб::вивести_ю8(ю8"");
  }
  вернути мама::результат_значення(мама::Значення { мама::ЗПусто });
}

дія нативна_дія_друк_розмір_стопки(М: комірка<мама::Машина>, місцезнаходження: комірка<мама::Місцезнаходження>, обʼєкт_нативної_дії: комірка<мама::Обʼєкт>, аргументи: комірка<вектор<мама::Аргумент>>): мама::Результат {
  біб::друк_позитивне(М.стопка.довжина);
  вернути мама::результат_значення(мама::Значення { мама::ЗПусто });
}

дія друк_стопка(М: комірка<мама::Машина>) {
  змінна х = 0;
  поки х < М.стопка.довжина {
    мама::друк_значення(М.стопка.дані[х]);
    х = х + 1;
  }
}

дія знайти_інформацію_модуля_бібліотеки_мавки(М: комірка<мама::Машина>, шлях: памʼять<п8>): мама::ІнформаціяМодуляБібліотекиМавки {
  якщо М.інформація_бібліотеки_мавки == пусто {
    вернути мама::ІнформаціяМодуляБібліотекиМавки { пусто, пусто, пусто };
  }
  ціль слово_шляху = мама::отримати_або_створити_слово(М, шлях);
  змінна х = 0;
  поки х < М.інформація_бібліотеки_мавки.кількість_модулів {
    ціль модуль = М.інформація_бібліотеки_мавки.модулі[х];
    ціль слово_шляху_модуля = мама::отримати_або_створити_слово(М, модуль.шлях);
    якщо слово_шляху == слово_шляху_модуля {
      вернути модуль;
    }
    х = х + 1;
  }
  вернути мама::ІнформаціяМодуляБібліотекиМавки { пусто, пусто, пусто };
}

дія взяти_біб(М: комірка<мама::Машина>, місцезнаходження: комірка<мама::Місцезнаходження>, середовище: комірка<мама::Середовище>, шлях: памʼять<п8>): мама::Результат {
  ціль слово_шляху = мама::отримати_або_створити_слово(М, шлях);
  якщо перевірити_чи_карта_містить_значення<комірка<мама::Слово>, комірка<мама::Обʼєкт>>(М.взяті_модулі_бібліотеки_мавки, слово_шляху) != 0 {
    вернути мама::результат_значення(мама::Значення { мама::ЗОбʼєкт, дані = отримати_значення_з_карти<комірка<мама::Слово>, комірка<мама::Обʼєкт>>(М.взяті_модулі_бібліотеки_мавки, слово_шляху, пусто) });
  }
  ціль інформація_модуля_бібліотеки_мавки = знайти_інформацію_модуля_бібліотеки_мавки(М, шлях);
  якщо інформація_модуля_бібліотеки_мавки.дія_завантаження == пусто {
    вернути мама::результат_помилка_обʼєкт(мама::створити_помилку_П19_модуль_біб_не_знайдено(М, місцезнаходження, шлях));
  }
  ціль обʼєкт_модуля = мама::створити_обʼєкт_модуль(М, мама::отримати_або_створити_слово(М, інформація_модуля_бібліотеки_мавки.назва_модуля));
  змінити_значення_карти<комірка<мама::Слово>, комірка<мама::Обʼєкт>>(М.взяті_модулі_бібліотеки_мавки, слово_шляху, обʼєкт_модуля);
  ціль р = інформація_модуля_бібліотеки_мавки.дія_завантаження(М, місцезнаходження, середовище, обʼєкт_модуля);
  якщо р.успіх == 0 {
    вернути р;
  }
  вернути мама::результат_значення(мама::Значення { мама::ЗОбʼєкт, дані = обʼєкт_модуля });
}

дія друк_допомога() {
  біб::вивести_ю8(ю8"\e[0m★\e[0;94m★\e[0;93m★\e[0;91m★\e[0m ");
  біб::вивести_ю8(зʼєднати_ю8(ю8"Мавка ", ВЕРСІЯ_МАВКИ));
  біб::друк_ю8(ю8" \e[0;91m★\e[0;93m★\e[0;94m★\e[0m★\e[0m");
  біб::друк_ю8(ю8"");
  біб::друк_ю8(ю8"Використання:");
  біб::друк_ю8(ю8"  мавка");
  біб::друк_ю8(ю8"  мавка [...опції] <модуль.м> [...аргументи]");
  біб::друк_ю8(ю8"  мавка [...опції] <команда> [...аргументи]");
  біб::друк_ю8(ю8"");
  біб::друк_ю8(ю8"Доступні команди:");
  біб::друк_ю8(ю8"  <модуль.м> — виконати модуль");
  біб::друк_ю8(ю8"    Опції: немає");
  біб::друк_ю8(ю8"");
  біб::друк_ю8(ю8"  [без команди] — запустити Діалог");
  біб::друк_ю8(ю8"    Опції: такі ж як і для виконання модуля");
  біб::друк_ю8(ю8"");
  біб::друк_ю8(ю8"  версія — показати версію Мавки");
  біб::друк_ю8(ю8"    Опції: немає");
  біб::друк_ю8(ю8"");
  біб::друк_ю8(ю8"  допомога — показати це повідолення");
  біб::друк_ю8(ю8"    Опції: немає");
}

дія зробити_перевірку_утилізатора(М: комірка<мама::Машина>) {
//  біб::друк_ю8(ю8"Перевірка утилізатора");
//  якщо М.утилізатор.кількість_обʼєктів != М.утилізатор.кількість_безсмертних_обʼєктів {
//    біб::вивести_ю8(ю8"Кількість обʼєктів: ");
//    біб::друк_позитивне(М.утилізатор.кількість_обʼєктів);
//    біб::вивести_ю8(ю8"Кількість безсмертних: ");
//    біб::друк_позитивне(М.утилізатор.кількість_безсмертних_обʼєктів);
//    змінна обʼєкт = М.утилізатор.початок_обʼєктів;
//    поки обʼєкт != пусто {
//      біб::вивести_позитивне(обʼєкт.безсмертний);
//      біб::вивести_ю8(ю8" ");
//      мама::друк_значення(мама::Значення { мама::ЗОбʼєкт, дані = обʼєкт });
//      обʼєкт = обʼєкт.наступний_обʼєкт;
//    }
//  }
//  якщо М.утилізатор.кількість_середовищ != 1 {
//    біб::вивести_ю8(ю8"Кількість середовищ: ");
//    біб::друк_позитивне(М.утилізатор.кількість_середовищ);
//  }
}

структура ДаніДіалогу {
  М: комірка<мама::Машина>;
  середовище: комірка<мама::Середовище>;
}

дія діалог_виконати(дані: невідома_комірка, код: памʼять<п8>) {
  якщо strcmp(код, ю8"") == 0 {
  } інакше {
    ціль дані_діалогу = дані як комірка<ДаніДіалогу>;
    ціль текст_коду = виділити<ТекстКоду>();
    текст_коду.шлях = ю8"діалог";
    текст_коду.значення = код;
    ціль результат_розбору = розібрати_мавку(текст_коду);
    якщо результат_розбору.успіх == 0 {
      біб::друк_ю8(результат_розбору.помилка.повідомлення);
    } інакше {
      результат_розбору.тіло.розмір = 1;
      ціль код_тіла = створити_вектор<мама::Вказівка>();
      ціль результат_компіляції = мама::скомпілювати(дані_діалогу.М, пусто, код_тіла, результат_розбору.тіло.елементи[0]);
      якщо результат_компіляції.успіх == 0 {
        біб::друк_ю8(результат_компіляції.помилка.повідомлення);
      } інакше {
        ціль результат = мама::запустити(дані_діалогу.М, код_тіла, дані_діалогу.середовище);
        якщо результат.успіх == 0 {
          ціль значення_помилки = результат.значення;
          якщо мама::перевірити_чи_значення_є(дані_діалогу.М, значення_помилки, дані_діалогу.М.структура_помилка) {
            біб::вивести_ю8(ю8"Не вдалось зловити: ");
            якщо мама::перевірити_чи_значення_є(дані_діалогу.М, значення_помилки, дані_діалогу.М.структура_помилка) {
              ціль повідомлення = мама::отримати_властивість_обʼєкта(значення_помилки.дані як комірка<мама::Обʼєкт>, мама::отримати_або_створити_слово(дані_діалогу.М, ю8"повідомлення"));
              мама::друк_значення(повідомлення);
            } інакше {
              мама::друк_значення(значення_помилки);
            }
          } інакше {
            біб::вивести_ю8(ю8"Не вдалось зловити: ");
            мама::друк_значення(значення_помилки);
          }
        } інакше {
          мама::друк_значення(результат.значення);
        }
      }
    }
  }
}

дія запустити_діалог(М: комірка<мама::Машина>): ц32 {
  ціль взятий_модуль = виділити<мама::ВзятийМодуль>();
  взятий_модуль.кореневий_взятий_модуль = взятий_модуль;
  М.кореневий_взятий_модуль = взятий_модуль;
  взятий_модуль.слово_шляху = мама::отримати_або_створити_слово(М, ю8"діалог");
  мама::додати_взятий_модуль(М, взятий_модуль);
  ціль обʼєкт_модуля = мама::зробити_безсмертним(М, мама::створити_обʼєкт(М, мама::ОМодуль));
  взятий_модуль.обʼєкт_модуля = обʼєкт_модуля;
  обʼєкт_модуля.с = М.структура_модуль;
  обʼєкт_модуля.модуль_слово = мама::отримати_або_створити_слово(М, ю8"діалог");
  обʼєкт_модуля.модуль_взятий_модуль = взятий_модуль;
  ціль середовище = мама::створити_середовище(М, М.глобальне_середовище);
  середовище.обʼєкт_модуля = обʼєкт_модуля;
  ціль слово_я = мама::отримати_або_створити_слово(М, ю8"я");
  мама::змінити_субʼєкт_в_середовищі(середовище, слово_я, мама::Значення { мама::ЗОбʼєкт, дані = обʼєкт_модуля });
  мама::додати_слід(М, мама::Слід { пусто, середовище, обʼєкт_дії = пусто, обʼєкт_модуля = обʼєкт_модуля });
  біб::друк_ю8(зʼєднати_ю8(ю8"Діалог Мавки ", ВЕРСІЯ_МАВКИ));
  ціль дані_діалогу = виділити<ДаніДіалогу>();
  дані_діалогу.М = М;
  дані_діалогу.середовище = середовище;
  запустити_інтерактивний_термінал(дані_діалогу, діалог_виконати);
  вернути 0;
}

дія запустити_модуль(М: комірка<мама::Машина>, шлях: памʼять<п8>): ц32 {
  ціль результат = мама::взяти_модуль_за_шляхом(М, пусто, пусто, шлях);
  якщо результат.успіх == 0 {
    ціль значення_помилки = результат.значення;
    якщо значення_помилки.тип == мама::ЗОбʼєкт {
      ціль обʼєкт_помилки = значення_помилки.дані як комірка<мама::Обʼєкт>;
      ціль місцезнаходження = обʼєкт_помилки.місцезнаходження_помилки;
      якщо місцезнаходження != пусто {
        якщо місцезнаходження.текст_коду.значення != пусто {
          біб::вивести_ю8(ю8"Не вдалось зловити в ");
          біб::вивести_ю8(отримати_відносний_шлях(місцезнаходження.текст_коду.шлях));
          біб::вивести_ю8(ю8":");
          біб::вивести_позитивне(місцезнаходження.рядок);
          біб::вивести_ю8(ю8":");
          біб::вивести_позитивне(місцезнаходження.стовпець);
          біб::вивести_ю8(ю8": ");
          якщо мама::перевірити_чи_значення_є(М, значення_помилки, М.структура_помилка) {
            ціль повідомлення = мама::отримати_властивість_обʼєкта(значення_помилки.дані як комірка<мама::Обʼєкт>, мама::отримати_або_створити_слово(М, ю8"повідомлення"));
            мама::друк_значення(повідомлення);
          } інакше {
            мама::друк_значення(значення_помилки);
          }
          ціль витнутий_рядок = витнути_рядок_для_помилки(місцезнаходження.текст_коду.значення, місцезнаходження.рядок, місцезнаходження.стовпець);
          ціль рядок_ю8 = перетворити_позитивне_в_ю8(місцезнаходження.рядок);
          ціль рядок_ю8_довжина = довжина_ю8(рядок_ю8);
          біб::вивести_ю8(рядок_ю8);
          біб::вивести_ю8(ю8"| ");
          біб::друк_ю8(витнутий_рядок.значення);
          біб::друк_ю8(повторити_ю8(ю8" ", (витнутий_рядок.новий_стовпець - 1) + рядок_ю8_довжина + 2, ю8"^"));
        }
      } інакше {
        біб::вивести_ю8(ю8"Не вдалось зловити: ");
        якщо мама::перевірити_чи_значення_є(М, значення_помилки, М.структура_помилка) {
          ціль повідомлення = мама::отримати_властивість_обʼєкта(значення_помилки.дані як комірка<мама::Обʼєкт>, мама::отримати_або_створити_слово(М, ю8"повідомлення"));
          мама::друк_значення(повідомлення);
        } інакше {
          мама::друк_значення(значення_помилки);
        }
      }
    } інакше {
      біб::вивести_ю8(ю8"Не вдалось зловити: ");
      мама::друк_значення(значення_помилки);
    }
    якщо М.сліди.довжина > 0 {
      обернути_вектор<мама::Слід>(М.сліди);
      біб::друк_ю8(ю8"");
      біб::друк_ю8(ю8"Сліди:");
      змінна є_сліди = 0;
      змінна х = 0;
      поки х < М.сліди.довжина {
        ціль слід = М.сліди.дані[х];
        якщо слід.обʼєкт_дії != пусто {
          є_сліди = 1;
          змінна назва_дії = ю8"<без назви>";
          якщо слід.обʼєкт_дії.дія_слово != пусто {
            назва_дії = слід.обʼєкт_дії.дія_слово.назва;
          }
          ціль шлях_дії = отримати_відносний_шлях(слід.місцезнаходження.текст_коду.шлях);
          ціль рядок_дії = слід.місцезнаходження.рядок;
          ціль стовпець_дії = слід.місцезнаходження.стовпець;
          біб::вивести_ю8(ю8"  ");
          біб::вивести_ю8(назва_дії);
          біб::вивести_ю8(ю8" в ");
          біб::вивести_ю8(шлях_дії);
          біб::вивести_ю8(ю8":");
          біб::вивести_позитивне(рядок_дії);
          біб::вивести_ю8(ю8":");
          біб::друк_позитивне(стовпець_дії);
        }
        х = х + 1;
      }
      якщо є_сліди == 0 {
        біб::друк_ю8(ю8"  немає");
      }
    }
  } інакше {
    якщо М.стопка.довжина != 0 {
      біб::друк_ю8(ю8"---");
      біб::друк_ю8(ю8"ВНУТРІШНЯ ПОМИЛКА: стопка не пуста після виконання!");
      біб::вивести_ю8(ю8"Розмір стопки: ");
      біб::друк_позитивне(М.стопка.довжина);
      біб::друк_ю8(ю8"Значення стопки (верх знизу):");
      друк_стопка(М);
      біб::друк_ю8(ю8"---");
    }
    якщо М.сліди.довжина != 0 {
      біб::друк_ю8(ю8"---");
      біб::друк_ю8(ю8"ВНУТРІШНЯ ПОМИЛКА: сліди не пусті після виконання!");
      біб::друк_ю8(ю8"---");
    }
    мама::утилізувати(М);
    зробити_перевірку_утилізатора(М);
  }
  вернути 0;
}

зовнішня дія стартувати_мавку(кількість_аргументів: ц32, аргументи: памʼять<памʼять<п8>>): ц32 {
  ціль залишок_аргументів = створити_вектор<памʼять<п8>>();
  змінна х = 1;
  поки х < кількість_аргументів {
    ціль аргумент = аргументи[х];
    додати_до_вектору<памʼять<п8>>(залишок_аргументів, аргумент);
    х = х + 1;
  }
  ціль М = мама::створити_машину(отримати_шлях_до_папки_запуску());
  ціль обʼєкт_списку_аргументів = мама::зробити_безсмертним(М, мама::створити_обʼєкт_список(М));
  мама::змінити_субʼєкт_в_середовищі(М.глобальне_середовище, мама::отримати_або_створити_слово(М, ю8"аргументи"), мама::Значення { мама::ЗОбʼєкт, дані = обʼєкт_списку_аргументів });
  ціль обʼєкт_нативної_дії_друк = мама::зробити_безсмертним(М, мама::створити_обʼєкт_нативна_дія(М, нативна_дія_друк));
  обʼєкт_нативної_дії_друк.дія_слово = мама::отримати_або_створити_слово(М, ю8"друк");
  мама::змінити_субʼєкт_в_середовищі(М.глобальне_середовище, мама::отримати_або_створити_слово(М, ю8"друк"), мама::Значення { мама::ЗОбʼєкт, дані = обʼєкт_нативної_дії_друк });
  ціль обʼєкт_нативної_дії_вивести = мама::зробити_безсмертним(М, мама::створити_обʼєкт_нативна_дія(М, нативна_дія_вивести));
  обʼєкт_нативної_дії_вивести.дія_слово = мама::отримати_або_створити_слово(М, ю8"вивести");
  мама::змінити_субʼєкт_в_середовищі(М.глобальне_середовище, мама::отримати_або_створити_слово(М, ю8"вивести"), мама::Значення { мама::ЗОбʼєкт, дані = обʼєкт_нативної_дії_вивести });
  ціль обʼєкт_нативної_дії_друк_розмір_стопки = мама::зробити_безсмертним(М, мама::створити_обʼєкт_нативна_дія(М, нативна_дія_друк_розмір_стопки));
  обʼєкт_нативної_дії_друк_розмір_стопки.дія_слово = мама::отримати_або_створити_слово(М, ю8"друк_розмір_стопки");
  мама::змінити_субʼєкт_в_середовищі(М.глобальне_середовище, мама::отримати_або_створити_слово(М, ю8"друк_розмір_стопки"), мама::Значення { мама::ЗОбʼєкт, дані = обʼєкт_нативної_дії_друк_розмір_стопки });
  мама::завантажити_бібліотеку_мавки(М);
  М.взяти_біб = взяти_біб;
  якщо залишок_аргументів.довжина == 0 {
    вернути запустити_діалог(М);
  }
  ціль перший_аргумент = залишок_аргументів.дані[0];
  якщо strcmp(перший_аргумент, ю8"версія") == 0 {
    біб::друк_ю8(ВЕРСІЯ_МАВКИ);
    вернути 0;
  }
  якщо strcmp(перший_аргумент, ю8"допомога") == 0 {
    друк_допомога();
    вернути 0;
  }
  х = 1;
  поки х < залишок_аргументів.довжина {
    ціль обʼєкт_тексту = мама::зробити_безсмертним(М, мама::створити_обʼєкт_текст(М, залишок_аргументів.дані[х]));
    мама::додати_до_вектору<мама::Значення>(обʼєкт_списку_аргументів.список_елементи, мама::Значення { мама::ЗОбʼєкт, дані = обʼєкт_тексту });
    х = х + 1;
  }
  вернути запустити_модуль(М, перший_аргумент);
}