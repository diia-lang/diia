взяти визначення мавка;

зовнішня дія прочитати_файл(шлях: Ю8): Ю8;

секція мавка {
  місцева дія результат_успіх(обʼєкт: адреса<Обʼєкт>): Результат {
    вернути Результат { успіх = так, значення = обʼєкт, місцезнаходження_падіння = пусто };
  }

  місцева дія результат_падіння(обʼєкт: адреса<Обʼєкт>, місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>): Результат {
    вернути Результат { успіх = ні, значення = обʼєкт, місцезнаходження_падіння = місцезнаходження_падіння };
  }

  дія машина_обробник_взяття_модуля(М: адреса<МаМа::Машина>, обʼєкт_модуля_запису: адреса<МаМа::ОбʼєктМодуля>, назва_паку: Ю8, шлях: Накопичувач<Ю8>): МаМа::обʼєкт_або_стан_падіння {
    ціль накопичувач_шляху_ю8 = зробити_накопичувач_ю8();
    якщо назва_паку != пусто {
      покласти_в_накопичувач_ю8(накопичувач_шляху_ю8::адреса, назва_паку);
      покласти_в_накопичувач_ю8(накопичувач_шляху_ю8::адреса, ю8":");
    }
    змінна ціль пш: позитивне = 0;
    поки пш < шлях.розмір {
      покласти_в_накопичувач_ю8(накопичувач_шляху_ю8::адреса, шлях.дані[пш]);
      якщо пш < шлях.розмір - 1 {
        покласти_в_накопичувач_ю8(накопичувач_шляху_ю8::адреса, ю8"/");
      }
      пш += 1;
    }
    покласти_в_накопичувач_ю8(накопичувач_шляху_ю8::адреса, ю8".м");
    ціль ю8_шлях = виділити_ю8_з_накопичувача_ю8(накопичувач_шляху_ю8::адреса);
    звільнити_значення_накопичувача_ю8(накопичувач_шляху_ю8);
    ціль значення_файлу = прочитати_файл(ю8_шлях);
    якщо значення_файлу == пусто {
      ціль накопичувач_тексту_помилки = зробити_накопичувач_ю8();
      покласти_в_накопичувач_ю8(накопичувач_тексту_помилки::адреса, ю8"Не вдалося прочитати файл \"");
      покласти_в_накопичувач_ю8(накопичувач_тексту_помилки::адреса, ю8_шлях);
      покласти_в_накопичувач_ю8(накопичувач_тексту_помилки::адреса, ю8"\"");
      ціль ю8_помилки = виділити_ю8_з_накопичувача_ю8(накопичувач_тексту_помилки::адреса);
      звільнити_значення_накопичувача_ю8(накопичувач_тексту_помилки);
      ціль обʼєкт_юнікоду = МаМа::виділити_обʼєкт_юнікоду_з_ю8(М, ю8_помилки);
      звільнити(ю8_помилки);
      МаМа::увімкнути_стан_падіння(М, пусто);
      вернути обʼєкт_юнікоду як адреса<МаМа::Обʼєкт>;
    }
    // потім: перевірити чи модуль за таким шляхом вже взято
    ціль текст_коду = виділити<ТекстКоду>();
    текст_коду.шлях = виділити_копію_ю8(ю8_шлях);
    текст_коду.значення = значення_файлу;
    ціль результат_розбору_мавки = розібрати_мавку(текст_коду);
    якщо результат_розбору_мавки.успіх == 0 {
      ціль обʼєкт_тексту = МаМа::виділити_обʼєкт_юнікоду_з_ю8(М, результат_розбору_мавки.помилка.повідомлення);
      змінна ціль місцезнаходження_падіння: адреса<МаМа::МісцезнаходженняПадіння> = пусто;
      якщо результат_розбору_мавки.помилка.місцезнаходження != пусто {
        місцезнаходження_падіння  = МаМа::виділити_місцезнаходження_падіння(
          текст_коду.шлях,
          результат_розбору_мавки.помилка.місцезнаходження.рядок як п32
        );
      }
      МаМа::увімкнути_стан_падіння(М, місцезнаходження_падіння);
      вернути обʼєкт_тексту як адреса<МаМа::Обʼєкт>;
    }
    ціль код = МаМа::виділити_код(ю8_шлях);
    ціль контекст_компіляції = виділити_контекст_компіляції();
    ціль помилка_компіляції = скомпілювати_тіло(М, контекст_компіляції, код, результат_розбору_мавки.тіло);
    якщо помилка_компіляції != пусто {
      ціль обʼєкт_тексту = МаМа::виділити_обʼєкт_юнікоду_з_ю8(М, помилка_компіляції.повідомлення);
      змінна ціль місцезнаходження_падіння: адреса<МаМа::МісцезнаходженняПадіння> = пусто;
      якщо помилка_компіляції.місцезнаходження != пусто {
        місцезнаходження_падіння  = МаМа::виділити_місцезнаходження_падіння(
          текст_коду.шлях,
          помилка_компіляції.місцезнаходження.рядок як п32
        );
      }
      МаМа::увімкнути_стан_падіння(М, місцезнаходження_падіння);
      вернути обʼєкт_тексту як адреса<МаМа::Обʼєкт>;
    }
    мавка::звільнити_контекст_компіляції(контекст_компіляції);
    звільнити_результат_розбору_мавки(результат_розбору_мавки);
    звільнити(текст_коду.шлях);
    звільнити(значення_файлу);
    звільнити(текст_коду);
    МаМа::надрукувати_код(код);
    ціль результат_виконання_коду = МаМа::виконати_код(М, М.глобальне_середовище, код, пусто, обʼєкт_модуля_запису, пусто);
    вернути результат_виконання_коду;
  }

  дія машина_обробник_взяття_біб(М: адреса<МаМа::Машина>, обʼєкт_модуля_запису: адреса<МаМа::ОбʼєктМодуля>, шлях: Накопичувач<Ю8>): МаМа::обʼєкт_або_стан_падіння {
    вернути пусто;
  }

  місцева дія створити_виконувач(): адреса<Виконувач> {
    ціль В = виділити<Виконувач>();
    В.М = МаМа::виділити_машину();
    В.М.дані_виконувача = В;
    В.М.обробник_взяття_модуля = машина_обробник_взяття_модуля;
    В.М.обробник_взяття_біб = машина_обробник_взяття_біб;
    вернути В;
  }

  місцева дія знищити_виконувач(В: адреса<Виконувач>) {
    МаМа::звільнити_машину(В.М);
    звільнити(В);
  }

  місцева дія почати_діалог(В: адреса<Виконувач>, середовище: адреса<Середовище>): Результат {
    // ...
  }

  структура ДаніНативноїДії {
    нативна_дія: НативнаДія;
  }

  дія нативна_дія_нативної_дії(обʼєкт_нативної_дії: адреса<МаМа::ОбʼєктНативноїДії>, М: адреса<МаМа::Машина>, обʼєкт_я: адреса<МаМа::Обʼєкт>, аргументи: адреса<Накопичувач<адреса<МаМа::Обʼєкт>>>, іменовані_аргументи: адреса<Реєстр<адреса<МаМа::Назва>, адреса<МаМа::Обʼєкт>>>): адреса<МаМа::Обʼєкт> {
    ціль дані_нативної_дії = обʼєкт_нативної_дії.дані як адреса<ДаніНативноїДії>;
    ціль результат_нативної_дії = дані_нативної_дії.нативна_дія(обʼєкт_нативної_дії як адреса<Обʼєкт>, М.дані_виконувача як адреса<Виконувач>, обʼєкт_я як адреса<Обʼєкт>, аргументи як адреса<Накопичувач<адреса<Обʼєкт>>>, іменовані_аргументи як адреса<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>);
    якщо результат_нативної_дії.успіх == ні {
      МаМа::увімкнути_стан_падіння(М, результат_нативної_дії.місцезнаходження_падіння як адреса<МаМа::МісцезнаходженняПадіння>);
      вернути результат_нативної_дії.значення як адреса<МаМа::Обʼєкт>;
    }
    вернути результат_нативної_дії.значення як адреса<МаМа::Обʼєкт>;
  }

  дія відклик_перед_звільненням_нативної_дії(обʼєкт_нативної_дії: адреса<МаМа::ОбʼєктНативноїДії>, М: адреса<МаМа::Машина>) {
    звільнити(обʼєкт_нативної_дії.дані);
  }

  місцева дія створити_нативну_дію(В: адреса<Виконувач>, назва: Ю8, значення: НативнаДія): адреса<Обʼєкт> {
    ціль дані_нативної_дії = виділити<ДаніНативноїДії>();
    дані_нативної_дії.нативна_дія = значення;
    ціль обʼєкт_нативної_дії = МаМа::виділити_обʼєкт_нативної_дії(В.М, МаМа::назва(В.М, назва), нативна_дія_нативної_дії, дані_нативної_дії, відклик_перед_звільненням_нативної_дії);
    вернути обʼєкт_нативної_дії як адреса<Обʼєкт>;
  }

  місцева дія створити_число(В: адреса<Виконувач>, значення: д64): адреса<Обʼєкт> {
    ціль обʼєкт_числа = МаМа::виділити_обʼєкт_числа(В.М, значення);
    вернути обʼєкт_числа як адреса<Обʼєкт>;
  }

  місцева дія створити_текст(В: адреса<Виконувач>, значення: памʼять<п8>): адреса<Обʼєкт> {
    ціль обʼєкт_тексту = МаМа::виділити_обʼєкт_тексту(В.М, значення);
    вернути обʼєкт_тексту як адреса<Обʼєкт>;
  }

  місцева дія створити_обʼєкт(В: адреса<Виконувач>): адреса<Обʼєкт> {
    ціль обʼєкт = МаМа::виділити_складений_обʼєкт(В.М, В.М.обʼєкт_структури_обʼєкт);
    вернути обʼєкт як адреса<Обʼєкт>;
  }

  місцева дія отримати_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: Ю8): Результат {
    ціль обʼєкт_властивості = МаМа::обʼєкт_отримати_властивість(обʼєкт як адреса<МаМа::Обʼєкт>, В.М, МаМа::назва(В.М, назва));
    якщо В.М.стан_падіння {
      В.М.стан_падіння = ні;
      В.М.місцезнаходження_падіння = пусто;
      вернути результат_падіння(обʼєкт_властивості як адреса<Обʼєкт>, В.М.місцезнаходження_падіння як адреса<МісцезнаходженняПадіння>);
    }
    вернути результат_успіх(обʼєкт_властивості як адреса<Обʼєкт>);
  }

  місцева дія змінити_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: Ю8, значення: адреса<Обʼєкт>): Результат {
    МаМа::обʼєкт_змінити_властивість(обʼєкт як адреса<МаМа::Обʼєкт>, В.М, МаМа::назва(В.М, назва), значення як адреса<МаМа::Обʼєкт>);
    вернути результат_успіх(пусто);
  }

  місцева дія виконати_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: Ю8, аргументи: Накопичувач<адреса<Обʼєкт>>): Результат {
    // ...
  }

  місцева дія виконати_обʼєкт(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргументи: Накопичувач<адреса<Обʼєкт>>): Результат {
    // ...
  }

  місцева дія покласти_тимчасове_середовище(В: адреса<Виконувач>): адреса<Середовище> {
    ціль нове_середовище = МаМа::виділити_середовище(В.М, В.М.глобальне_середовище);
    покласти_в_накопичувач<МаМа::ЕлементІсторіїВиконання>(В.М.історія::адреса, МаМа::ЕлементІсторіїВиконання {
      обʼєкт_дії = пусто,
      середовище = нове_середовище
    });
    вернути нове_середовище як адреса<Середовище>;
  }

  місцева дія забрати_тимчасове_середовище(В: адреса<Виконувач>) {
    забрати_з_накопичувача<МаМа::ЕлементІсторіїВиконання>(В.М.історія::адреса);
  }

  місцева дія визначити(В: адреса<Виконувач>, середовище: адреса<Середовище>, назва: Ю8, обʼєкт: адреса<Обʼєкт>): Результат {
    МаМа::змінити_в_середовищі(В.М, середовище як адреса<МаМа::Середовище>, МаМа::назва(В.М, назва), обʼєкт як адреса<МаМа::Обʼєкт>);
  }

  місцева дія звернутись(В: адреса<Виконувач>, середовище: адреса<Середовище>, назва: Ю8): адреса<Обʼєкт> {
    вернути МаМа::знайти_в_середовищі(середовище як адреса<МаМа::Середовище>, МаМа::назва(В.М, назва)) як адреса<Обʼєкт>;
  }

  місцева дія визначити_нативну_дію(В: адреса<Виконувач>, середовище: адреса<Середовище>, назва: Ю8, значення: НативнаДія): Результат {
    ціль обʼєкт_нативної_дії = створити_нативну_дію(В, назва, значення);
    визначити(В, середовище, назва, обʼєкт_нативної_дії);
    вернути результат_успіх(обʼєкт_нативної_дії);
  }

  місцева дія визначити_число(В: адреса<Виконувач>, назва: Ю8, значення: д64): Результат {
    // ...
  }

  місцева дія визначити_текст(В: адреса<Виконувач>, назва: Ю8, значення: Ю8): Результат {
    // ...
  }

  місцева дія взяти_модуль(В: адреса<Виконувач>, назва: Ю8): Результат {
    ціль накопичувач_шляху = зробити_накопичувач<Ю8>();
    покласти_в_накопичувач<Ю8>(накопичувач_шляху::адреса, назва);
    ціль обʼєкт_модуля = МаМа::взяти_модуль(В.М, отримати_глобальне_середовище(В) як адреса<МаМа::Середовище>, пусто, накопичувач_шляху);
    якщо В.М.стан_падіння {
      В.М.стан_падіння = ні;
      В.М.місцезнаходження_падіння = пусто;
      вернути результат_падіння(обʼєкт_модуля як адреса<Обʼєкт>, В.М.місцезнаходження_падіння як адреса<МісцезнаходженняПадіння>);
    }
    вернути результат_успіх(обʼєкт_модуля як адреса<Обʼєкт>);
  }

  місцева дія виконати_ю8(В: адреса<Виконувач>, значення: Ю8): Результат {
    // ...
  }

  місцева дія отримати_глобальне_середовище(В: адреса<Виконувач>): адреса<Середовище> {
    вернути В.М.глобальне_середовище як адреса<Середовище>;
  }

  місцева дія виділити_місцезнаходження_падіння(шлях_до_файлу: Ю8, рядок: п32): адреса<МісцезнаходженняПадіння> {
    вернути МаМа::виділити_місцезнаходження_падіння(шлях_до_файлу, рядок) як адреса<МісцезнаходженняПадіння>;
  }

  місцева дія звільнити_місцезнаходження_падіння(місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>) {
//    МаМа::звільнити_місцезнаходження_падіння(місцезнаходження_падіння як адреса<МаМа::МісцезнаходженняПадіння>);
  }

  місцева дія отримати_шлях_до_файлу_з_місцезнаходження_падіння(місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>): Ю8 {
    ціль мп = місцезнаходження_падіння як адреса<МаМа::МісцезнаходженняПадіння>;
    вернути мп.шлях_до_файлу;
  }

  місцева дія отримати_рядок_з_місцезнаходження_падіння(місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>): п32 {
    ціль мп = місцезнаходження_падіння як адреса<МаМа::МісцезнаходженняПадіння>;
    вернути мп.рядок;
  }

  місцева дія надрукувати_обʼєкт_в_накопичувач_ю8(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, накопичувач: адреса<НакопичувачЮ8>, глибина: позитивне) {
    МаМа::надрукувати_обʼєкт_в_накопичувач_ю8(обʼєкт як адреса<МаМа::Обʼєкт>, В.М, накопичувач, глибина);
  }
}