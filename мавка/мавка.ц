взяти визначення мавка;

зовнішня дія прочитати_файл(шлях: Ю8): Ю8;

секція мавка {
  місцева дія результат_успіх(обʼєкт: адреса<Обʼєкт>): Результат {
    вернути Результат { успіх = так, значення = обʼєкт, місцезнаходження_падіння = пусто };
  }

  місцева дія результат_падіння(обʼєкт: адреса<Обʼєкт>, місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>): Результат {
    вернути Результат { успіх = ні, значення = обʼєкт, місцезнаходження_падіння = місцезнаходження_падіння };
  }

  місцева дія створити_виконувач(): адреса<Виконувач> {
    ціль В = виділити<Виконувач>();
    В.М = МаМа::виділити_машину();
    вернути В;
  }

  місцева дія знищити_виконувач(В: адреса<Виконувач>) {
    МаМа::звільнити_машину(В.М);
    звільнити(В);
  }

  місцева дія почати_діалог(В: адреса<Виконувач>, середовище: адреса<Середовище>): Результат {
    // ...
  }

  структура ДаніНативноїДії {
    В: адреса<Виконувач>;
    нативна_дія: НативнаДія;
  }

  дія нативна_дія_нативної_дії(обʼєкт_нативної_дії: адреса<МаМа::ОбʼєктНативноїДії>, М: адреса<МаМа::Машина>, обʼєкт_я: адреса<МаМа::Обʼєкт>, аргументи: адреса<Накопичувач<адреса<МаМа::Обʼєкт>>>, іменовані_аргументи: адреса<Реєстр<адреса<МаМа::Назва>, адреса<МаМа::Обʼєкт>>>): адреса<МаМа::Обʼєкт> {
    ціль дані_нативної_дії = обʼєкт_нативної_дії.дані як адреса<ДаніНативноїДії>;
    ціль результат_нативної_дії = дані_нативної_дії.нативна_дія(обʼєкт_нативної_дії як адреса<Обʼєкт>, дані_нативної_дії.В, обʼєкт_я як адреса<Обʼєкт>, аргументи як адреса<Накопичувач<адреса<Обʼєкт>>>, іменовані_аргументи як адреса<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>);
    якщо результат_нативної_дії.успіх == ні {
      МаМа::увімкнути_стан_падіння(М, результат_нативної_дії.місцезнаходження_падіння як адреса<МаМа::МісцезнаходженняПадіння>);
      вернути результат_нативної_дії.значення як адреса<МаМа::Обʼєкт>;
    }
    вернути результат_нативної_дії.значення як адреса<МаМа::Обʼєкт>;
  }

  дія відклик_перед_звільненням_нативної_дії(обʼєкт_нативної_дії: адреса<МаМа::ОбʼєктНативноїДії>, М: адреса<МаМа::Машина>) {
    звільнити(обʼєкт_нативної_дії.дані);
  }

  місцева дія створити_нативну_дію(В: адреса<Виконувач>, назва: Ю8, значення: НативнаДія): Результат {
    ціль дані_нативної_дії = виділити<ДаніНативноїДії>();
    дані_нативної_дії.В = В;
    дані_нативної_дії.нативна_дія = значення;
    ціль обʼєкт_нативної_дії = МаМа::виділити_обʼєкт_нативної_дії(В.М, МаМа::назва(В.М, назва), нативна_дія_нативної_дії, дані_нативної_дії, відклик_перед_звільненням_нативної_дії);
    вернути результат_успіх(обʼєкт_нативної_дії як адреса<Обʼєкт>);
  }

  місцева дія створити_число(В: адреса<Виконувач>, значення: д64): Результат {
    ціль обʼєкт_числа = МаМа::виділити_обʼєкт_числа(В.М, значення);
    вернути результат_успіх(обʼєкт_числа як адреса<Обʼєкт>);
  }

  місцева дія створити_текст(В: адреса<Виконувач>, значення: Ю8): Результат {
    ціль обʼєкт_тексту = МаМа::виділити_обʼєкт_тексту_з_ю8(В.М, значення);
    вернути результат_успіх(обʼєкт_тексту як адреса<Обʼєкт>);
  }

  місцева дія створити_обʼєкт(В: адреса<Виконувач>): Результат {
    ціль обʼєкт = МаМа::виділити_складений_обʼєкт(В.М, В.М.обʼєкт_структури_обʼєкт);
    вернути результат_успіх(обʼєкт як адреса<Обʼєкт>);
  }

  місцева дія отримати_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: Ю8): Результат {
    ціль обʼєкт_властивості = МаМа::обʼєкт_отримати_властивість(обʼєкт як адреса<МаМа::Обʼєкт>, В.М, МаМа::назва(В.М, назва));
    якщо В.М.стан_падіння {
      вернути результат_падіння(обʼєкт_властивості як адреса<Обʼєкт>, В.М.місцезнаходження_падіння як адреса<МісцезнаходженняПадіння>);
    }
    вернути результат_успіх(обʼєкт_властивості як адреса<Обʼєкт>);
  }

  місцева дія змінити_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: Ю8, значення: адреса<Обʼєкт>): Результат {
    МаМа::обʼєкт_змінити_властивість(обʼєкт як адреса<МаМа::Обʼєкт>, В.М, МаМа::назва(В.М, назва), значення як адреса<МаМа::Обʼєкт>);
    вернути результат_успіх(пусто);
  }

  місцева дія виконати_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: Ю8, аргументи: Накопичувач<адреса<Обʼєкт>>): Результат {
    // ...
  }

  місцева дія виконати_обʼєкт(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргументи: Накопичувач<адреса<Обʼєкт>>): Результат {
    // ...
  }

  місцева дія покласти_тимчасове_середовище(В: адреса<Виконувач>): адреса<Середовище> {
    ціль нове_середовище = МаМа::виділити_середовище(В.М, В.М.глобальне_середовище);
    покласти_в_накопичувач<МаМа::ЕлементІсторіїВиконання>(В.М.НаВикІст::адреса, МаМа::ЕлементІсторіїВиконання {
      обʼєкт_дії = пусто,
      середовище = нове_середовище
    });
    вернути нове_середовище як адреса<Середовище>;
  }

  місцева дія забрати_тимчасове_середовище(В: адреса<Виконувач>) {
    забрати_з_накопичувача<МаМа::ЕлементІсторіїВиконання>(В.М.НаВикІст::адреса);
  }

  місцева дія визначити(В: адреса<Виконувач>, середовище: адреса<Середовище>, назва: Ю8, обʼєкт: адреса<Обʼєкт>): Результат {
    МаМа::змінити_в_середовищі(середовище як адреса<МаМа::Середовище>, МаМа::назва(В.М, назва), обʼєкт як адреса<МаМа::Обʼєкт>);
  }

  місцева дія звернутись(В: адреса<Виконувач>, середовище: адреса<Середовище>, назва: Ю8): адреса<Обʼєкт> {
    вернути МаМа::знайти_в_середовищі(середовище як адреса<МаМа::Середовище>, МаМа::назва(В.М, назва)) як адреса<Обʼєкт>;
  }

  місцева дія визначити_нативну_дію(В: адреса<Виконувач>, середовище: адреса<Середовище>, назва: Ю8, значення: НативнаДія): Результат {
    ціль результат_створення_нативної_дії = створити_нативну_дію(В, назва, значення);
    якщо результат_створення_нативної_дії.успіх == ні {
      вернути результат_створення_нативної_дії;
    }
    ціль обʼєкт_нативної_дії = результат_створення_нативної_дії.значення;
    визначити(В, середовище, назва, обʼєкт_нативної_дії);
    вернути результат_успіх(обʼєкт_нативної_дії);
  }

  місцева дія визначити_число(В: адреса<Виконувач>, назва: Ю8, значення: д64): Результат {
    // ...
  }

  місцева дія визначити_текст(В: адреса<Виконувач>, назва: Ю8, значення: Ю8): Результат {
    // ...
  }

  місцева дія взяти_модуль(В: адреса<Виконувач>, назва: Ю8): Результат {
    ціль накопичувач_шляху_ю8 = зробити_накопичувач_ю8();
    покласти_в_накопичувач_ю8(накопичувач_шляху_ю8::адреса, назва);
    покласти_в_накопичувач_ю8(накопичувач_шляху_ю8::адреса, ю8".м");
    ціль шлях = виділити_ю8_з_накопичувача_ю8(накопичувач_шляху_ю8::адреса);
    звільнити_значення_накопичувача_ю8(накопичувач_шляху_ю8);
    ціль значення_файлу = прочитати_файл(шлях);
    якщо значення_файлу == пусто {
      ціль накопичувач_тексту_помилки = зробити_накопичувач_ю8();
      покласти_в_накопичувач_ю8(накопичувач_тексту_помилки::адреса, ю8"Не вдалося прочитати файл \"");
      покласти_в_накопичувач_ю8(накопичувач_тексту_помилки::адреса, шлях);
      покласти_в_накопичувач_ю8(накопичувач_тексту_помилки::адреса, ю8"\"");
      ціль ю8_помилки = виділити_ю8_з_накопичувача_ю8(накопичувач_тексту_помилки::адреса);
      звільнити_значення_накопичувача_ю8(накопичувач_тексту_помилки);
      ціль результат_створення_тексту = створити_текст(В, ю8_помилки);
      звільнити(ю8_помилки);
      якщо результат_створення_тексту.успіх == ні {
        вернути результат_створення_тексту;
      }
      вернути результат_падіння(результат_створення_тексту.значення, пусто);
    }
    // потім: перевірити чи модуль за таким шляхом вже взято
    ціль текст_коду = виділити<ТекстКоду>();
    текст_коду.шлях = виділити_копію_ю8(шлях);
    текст_коду.значення = значення_файлу;
    ціль результат_розбору_мавки = розібрати_мавку(текст_коду);
    якщо результат_розбору_мавки.успіх == 0 {
      ціль результат_створення_тексту = створити_текст(В, результат_розбору_мавки.помилка.повідомлення);
      якщо результат_створення_тексту.успіх == ні {
        вернути результат_створення_тексту;
      }
      ціль місцезнаходження_падіння = виділити_місцезнаходження_падіння(
        текст_коду.шлях,
        результат_розбору_мавки.помилка.місцезнаходження.рядок як п32,
        результат_розбору_мавки.помилка.місцезнаходження.стовпець як п32
      );
      вернути результат_падіння(результат_створення_тексту.значення, місцезнаходження_падіння);
    }
    ціль код = МаМа::виділити_код(шлях);
    ціль контекст_компіляції = виділити_контекст_компіляції();
    ціль помилка_компіляції = скомпілювати_тіло(В.М, контекст_компіляції, код, результат_розбору_мавки.тіло);
    якщо помилка_компіляції != пусто {
      // потім: помилка
      якщо помилка_компіляції.місцезнаходження != пусто {
//        надрукувати_помилку(
//          помилка_компіляції.місцезнаходження.текст_коду.шлях,
//          помилка_компіляції.місцезнаходження.рядок як п64,
//          помилка_компіляції.місцезнаходження.стовпець як п64,
//          помилка_компіляції.повідомлення
//        );
      } інакше {
//        надрукувати_помилку(помилка_компіляції.повідомлення);
      }
      вернути результат_падіння(пусто, пусто);
    }
    мавка::звільнити_контекст_компіляції(контекст_компіляції);
    звільнити_результат_розбору_мавки(результат_розбору_мавки);
    звільнити(текст_коду.шлях);
    звільнити(значення_файлу);
    звільнити(текст_коду);
//    ціль обʼєкт_модуля = МаМа::виділити_обʼєкт_модуля(М, код);
//    МаМа::записати_взятий_модуль(В.М, шлях, обʼєкт_модуля);
    МаМа::надрукувати_код(код);
    ціль результат_виконання_коду = МаМа::виконати_код(В.М, В.М.глобальне_середовище, код);
    якщо В.М.стан_падіння {
//      МаМа::видалити_взятий_модуль(В.М, шлях);
      // потім: помилка
      вернути результат_падіння(пусто, пусто);
    }
//    вернути результат_успіх(обʼєкт_модуля);
    вернути результат_успіх(пусто);
  }

  місцева дія виконати_ю8(В: адреса<Виконувач>, значення: Ю8): Результат {
    // ...
  }

  місцева дія отримати_глобальне_середовище(В: адреса<Виконувач>): адреса<Середовище> {
    вернути В.М.глобальне_середовище як адреса<Середовище>;
  }

  місцева дія виділити_місцезнаходження_падіння(шлях_до_файлу: Ю8, рядок: п32, стовпець: п32): адреса<МісцезнаходженняПадіння> {
    вернути МаМа::виділити_місцезнаходження_падіння(шлях_до_файлу, рядок, стовпець) як адреса<МісцезнаходженняПадіння>;
  }

  місцева дія звільнити_місцезнаходження_падіння(місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>) {
//    МаМа::звільнити_місцезнаходження_падіння(місцезнаходження_падіння як адреса<МаМа::МісцезнаходженняПадіння>);
  }

  місцева дія отримати_шлях_до_файлу_з_місцезнаходження_падіння(місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>): Ю8 {
    ціль мп = місцезнаходження_падіння як адреса<МаМа::МісцезнаходженняПадіння>;
    вернути мп.шлях_до_файлу;
  }

  місцева дія отримати_рядок_з_місцезнаходження_падіння(місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>): п32 {
    ціль мп = місцезнаходження_падіння як адреса<МаМа::МісцезнаходженняПадіння>;
    вернути мп.рядок;
  }

  місцева дія отримати_стовпець_з_місцезнаходження_падіння(місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>): п32 {
    ціль мп = місцезнаходження_падіння як адреса<МаМа::МісцезнаходженняПадіння>;
    вернути мп.стовпець;
  }
}