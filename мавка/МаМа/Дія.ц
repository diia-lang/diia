взяти визначення МаМа;

секція мама {
  місцева дія клонувати_дію(М: комірка<Машина>, обʼєкт_дії: комірка<Обʼєкт>): комірка<Обʼєкт> {
    якщо обʼєкт_дії.тип == ОДія {
      ціль нова_дія = створити_обʼєкт(М, ОДія);
      нова_дія.с = обʼєкт_дії.с;
      нова_дія.отримати_властивість = обʼєкт_дії.отримати_властивість;
      нова_дія.змінити_властивість = обʼєкт_дії.змінити_властивість;
      нова_дія.виконати = обʼєкт_дії.виконати;
      нова_дія.дія_слово = обʼєкт_дії.дія_слово;
      нова_дія.дія_параметри = клонувати_параметри_дії(обʼєкт_дії.дія_параметри);
      нова_дія.дія_тип_повернення = обʼєкт_дії.дія_тип_повернення;
      нова_дія.дія_тип_повернення_може_бути_пусто = обʼєкт_дії.дія_тип_повернення_може_бути_пусто;
      нова_дія.дія_вказівки = обʼєкт_дії.дія_вказівки;
      нова_дія.дія_зовнішнє_середовище = обʼєкт_дії.дія_зовнішнє_середовище;
      нова_дія.дія_я = обʼєкт_дії.дія_я;
      вернути нова_дія;
    } інакше якщо обʼєкт_дії.тип == ОНативнаДія {
      ціль нова_дія = створити_обʼєкт_нативна_дія(М, обʼєкт_дії.нативна_дія);
      нова_дія.отримати_властивість = обʼєкт_дії.отримати_властивість;
      нова_дія.змінити_властивість = обʼєкт_дії.змінити_властивість;
      нова_дія.виконати = обʼєкт_дії.виконати;
      нова_дія.дія_слово = обʼєкт_дії.дія_слово;
      нова_дія.дія_я = обʼєкт_дії.дія_я;
      нова_дія.нативна_дія_мавки = обʼєкт_дії.нативна_дія_мавки;
//      біб::вивести_ю8(ю8"клоновано дію ");
//      біб::вивести_комірку(обʼєкт_дії);
//      біб::вивести_ю8(ю8" ");
//      біб::друк_комірку(нова_дія);
      вернути нова_дія;
    } інакше {
      біб::друк_ю8(ю8"БАГ");
      вернути пусто;
    }
  }

  місцева дія клонувати_параметри_дії(параметри: комірка<вектор<ПараметрДії>>): комірка<вектор<ПараметрДії>> {
    вернути клонувати_вектор<ПараметрДії>(параметри);
  }

  дія обʼєкт_дії_отримати_властивість_дія(М: комірка<Машина>, місцезнаходження: комірка<Місцезнаходження>, обʼєкт: комірка<Обʼєкт>, слово_назви: комірка<Слово>): Результат {
    якщо слово_назви == М.база_слів.назва {
      змінна обʼєкт_тексту: комірка<Обʼєкт> = пусто;
      якщо обʼєкт.дія_слово == пусто {
        обʼєкт_тексту = створити_обʼєкт_текст(М, ю8"");
      } інакше {
        обʼєкт_тексту = створити_обʼєкт_текст(М, обʼєкт.дія_слово.назва);
      }
      вернути результат_значення(Значення { ЗОбʼєкт, дані = обʼєкт_тексту });
    }
    вернути обʼєкт_отримати_властивість_дія(М, місцезнаходження, обʼєкт, слово_назви);
  }

  дія обʼєкт_дії_змінити_властивість_дія(М: комірка<Машина>, місцезнаходження: комірка<Місцезнаходження>, обʼєкт: комірка<Обʼєкт>, слово_назви: комірка<Слово>, значення: Значення): Результат {
    вернути результат_помилка_обʼєкт(створити_помилку_П2_неможливо_змінити_властивість(М, місцезнаходження, слово_назви, Значення { ЗОбʼєкт, дані = обʼєкт }));
  }

  місцева дія створити_обʼєкт_нативна_дія(М: комірка<Машина>, нативна_дія: (комірка<Машина>, комірка<Місцезнаходження>, комірка<Обʼєкт>, комірка<вектор<Аргумент>>) -> Результат): комірка<Обʼєкт> {
    ціль обʼєкт_нативної_дії = створити_обʼєкт(М, ОНативнаДія);
    обʼєкт_нативної_дії.с = М.структура_дія;
    обʼєкт_нативної_дії.отримати_властивість = обʼєкт_дії_отримати_властивість_дія;
    обʼєкт_нативної_дії.змінити_властивість = обʼєкт_дії_змінити_властивість_дія;
    обʼєкт_нативної_дії.нативна_дія = нативна_дія;
    вернути обʼєкт_нативної_дії;
  }

  місцева дія створити_обʼєкт_дія(М: комірка<Машина>, зовнішнє_середовище: комірка<Середовище>, слово: комірка<Слово>, код_тіла: комірка<вектор<Вказівка>>, обʼєкт_типу_повернення: комірка<Обʼєкт>, тип_повернення_може_бути_пусто: позитивне): комірка<Обʼєкт> {
    ціль обʼєкт_дії = створити_обʼєкт(М, ОДія);
    обʼєкт_дії.с = М.структура_дія;
    обʼєкт_дії.отримати_властивість = обʼєкт_дії_отримати_властивість_дія;
    обʼєкт_дії.змінити_властивість = обʼєкт_дії_змінити_властивість_дія;
    обʼєкт_дії.дія_слово = слово;
    обʼєкт_дії.дія_параметри = створити_вектор<ПараметрДії>();
    обʼєкт_дії.дія_тип_повернення = обʼєкт_типу_повернення;
    обʼєкт_дії.дія_тип_повернення_може_бути_пусто = тип_повернення_може_бути_пусто;
    обʼєкт_дії.дія_вказівки = код_тіла;
    обʼєкт_дії.дія_зовнішнє_середовище = зовнішнє_середовище;
    вернути обʼєкт_дії;
  }

  дія структура_дія_виконати_дія(М: комірка<Машина>, місцезнаходження: комірка<Місцезнаходження>, обʼєкт: комірка<Обʼєкт>, аргументи: комірка<вектор<Аргумент>>): Результат {
    якщо аргументи.довжина < 1 {
      вернути результат_помилка_обʼєкт(створити_помилку_П21_неможливо_виконати(М, місцезнаходження, Значення { ЗОбʼєкт, дані = обʼєкт }));
    }
    ціль значення_першого_аргумента = аргументи.дані[0].значення;
    якщо значення_першого_аргумента.тип == ЗОбʼєкт {
      ціль обʼєкт_значення_першого_аргумента = значення_першого_аргумента.дані як комірка<Обʼєкт>;
      якщо обʼєкт_значення_першого_аргумента.тип == ОСписок {
        вернути результат_значення(значення_першого_аргумента);
      }
      ціль результат_отримання_чародії_дія = обʼєкт_значення_першого_аргумента.отримати_властивість(М, місцезнаходження, обʼєкт_значення_першого_аргумента, отримати_або_створити_слово(М, ю8"чародія_дія"));
      якщо результат_отримання_чародії_дія.успіх == ні {
        вернути результат_отримання_чародії_дія;
      }
      вернути машина_виконати_дію(М, місцезнаходження, результат_отримання_чародії_дія.значення, 0);
    }
    вернути результат_помилка_обʼєкт(створити_помилку_П21_неможливо_виконати(М, місцезнаходження, Значення { ЗОбʼєкт, дані = обʼєкт }));
  }

  місцева дія створити_структуру_дія(М: комірка<Машина>): комірка<Обʼєкт> {
    ціль слово = отримати_або_створити_слово(М, ю8"Дія");
    ціль обʼєкт_структури = створити_обʼєкт_структура(М, слово, М.структура_обʼєкт);
    обʼєкт_структури.виконати = структура_дія_виконати_дія;
    вернути зробити_безсмертним(М, обʼєкт_структури);
  }
}