взяти визначення МаМа;

секція мама {
  місцева дія створити_утилізатор(М: комірка<Машина>, помаркувати: комірка<Машина> -> ніщо): комірка<Утилізатор> {
    ціль утилізатор = виділити<Утилізатор>();
    утилізатор.початок_обʼєктів = пусто;
    утилізатор.кількість_обʼєктів = 0;
    утилізатор.кількість_обʼєктів_щоб_запустити_утилізацію = 0;
    утилізатор.кількість_середовищ_щоб_запустити_утилізацію = 0;
    утилізатор.кількість_безсмертних_обʼєктів = 0;
    утилізатор.початок_середовищ = пусто;
    утилізатор.кількість_середовищ = 0;
    утилізатор.помаркувати = помаркувати;
    вернути утилізатор;
  }

  місцева дія помаркувати(М: комірка<Машина>) {
    змінна х = 0;
    поки х < М.стопка.довжина {
      ціль значення = М.стопка.дані[х];
      якщо значення.тип == ЗОбʼєкт {
        помаркувати_обʼєкт(значення.дані як комірка<Обʼєкт>);
      }
      х = х + 1;
    }
    помаркувати_середовище(М.глобальне_середовище);
    х = 0;
    поки х < М.сліди.довжина {
      ціль слід = М.сліди.дані[х];
      якщо слід.середовище != пусто {
        помаркувати_середовище(слід.середовище);
      }
      якщо слід.обʼєкт_дії != пусто {
        помаркувати_обʼєкт(слід.обʼєкт_дії);
      }
      якщо слід.обʼєкт_модуля != пусто {
        помаркувати_обʼєкт(слід.обʼєкт_модуля);
      }
      х = х + 1;
    }
    х = 0;
    поки х < М.взяті_модулі.довжина {
      ціль взятий_модуль = М.взяті_модулі.дані[х];
      помаркувати_обʼєкт(взятий_модуль.обʼєкт_модуля);
      х = х + 1;
    }
    х = 0;
    поки х < М.існуючі_обʼєкти.довжина {
      помаркувати_обʼєкт(М.існуючі_обʼєкти.дані[х]);
      х = х + 1;
    }
  }

  місцева дія утилізувати(М: комірка<Машина>) {
//    біб::вивести_ю8(ю8"[МаМа] Розпочато утилізацію ");
//    біб::друк_позитивне(М.утилізатор.кількість_обʼєктів);
    М.утилізатор.помаркувати(М);
    змінна попередній_обʼєкт: комірка<Обʼєкт> = пусто;
    змінна обʼєкт = М.утилізатор.початок_обʼєктів;
    поки обʼєкт != пусто {
      ціль наступний_обʼєкт = обʼєкт.наступний_обʼєкт;
      якщо обʼєкт.помарковано == 0 {
        якщо обʼєкт.безсмертний == 0 {
          якщо попередній_обʼєкт == пусто {
            М.утилізатор.початок_обʼєктів = наступний_обʼєкт;
          } інакше {
            попередній_обʼєкт.наступний_обʼєкт = наступний_обʼєкт;
          }
//          біб::вивести_ю8(ю8"[МаМа] Утилізація обʼєкта: ");
//          біб::вивести_комірку(обʼєкт);
//          біб::вивести_ю8(ю8" ");
//          друк_значення(Значення { ЗОбʼєкт, дані = обʼєкт });
          звільнити_обʼєкт(обʼєкт);
          М.утилізатор.кількість_обʼєктів = М.утилізатор.кількість_обʼєктів - 1;
        } інакше {
          попередній_обʼєкт = обʼєкт;
        }
      } інакше {
        попередній_обʼєкт = обʼєкт;
      }
      обʼєкт = наступний_обʼєкт;
    }
    змінна попереднє_середовище: комірка<Середовище> = пусто;
    змінна середовище = М.утилізатор.початок_середовищ;
    поки середовище != пусто {
      ціль наступне_середовище = середовище.наступне_середовище;
      якщо середовище.помарковано == 0 {
        якщо попереднє_середовище == пусто {
          М.утилізатор.початок_середовищ = наступне_середовище;
        } інакше {
          попереднє_середовище.наступне_середовище = наступне_середовище;
        }
//        біб::вивести_ю8(ю8"[МаМа] Утилізація середовища: ");
//        біб::друк_комірку(середовище);
        звільнити_середовище(середовище);
        М.утилізатор.кількість_середовищ = М.утилізатор.кількість_середовищ - 1;
      } інакше {
        попереднє_середовище = середовище;
      }
      середовище = наступне_середовище;
    }
    обʼєкт = М.утилізатор.початок_обʼєктів;
    поки обʼєкт != пусто {
      обʼєкт.помарковано = 0;
      обʼєкт = обʼєкт.наступний_обʼєкт;
    }
    середовище = М.утилізатор.початок_середовищ;
    поки середовище != пусто {
      середовище.помарковано = 0;
      середовище = середовище.наступне_середовище;
    }
//    М.утилізатор.кількість_обʼєктів_щоб_запустити_утилізацію = ((М.утилізатор.кількість_обʼєктів - М.утилізатор.кількість_безсмертних_обʼєктів) * 5) + 1;
//    М.утилізатор.кількість_середовищ_щоб_запустити_утилізацію = (М.утилізатор.кількість_середовищ * 5) + 1;
//    біб::вивести_ю8(ю8"[МаМа] Завершено утилізацію ");
//    біб::друк_позитивне(М.утилізатор.кількість_обʼєктів);
  }
}