взяти визначення біб;

зовнішня дія ю32_в_ю8(значення: памʼять<п32>): памʼять<п8>;
зовнішня дія довжина_ю32(значення: памʼять<п32>): позитивне;
зовнішня дія ю32_містить(значення: памʼять<п32>, шукане_значення: памʼять<п32>): логічне;
зовнішня дія ю32_розбити(значення: памʼять<п32>, роздільник: памʼять<п32>): памʼять<памʼять<п32>>;
зовнішня дія ю32_клонувати(значення: памʼять<п32>): памʼять<п32>;
зовнішня дія ю32_замінити(значення: памʼять<п32>, т1: памʼять<п32>, т2: памʼять<п32>): памʼять<п32>;
зовнішня дія ю32_починається_з(значення: памʼять<п32>, з: памʼять<п32>): логічне;
зовнішня дія ю32_закінчується_на(значення: памʼять<п32>, з: памʼять<п32>): логічне;
зовнішня дія ю32_обтяти(значення: памʼять<п32>): памʼять<п32>;
зовнішня дія ю32_зʼєднати(а: памʼять<п32>, б: памʼять<п32>): памʼять<п32>;
зовнішня дія ю8_починається_з(значення: памʼять<п8>, з: памʼять<п8>): логічне;
зовнішня дія ю8_закінчується_на(значення: памʼять<п8>, з: памʼять<п8>): логічне;
зовнішня дія ю8_зріз(значення: памʼять<п8>, від: позитивне, розмір: позитивне): памʼять<п8>;
зовнішня дія ю8_розмір(значення: памʼять<п8>): позитивне;
зовнішня дія ю8_клонувати(значення: памʼять<п8>): памʼять<п8>;

зовнішня дія запустити_інтерактивний_термінал(дані: невідома_комірка, запустити: (невідома_комірка, памʼять<п8>) -> ніщо);