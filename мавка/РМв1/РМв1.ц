взяти визначення МаМа;
взяти визначення РМв1;

внутрішня дія значення_мама_рм(значення: мама::Значення): РМ::Значення {
  якщо значення.тип == мама::ЗЧисло {
    вернути РМ::Значення { РМ::ЗЧисло, дані = значення.дані як дійсне };
  }
  якщо значення.тип == мама::ЗОбʼєкт {
    вернути РМ::Значення { РМ::ЗОбʼєкт, дані = (значення.дані як комірка<мама::Обʼєкт>) як комірка<РМ::Обʼєкт> };
  }
  якщо значення.тип == мама::ЗСлово {
    вернути РМ::Значення { РМ::ЗСлово, дані = (значення.дані як комірка<мама::Слово>) як комірка<РМ::Слово> };
  }
  вернути РМ::Значення { тип = значення.тип як ц64 };
}

внутрішня дія значення_рм_мама(значення: РМ::Значення): мама::Значення {
  якщо значення.тип == РМ::ЗЧисло {
    вернути мама::Значення { мама::ЗЧисло, дані = значення.дані як дійсне };
  }
  якщо значення.тип == РМ::ЗОбʼєкт {
    вернути мама::Значення { мама::ЗОбʼєкт, дані = (значення.дані як комірка<РМ::Обʼєкт>) як комірка<мама::Обʼєкт> };
  }
  якщо значення.тип == РМ::ЗСлово {
    вернути мама::Значення { мама::ЗСлово, дані = (значення.дані як комірка<РМ::Слово>) як комірка<мама::Слово> };
  }
  вернути мама::Значення { тип = значення.тип як п64 };
}

внутрішня дія мавка_отримати_слово(мавка: комірка<РМ::Мавка>, значення: памʼять<п8>): комірка<РМ::Слово> {
  вернути мама::отримати_або_створити_слово(мавка.М як комірка<мама::Машина>, значення) як комірка<РМ::Слово>;
}

внутрішня дія мавка_отримати_властивість(мавка: комірка<РМ::Мавка>, обʼєкт: комірка<РМ::Обʼєкт>, слово_назви: комірка<РМ::Слово>): РМ::Значення {
  ціль М = мавка.М як комірка<мама::Машина>;
  ціль значення = мама::отримати_властивість_обʼєкта(обʼєкт як комірка<мама::Обʼєкт>, слово_назви як комірка<мама::Слово>);
  вернути значення_мама_рм(значення);
}

внутрішня дія мавка_змінити_властивість(мавка: комірка<РМ::Мавка>, обʼєкт: комірка<РМ::Обʼєкт>, слово_назви: комірка<РМ::Слово>, значення: РМ::Значення): РМ::Результат {
  ціль М = мавка.М як комірка<мама::Машина>;
  мама::змінити_властивість_обʼєкта(обʼєкт як комірка<мама::Обʼєкт>, слово_назви як комірка<мама::Слово>, значення_рм_мама(значення));
  вернути РМ::Результат { 1, РМ::Значення { РМ::ЗПусто } };
}

внутрішня дія мавка_створити_модуль(мавка: комірка<РМ::Мавка>, слово_назви: комірка<РМ::Слово>): комірка<РМ::Обʼєкт> {
  ціль М = мавка.М як комірка<мама::Машина>;
  ціль обʼєкт_модуля = мама::створити_обʼєкт_модуль(М, слово_назви як комірка<мама::Слово>);
  вернути обʼєкт_модуля як комірка<РМ::Обʼєкт>;
}

внутрішня дія мавка_нативна_дія(М: комірка<мама::Машина>, місцезнаходження: комірка<Місцезнаходження>, обʼєкт_нативної_дії: комірка<мама::Обʼєкт>, аргументи: комірка<вектор<мама::Аргумент>>): мама::Результат {
  ціль кількість_аргументів = аргументи.довжина;
  ціль значення_аргументів = виділити<РМ::Значення>(кількість_аргументів як ц32);
  змінна х = 0ц32;
  поки х < кількість_аргументів як ц32 {
    значення_аргументів[х] = значення_мама_рм(аргументи.дані[х].значення);
    х = х + 1;
  }
  ціль результат_мавки = (обʼєкт_нативної_дії.нативна_дія_мавки як (комірка<РМ::Мавка>, комірка<РМ::Місцезнаходження>, комірка<РМ::Обʼєкт>, позитивне, памʼять<РМ::Значення>) -> РМ::Результат)(М.мавкаРМв1 як комірка<РМ::Мавка>, місцезнаходження як комірка<РМ::Місцезнаходження>, обʼєкт_нативної_дії як комірка<РМ::Обʼєкт>, кількість_аргументів, значення_аргументів);
  звільнити(значення_аргументів);
  якщо результат_мавки.успіх == 0 {
    вернути мама::результат_помилка(значення_рм_мама(результат_мавки.значення));
  }
  вернути мама::Результат { 1, значення_рм_мама(результат_мавки.значення) };
}

внутрішня дія мавка_створити_нативну_дію(мавка: комірка<РМ::Мавка>, слово_назви: комірка<РМ::Слово>, нативна_дія: (комірка<РМ::Мавка>, комірка<РМ::Місцезнаходження>, комірка<РМ::Обʼєкт>, позитивне, памʼять<РМ::Значення>) -> РМ::Результат): комірка<РМ::Обʼєкт> {
  ціль М = мавка.М як комірка<мама::Машина>;
  ціль обʼєкт_нативної_дії = мама::створити_обʼєкт_нативна_дія(М, мавка_нативна_дія);
  обʼєкт_нативної_дії.дія_слово = слово_назви як комірка<мама::Слово>;
  обʼєкт_нативної_дії.нативна_дія_мавки = нативна_дія як адреса;
  вернути обʼєкт_нативної_дії як комірка<РМ::Обʼєкт>;
}

внутрішня дія мавка_створити_текст(мавка: комірка<РМ::Мавка>, значення: памʼять<п8>): комірка<РМ::Обʼєкт> {
  ціль М = мавка.М як комірка<мама::Машина>;
  ціль обʼєкт_тексту = мама::створити_обʼєкт_текст(М, значення);
  вернути обʼєкт_тексту як комірка<РМ::Обʼєкт>;
}

внутрішня дія мавка_обʼєкт_є_текстом(мавка: комірка<РМ::Мавка>, обʼєкт: комірка<РМ::Обʼєкт>): позитивне {
  ціль М = мавка.М як комірка<мама::Машина>;
  ціль обʼєкт_мама = обʼєкт як комірка<мама::Обʼєкт>;
  якщо обʼєкт_мама.тип == мама::ОТекст {
    вернути 1;
  }
  вернути 0;
}

внутрішня дія мавка_отримати_ю8_обʼєкта_тексту(мавка: комірка<РМ::Мавка>, обʼєкт: комірка<РМ::Обʼєкт>): памʼять<п8> {
  ціль М = мавка.М як комірка<мама::Машина>;
  ціль обʼєкт_мама = обʼєкт як комірка<мама::Обʼєкт>;
  якщо обʼєкт_мама.тип == мама::ОТекст {
    вернути ю32_в_ю8(обʼєкт_мама.текст_значення);
  }
  вернути пусто;
}

секція мама {
  місцева дія створити_мавкуРМв1(М: комірка<Машина>): невідома_комірка {
    ціль мавка = виділити<РМ::Мавка>();
    мавка.М = М як комірка<РМ::Машина>;
    мавка.отримати_слово = мавка_отримати_слово;
    мавка.отримати_властивість = мавка_отримати_властивість;
    мавка.змінити_властивість = мавка_змінити_властивість;
    мавка.створити_модуль = мавка_створити_модуль;
    мавка.створити_нативну_дію = мавка_створити_нативну_дію;
    мавка.створити_текст = мавка_створити_текст;
    мавка.обʼєкт_є_текстом = мавка_обʼєкт_є_текстом;
    мавка.отримати_ю8_обʼєкта_тексту = мавка_отримати_ю8_обʼєкта_тексту;
    вернути мавка;
  }

  місцева дія завантажити_РМв1_з_динамічного_обʼєкта(М: комірка<Машина>, місцезнаходження: комірка<Місцезнаходження>, середовище: комірка<Середовище>, динамічний_обʼєкт: невідома_комірка, назва_дії: памʼять<п8>, обʼєкт_модуля: комірка<Обʼєкт>): Результат {
    ціль д = отримати_символ_з_динамічної_бібліотеки(динамічний_обʼєкт, назва_дії) як (комірка<РМ::Мавка>, комірка<РМ::Середовище>, комірка<РМ::Обʼєкт>) -> РМ::Результат;
    якщо д як адреса == пусто {
      вернути результат_помилка_обʼєкт(створити_помилку_П17_не_вдалось_завантажити_РМв1(М, місцезнаходження, назва_дії));
    }
    ціль р = д(М.мавкаРМв1 як комірка<РМ::Мавка>, середовище як комірка<РМ::Середовище>, обʼєкт_модуля як комірка<РМ::Обʼєкт>);
    вернути Результат { р.успіх, значення_рм_мама(р.значення) };
  }

  місцева дія завантажити_РМв1(М: комірка<Машина>, місцезнаходження: комірка<Місцезнаходження>, середовище: комірка<Середовище>, шлях: памʼять<п8>, назва_модуля: памʼять<п8>): Результат {
    ціль слово_шляху = отримати_або_створити_слово(М, шлях);
    якщо перевірити_чи_карта_містить_значення<комірка<Слово>, комірка<Обʼєкт>>(М.взятіРМв1, слово_шляху) != 0 {
      ціль обʼєкт_з_карти = отримати_значення_з_карти<комірка<Слово>, комірка<Обʼєкт>>(М.взятіРМв1, слово_шляху, пусто);
      вернути результат_значення(Значення { ЗОбʼєкт, дані = обʼєкт_з_карти });
    }
    ціль динамічний_обʼєкт = завантажити_динамічну_бібліотеку(шлях);
    якщо динамічний_обʼєкт == пусто {
      вернути результат_помилка_обʼєкт(створити_помилку_П17_не_вдалось_завантажити_РМв1(М, місцезнаходження, ю8"завантажити_розширення_мавки"));
    }
    ціль обʼєкт_модуля = створити_обʼєкт_модуль(М, отримати_або_створити_слово(М, назва_модуля));
    змінити_значення_карти<комірка<Слово>, комірка<Обʼєкт>>(М.взятіРМв1, слово_шляху, обʼєкт_модуля);
    ціль р = завантажити_РМв1_з_динамічного_обʼєкта(М, місцезнаходження, середовище, динамічний_обʼєкт, ю8"завантажити_розширення_мавки", обʼєкт_модуля);
    якщо р.успіх == 0 {
      вернути р;
    }
    вернути результат_значення(Значення { ЗОбʼєкт, дані = обʼєкт_модуля });
  }
}