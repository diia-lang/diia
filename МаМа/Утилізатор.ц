взяти визначення МаМа;

секція МаМа {
  місцева дія зробити_утилізатор(): Утилізатор {
    ціль утилізатор = Утилізатор {};
    утилізатор.початок_обʼєктів = пусто;
    утилізатор.кількість_обʼєктів = 0;
    утилізатор.кількість_обʼєктів_щоб_запустити_утилізацію = 0;
    утилізатор.кількість_середовищ_щоб_запустити_утилізацію = 0;
    утилізатор.початок_середовищ = пусто;
    утилізатор.кількість_середовищ = 0;
    вернути утилізатор;
  }

  місцева дія позначити(М: адреса<Машина>) {
    змінна ціль п: позитивне = 0;
    поки п < М.накопичувач_виконання.розмір {
      позначити_обʼєкт(М, М.накопичувач_виконання.дані[п]);
      п += 1;
    }
    п = 0;
    поки п < М.накопичувач_констант.розмір {
      позначити_обʼєкт(М, М.накопичувач_констант.дані[п]);
      п += 1;
    }
    п = 0;
    поки п < М.накопичувач_реєстрів_аргументів.розмір {
      змінна ціль р: позитивне = 0;
      поки р < М.накопичувач_реєстрів_аргументів.дані[п].розмір {
        позначити_обʼєкт(М, М.накопичувач_реєстрів_аргументів.дані[п].елементи[р].значення);
        р += 1;
      }
      п += 1;
    }
    п = 0;
    поки п < М.накопичувач_реєстрів_параметрів.розмір {
      змінна ціль р: позитивне = 0;
      поки р < М.накопичувач_реєстрів_параметрів.дані[п].розмір {
        змінна ціль пр: позитивне = 0;
        поки пр < М.накопичувач_реєстрів_параметрів.дані[п].елементи[р].значення.типи.розмір {
          позначити_обʼєкт(М, М.накопичувач_реєстрів_параметрів.дані[п].елементи[р].значення.типи.дані[пр]);
          пр = пр + 1;
        }
        р += 1;
      }
      п += 1;
    }
    змінна ціль пів: позитивне = 0;
    поки пів < М.накопичувач_історії_виконання.розмір {
      позначити_обʼєкт(М, М.накопичувач_історії_виконання.дані[пів].обʼєкт_дії);
      позначити_середовище(М, М.накопичувач_історії_виконання.дані[пів].середовище);
      пів += 1;
    }
    позначити_середовище(М, М.глобальне_середовище);
    позначити_обʼєкт(М, М.обʼєкт_структури_обʼєкт);
    позначити_обʼєкт(М, М.обʼєкт_структури_Структура);
    позначити_обʼєкт(М, М.обʼєкт_структури_число);
    позначити_обʼєкт(М, М.обʼєкт_структури_текст);
    позначити_обʼєкт(М, М.обʼєкт_структури_Дія);
    позначити_обʼєкт(М, М.обʼєкт_структури_НативнаДія);
  }

  місцева дія утилізувати(М: адреса<Машина>) {
    позначити(М);
    змінна ціль попередній_обʼєкт: адреса<Обʼєкт> = пусто;
    змінна ціль обʼєкт = М.утилізатор.початок_обʼєктів;
    поки обʼєкт != пусто {
      ціль наступний_обʼєкт = обʼєкт.наступний_обʼєкт;
      якщо обʼєкт.позначено == ні {
        якщо попередній_обʼєкт == пусто {
          М.утилізатор.початок_обʼєктів = наступний_обʼєкт;
        } інакше {
          попередній_обʼєкт.наступний_обʼєкт = наступний_обʼєкт;
        }
        звільнити_обʼєкт(М, обʼєкт);
        М.утилізатор.кількість_обʼєктів = М.утилізатор.кількість_обʼєктів - 1;
      } інакше {
        попередній_обʼєкт = обʼєкт;
      }
      обʼєкт = наступний_обʼєкт;
    }
    змінна ціль попереднє_середовище: адреса<Середовище> = пусто;
    змінна ціль середовище = М.утилізатор.початок_середовищ;
    поки середовище != пусто {
      ціль наступне_середовище = середовище.наступне_середовище;
      якщо середовище.позначено == ні {
        якщо попереднє_середовище == пусто {
          М.утилізатор.початок_середовищ = наступне_середовище;
        } інакше {
          попереднє_середовище.наступне_середовище = наступне_середовище;
        }
        звільнити_середовище(М, середовище);
        М.утилізатор.кількість_середовищ = М.утилізатор.кількість_середовищ - 1;
      } інакше {
        попереднє_середовище = середовище;
      }
      середовище = наступне_середовище;
    }
    обʼєкт = М.утилізатор.початок_обʼєктів;
    поки обʼєкт != пусто {
      обʼєкт.позначено = ні;
      обʼєкт = обʼєкт.наступний_обʼєкт;
    }
    середовище = М.утилізатор.початок_середовищ;
    поки середовище != пусто {
      середовище.позначено = ні;
      середовище = середовище.наступне_середовище;
    }
  }

  місцева дія позначити_обʼєкт(М: адреса<Машина>, обʼєкт: адреса<Обʼєкт>) {
    якщо обʼєкт == пусто {
      вернути;
    }
    якщо обʼєкт.позначено == так {
      вернути;
    }
    обʼєкт.позначено = так;
    змінна ціль пв: позитивне = 0;
    поки пв < обʼєкт.властивості.розмір {
      позначити_обʼєкт(М, обʼєкт.властивості.елементи[пв].значення);
      пв += 1;
    }
    якщо обʼєкт.обʼєкт_структури == М.обʼєкт_структури_Структура {
      синонім дані = обʼєкт.дані як ДаніОбʼєктаСтруктури;
      позначити_обʼєкт(М, дані.предок);
      змінна ціль пп: позитивне = 0;
      поки пп < дані.параметри.розмір {
        ціль параметр = дані.параметри.елементи[пп].значення;
        змінна ціль птп: позитивне = 0;
        поки птп < параметр.типи.розмір {
          позначити_обʼєкт(М, параметр.типи.дані[птп]);
          птп += 1;
        }
        пп += 1;
      }
      змінна ціль мп: позитивне = 0;
      поки мп < дані.методи.розмір {
        позначити_обʼєкт(М, дані.методи.елементи[пп].значення);
        мп += 1;
      }
      позначити_середовище(М, дані.середовище_створення);
    } інакше якщо обʼєкт.обʼєкт_структури == М.обʼєкт_структури_Дія {
      синонім дані = обʼєкт.дані як ДаніОбʼєктаДії;
      змінна ціль пп: позитивне = 0;
      поки пп < дані.параметри.розмір {
        ціль параметр = дані.параметри.елементи[пп].значення;
        змінна ціль птп: позитивне = 0;
        поки птп < параметр.типи.розмір {
          позначити_обʼєкт(М, параметр.типи.дані[птп]);
          птп += 1;
        }
        пп += 1;
      }
      позначити_середовище(М, дані.середовище_створення);
    }
  }

  місцева дія позначити_середовище(М: адреса<Машина>, середовище: адреса<Середовище>) {
    якщо середовище == пусто {
      вернути;
    }
    якщо середовище.позначено == так {
      вернути;
    }
    середовище.позначено = так;
    змінна ціль пс: позитивне = 0;
    поки пс < середовище.субʼєкти.розмір {
      позначити_обʼєкт(М, середовище.субʼєкти.елементи[пс].значення);
      пс += 1;
    }
    позначити_середовище(М, середовище.батьківське);
  }
}