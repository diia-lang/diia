взяти визначення ./біб;

секція МаМа {
  структура ЕлементРеєстру2<К, З>;
  структура Реєстр2<К, З>;

  структура ЕлементРеєстру2<К, З> {
    ключ: К;
    значення: З;
  }

  структура Реєстр2<К, З> {
    розмір: позитивне;
    елементи: памʼять<ЕлементРеєстру2<К, З>>;
    дія_перевірки_ключа: (а: К, б: К, дані: адреса) -> логічне;
    дані: адреса;
  }

  дія зробити_реєстр2<К, З>(дія_перевірки_ключа: (а: К, б: К, дані: адреса) -> логічне, дані: адреса): Реєстр2<К, З> {
    ціль реєстр2: Реєстр2<К, З>;
    реєстр2.розмір = 0;
    реєстр2.елементи = пусто;
    реєстр2.дія_перевірки_ключа = дія_перевірки_ключа;
    реєстр2.дані = дані;
    вернути реєстр2;
  }

  дія виділити_реєстр2<К, З>(дія_перевірки_ключа: (а: К, б: К, дані: адреса) -> логічне, дані: адреса): адреса<Реєстр2<К, З>> {
    ціль реєстр2 = виділити<Реєстр2<К, З>>();
    реєстр2.розмір = 0;
    реєстр2.елементи = пусто;
    реєстр2.дія_перевірки_ключа = дія_перевірки_ключа;
    реєстр2.дані = дані;
    вернути реєстр2;
  }

  дія отримати_з_реєстру2<К, З>(реєстр2: адреса<Реєстр2<К, З>>, ключ: К): адреса<ЕлементРеєстру2<К, З>> {
    змінна ціль позиція: позитивне = 0;
    поки позиція < реєстр2.розмір {
      якщо реєстр2.дія_перевірки_ключа(реєстр2.елементи[позиція].ключ, ключ, реєстр2.дані) {
        вернути реєстр2.елементи[позиція]::адреса;
      }
      позиція = позиція + 1;
    }
    вернути пусто;
  }

  дія змінити_в_реєстрі2<К, З>(реєстр2: адреса<Реєстр2<К, З>>, ключ: К, значення: З) {
    змінна ціль елемент_карти = отримати_з_реєстру2<К, З>(реєстр2, ключ);
    якщо елемент_карти == пусто {
      реєстр2.елементи = перевиділити<ЕлементРеєстру2<К, З>>(реєстр2.елементи, ц32(реєстр2.розмір + 1));
      реєстр2.елементи[реєстр2.розмір] = ЕлементРеєстру2<К, З> { ключ = ключ, значення = значення };
      реєстр2.розмір = реєстр2.розмір + 1;
    } інакше {
      елемент_карти.значення = значення;
    }
  }

  дія звільнити_значення_реєстру2<К, З>(реєстр2: Реєстр2<К, З>) {
    звільнити(реєстр2.елементи як адреса);
  }

  дія звільнити_реєстр2<К, З>(реєстр2: адреса<Реєстр2<К, З>>) {
    звільнити(реєстр2.елементи як адреса);
    звільнити(реєстр2);
  }

  дія розширити_реєстр2<К, З>(реєстр2: адреса<Реєстр2<К, З>>, новий_розмір: позитивне) {
    якщо новий_розмір > реєстр2.розмір {
      реєстр2.елементи = перевиділити<ЕлементРеєстру2<К, З>>(реєстр2.елементи, ц32(новий_розмір));
      реєстр2.розмір = новий_розмір;
    }
  }

  дія видалити_з_реєстру2<К, З>(реєстр2: адреса<Реєстр2<К, З>>, ключ: К): логічне {
    змінна ціль п: позитивне = 0;
    поки п < реєстр2.розмір {
      ціль елемент = реєстр2.елементи[п];
      якщо реєстр2.дія_перевірки_ключа(елемент.ключ, ключ, реєстр2.дані) {
        поки п < реєстр2.розмір - 1 {
          реєстр2.елементи[п] = реєстр2.елементи[п + 1];
          п += 1;
        }
        реєстр2.розмір -= 1;
        вернути так;
      }
      п += 1;
    }
    вернути ні;
  }
}