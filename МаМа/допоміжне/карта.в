взяти визначення МаМа/допоміжне/біб;

структура ЕлементРеєстру<К, З>;
структура Реєстр<К, З>;

структура ЕлементРеєстру<К, З> {
  ключ: К;
  значення: З;
}

структура Реєстр<К, З> {
  розмір: позитивне;
  елементи: памʼять<ЕлементРеєстру<К, З>>;
  дія_перевірки_ключа: (а: К, б: К) -> логічне;
}

дія зробити_реєстр<К, З>(дія_перевірки_ключа: (а: К, б: К) -> логічне): Реєстр<К, З> {
  ціль карта = Реєстр<К, З> {};
  карта.розмір = 0;
  карта.елементи = пусто;
  карта.дія_перевірки_ключа = дія_перевірки_ключа;
  вернути карта;
}

дія виділити_реєстр<К, З>(дія_перевірки_ключа: (а: К, б: К) -> логічне): адреса<Реєстр<К, З>> {
  ціль карта = виділити<Реєстр<К, З>>();
  карта.розмір = 0;
  карта.елементи = пусто;
  карта.дія_перевірки_ключа = дія_перевірки_ключа;
  вернути карта;
}

дія отримати_з_реєстру<К, З>(карта: адреса<Реєстр<К, З>>, ключ: К): адреса<ЕлементРеєстру<К, З>> {
  змінна ціль позиція: позитивне = 0;
  поки позиція < карта.розмір {
    якщо карта.дія_перевірки_ключа(карта.елементи[позиція].ключ, ключ) {
      вернути карта.елементи[позиція]::адреса;
    }
    позиція = позиція + 1;
  }
  вернути пусто;
}

дія змінити_в_реєстрі<К, З>(карта: адреса<Реєстр<К, З>>, ключ: К, значення: З) {
  змінна ціль елемент_карти = отримати_з_реєстру<К, З>(карта, ключ);
  якщо елемент_карти == пусто {
    карта.елементи = перевиділити<ЕлементРеєстру<К, З>>(карта.елементи, (карта.розмір + 1) як ц32);
    карта.елементи[карта.розмір] = ЕлементРеєстру<К, З> { ключ = ключ, значення = значення };
    карта.розмір = карта.розмір + 1;
  } інакше {
    елемент_карти.значення = значення;
  }
}

дія звільнити_значення_реєстру<К, З>(карта: Реєстр<К, З>) {
  звільнити(карта.елементи);
}

дія звільнити_реєстр<К, З>(карта: адреса<Реєстр<К, З>>) {
  звільнити(карта.елементи);
  звільнити(карта);
}

дія розширити_реєстр<К, З>(карта: адреса<Реєстр<К, З>>, новий_розмір: позитивне) {
  якщо новий_розмір > карта.розмір {
    карта.елементи = перевиділити<ЕлементРеєстру<К, З>>(карта.елементи, новий_розмір як ц32);
    карта.розмір = новий_розмір;
  }
}