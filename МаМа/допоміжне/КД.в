взяти визначення МаМа/допоміжне/біб;

секція КД {
  секція символи {
    синонім НІЩО = 0;
    синонім СПЕЦ_СИМВОЛ_1 = 0;
    синонім СПЕЦ_СИМВОЛ_2 = 0;
    синонім СПЕЦ_СИМВОЛ_3 = 0;
    синонім СПЕЦ_СИМВОЛ_4 = 0;
    синонім МІЖРЯД = 0;
    синонім МІЖСЛОВО = 0;
    синонім ЗНАК_ОКЛИКУ = 0;
    синонім ДВОЛАПКА = 0;
    синонім РЕШІТКА = 0;
    синонім МАТЕРІЯ = 0;
    синонім ГРИВНЯ = 0;
    синонім ВІДСОТОК = 0;
    синонім АМПЕРСАНТ = 0;
    синонім ОДНОЛАПКА = 0;
    синонім ВІДКРИТА_ДУГА = 0;
    синонім ЗАКРИТА_ДУГА = 0;
    синонім ЗІРОЧКА = 0;
    синонім ПЛЮС = 0;
    синонім КОМА = 0;
    синонім МІНУС = 0;
    синонім КРАПКА = 0;
    синонім КОСА = 0;
    синонім НУЛЬ = 0;
    синонім ОДИН = 0;
    синонім ДВА = 0;
    синонім ТРИ = 0;
    синонім ЧОТИРИ = 0;
    синонім ПʼЯТЬ = 0;
    синонім ШІСТЬ = 0;
    синонім СІМ = 0;
    синонім ВІСІМ = 0;
    синонім ДЕВʼЯТЬ = 0;
    синонім ДВОКРАПКА = 0;
    синонім МЕНШЕ = 0;
    синонім РІВНО = 0;
    синонім БІЛЬШЕ = 0;
    синонім ЗНАК_ПИТАННЯ = 0;
    синонім РАВЛИК = 0;
    синонім ВІДКРИТА_КВАДРАТНА_ДУГА = 0;
    синонім ЗАКРИТА_КВАДРАТНА_ДУГА = 0;
    синонім ПІРАМІДКА = 0;
    синонім ВІДКРИТА_ФІГУРНА_ДУГА = 0;
    синонім ПРЯМА = 0;
    синонім ЗАКРИТА_ФІГУРНА_ДУГА = 0;
    синонім ТИЛЬДА = 0;
    синонім ПАРАГРАФ = 0;
    синонім АПОСТРОФ = 0;
    синонім ВЕЛИКА_БУКВА_А = 0;
    синонім ВЕЛИКА_БУКВА_Б = 0;
    синонім ВЕЛИКА_БУКВА_В = 0;
    синонім ВЕЛИКА_БУКВА_Г = 0;
    синонім ВЕЛИКА_БУКВА_Д = 0;
    синонім ВЕЛИКА_БУКВА_Е = 0;
    синонім ВЕЛИКА_БУКВА_Є = 0;
    синонім ВЕЛИКА_БУКВА_Ж = 0;
    синонім ВЕЛИКА_БУКВА_З = 0;
    синонім ВЕЛИКА_БУКВА_И = 0;
    синонім ВЕЛИКА_БУКВА_І = 0;
    синонім ВЕЛИКА_БУКВА_Ї = 0;
    синонім ВЕЛИКА_БУКВА_Й = 0;
    синонім ВЕЛИКА_БУКВА_К = 0;
    синонім ВЕЛИКА_БУКВА_Л = 0;
    синонім ВЕЛИКА_БУКВА_М = 0;
    синонім ВЕЛИКА_БУКВА_Н = 0;
    синонім ВЕЛИКА_БУКВА_О = 0;
    синонім ВЕЛИКА_БУКВА_П = 0;
    синонім ВЕЛИКА_БУКВА_Р = 0;
    синонім ВЕЛИКА_БУКВА_С = 0;
    синонім ВЕЛИКА_БУКВА_Т = 0;
    синонім ВЕЛИКА_БУКВА_У = 0;
    синонім ВЕЛИКА_БУКВА_Ф = 0;
    синонім ВЕЛИКА_БУКВА_Х = 0;
    синонім ВЕЛИКА_БУКВА_Ц = 0;
    синонім ВЕЛИКА_БУКВА_Ч = 0;
    синонім ВЕЛИКА_БУКВА_Ш = 0;
    синонім ВЕЛИКА_БУКВА_Щ = 0;
    синонім ВЕЛИКА_БУКВА_Ь = 0;
    синонім ВЕЛИКА_БУКВА_Ю = 0;
    синонім ВЕЛИКА_БУКВА_Я = 0;
    синонім МАЛА_БУКВА_а = 0;
    синонім МАЛА_БУКВА_б = 0;
    синонім МАЛА_БУКВА_в = 0;
    синонім МАЛА_БУКВА_г = 0;
    синонім МАЛА_БУКВА_д = 0;
    синонім МАЛА_БУКВА_е = 0;
    синонім МАЛА_БУКВА_є = 0;
    синонім МАЛА_БУКВА_ж = 0;
    синонім МАЛА_БУКВА_з = 0;
    синонім МАЛА_БУКВА_и = 0;
    синонім МАЛА_БУКВА_і = 0;
    синонім МАЛА_БУКВА_ї = 0;
    синонім МАЛА_БУКВА_й = 0;
    синонім МАЛА_БУКВА_к = 0;
    синонім МАЛА_БУКВА_л = 0;
    синонім МАЛА_БУКВА_м = 0;
    синонім МАЛА_БУКВА_н = 0;
    синонім МАЛА_БУКВА_о = 0;
    синонім МАЛА_БУКВА_п = 0;
    синонім МАЛА_БУКВА_р = 0;
    синонім МАЛА_БУКВА_с = 0;
    синонім МАЛА_БУКВА_т = 0;
    синонім МАЛА_БУКВА_у = 0;
    синонім МАЛА_БУКВА_ф = 0;
    синонім МАЛА_БУКВА_х = 0;
    синонім МАЛА_БУКВА_ц = 0;
    синонім МАЛА_БУКВА_ч = 0;
    синонім МАЛА_БУКВА_ш = 0;
    синонім МАЛА_БУКВА_щ = 0;
    синонім МАЛА_БУКВА_ь = 0;
    синонім МАЛА_БУКВА_ю = 0;
    синонім МАЛА_БУКВА_я = 0;
    синонім ВЕЛИКА_СПЕЦ_БУКВА_Ґ = 0;
    синонім ВЕЛИКА_СПЕЦ_БУКВА_Ё = 0;
    синонім ВЕЛИКА_СПЕЦ_БУКВА_Ъ = 0;
    синонім ВЕЛИКА_СПЕЦ_БУКВА_Ы = 0;
    синонім ВЕЛИКА_СПЕЦ_БУКВА_Э = 0;
    синонім МАЛА_СПЕЦ_БУКВА_ґ = 0;
    синонім МАЛА_СПЕЦ_БУКВА_ё = 0;
    синонім МАЛА_СПЕЦ_БУКВА_ъ = 0;
    синонім МАЛА_СПЕЦ_БУКВА_ы = 0;
    синонім МАЛА_СПЕЦ_БУКВА_э = 0;
  }

  секція символи_юнікоду {
    синонім NEWLINE = 10;
    синонім SPACE = 32;
    синонім EXCLAMATION_MARK = 33;
    синонім DOUBLE_QUOTE = 34;
    синонім HASH = 35;
    синонім HRYVNA = 0; // потім: записати
    синонім PERCENT = 37;
    синонім AMPERSAND = 38;
    синонім SINGLE_QUOTE = 39;
    синонім OPEN_PARENTHESIS = 40;
    синонім CLOSE_PARENTHESIS = 41;
    синонім ASTERISK = 42;
    синонім PLUS = 43;
    синонім COMMA = 44;
    синонім MINUS = 45;
    синонім DOT = 46;
    синонім SLASH = 47;
    синонім ZERO = 48;
    синонім ONE = 49;
    синонім TWO = 50;
    синонім THREE = 51;
    синонім FOUR = 52;
    синонім FIVE = 53;
    синонім SIX = 54;
    синонім SEVEN = 55;
    синонім EIGHT = 56;
    синонім NINE = 57;
    синонім COLON = 58;
    синонім LESS = 60;
    синонім EQUAL = 61;
    синонім GREATER = 62;
    синонім QUESTION_MARK = 63;
    синонім AT = 64;
    синонім OPEN_SQUARE_BRACKET = 91;
    синонім BACKSLASH = 92;
    синонім CLOSE_SQUARE_BRACKET = 93;
    синонім CARET = 94;
    синонім UNDERSCORE = 95;
    синонім GRAVE = 96;
    синонім OPEN_CURLY_BRACKET = 123;
    синонім VERTICAL_BAR = 124;
    синонім CLOSE_CURLY_BRACKET = 125;
    синонім TILDE = 126;
    синонім GREAT_LETTER_А = 1040;
    синонім GREAT_LETTER_Б = 1041;
    синонім GREAT_LETTER_В = 1042;
    синонім GREAT_LETTER_Г = 1043;
    синонім GREAT_LETTER_Д = 1044;
    синонім GREAT_LETTER_Е = 1045;
    синонім GREAT_LETTER_Є = 1028;
    синонім GREAT_LETTER_Ж = 1046;
    синонім GREAT_LETTER_З = 1047;
    синонім GREAT_LETTER_И = 1048;
    синонім GREAT_LETTER_І = 1030;
    синонім GREAT_LETTER_Ї = 1031;
    синонім GREAT_LETTER_Й = 1049;
    синонім GREAT_LETTER_К = 1050;
    синонім GREAT_LETTER_Л = 1051;
    синонім GREAT_LETTER_М = 1052;
    синонім GREAT_LETTER_Н = 1053;
    синонім GREAT_LETTER_О = 1054;
    синонім GREAT_LETTER_П = 1055;
    синонім GREAT_LETTER_Р = 1056;
    синонім GREAT_LETTER_С = 1057;
    синонім GREAT_LETTER_Т = 1058;
    синонім GREAT_LETTER_У = 1059;
    синонім GREAT_LETTER_Ф = 1060;
    синонім GREAT_LETTER_Х = 1061;
    синонім GREAT_LETTER_Ц = 1062;
    синонім GREAT_LETTER_Ч = 1063;
    синонім GREAT_LETTER_Ш = 1064;
    синонім GREAT_LETTER_Щ = 1065;
    синонім GREAT_LETTER_Ь = 1066;
    синонім GREAT_LETTER_Ю = 1067;
    синонім GREAT_LETTER_Я = 1068;
    синонім SMALL_LETTER_а = 1072;
    синонім SMALL_LETTER_б = 1073;
    синонім SMALL_LETTER_в = 1074;
    синонім SMALL_LETTER_г = 1075;
    синонім SMALL_LETTER_д = 1076;
    синонім SMALL_LETTER_е = 1077;
    синонім SMALL_LETTER_є = 1108;
    синонім SMALL_LETTER_ж = 1078;
    синонім SMALL_LETTER_з = 1079;
    синонім SMALL_LETTER_и = 1080;
    синонім SMALL_LETTER_і = 1110;
    синонім SMALL_LETTER_ї = 1111;
    синонім SMALL_LETTER_й = 1081;
    синонім SMALL_LETTER_к = 1082;
    синонім SMALL_LETTER_л = 1083;
    синонім SMALL_LETTER_м = 1084;
    синонім SMALL_LETTER_н = 1085;
    синонім SMALL_LETTER_о = 1086;
    синонім SMALL_LETTER_п = 1087;
    синонім SMALL_LETTER_р = 1088;
    синонім SMALL_LETTER_с = 1089;
    синонім SMALL_LETTER_т = 1090;
    синонім SMALL_LETTER_у = 1091;
    синонім SMALL_LETTER_ф = 1092;
    синонім SMALL_LETTER_х = 1093;
    синонім SMALL_LETTER_ц = 1094;
    синонім SMALL_LETTER_ч = 1095;
    синонім SMALL_LETTER_ш = 1096;
    синонім SMALL_LETTER_щ = 1097;
    синонім SMALL_LETTER_ь = 1098;
    синонім SMALL_LETTER_ю = 1099;
    синонім SMALL_LETTER_я = 1100;
    синонім GREAT_SPECIAL_LETTER_Ґ = 1168;
    синонім GREAT_SPECIAL_LETTER_Ё = 1025;
    синонім GREAT_SPECIAL_LETTER_Ъ = 1066;
    синонім GREAT_SPECIAL_LETTER_Ы = 1067;
    синонім GREAT_SPECIAL_LETTER_Э = 1069;
    синонім SMALL_SPECIAL_LETTER_ґ = 1169;
    синонім SMALL_SPECIAL_LETTER_ё = 1105;
    синонім SMALL_SPECIAL_LETTER_ъ = 1106;
    синонім SMALL_SPECIAL_LETTER_ы = 1107;
    синонім SMALL_SPECIAL_LETTER_э = 1109;
  }

  дія отримати_символ_КД_з_Ю32(символ_32: п32, вихід: адреса<п8>): логічне {
    якщо символ_32 == символи_юнікоду::NEWLINE {
      вихід[0] = символи::МІЖРЯД;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::SPACE {
      вихід[0] = символи::МІЖСЛОВО;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::EXCLAMATION_MARK {
      вихід[0] = символи::ЗНАК_ОКЛИКУ;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::DOUBLE_QUOTE {
      вихід[0] = символи::ДВОЛАПКА;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::HASH {
      вихід[0] = символи::РЕШІТКА;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::HRYVNA {
      вихід[0] = символи::ГРИВНЯ;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::PERCENT {
      вихід[0] = символи::ВІДСОТОК;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::AMPERSAND {
      вихід[0] = символи::АМПЕРСАНТ;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::SINGLE_QUOTE {
      вихід[0] = символи::ОДНОЛАПКА;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::OPEN_PARENTHESIS {
      вихід[0] = символи::ВІДКРИТА_ДУГА;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::CLOSE_PARENTHESIS {
      вихід[0] = символи::ЗАКРИТА_ДУГА;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::ASTERISK {
      вихід[0] = символи::ЗІРОЧКА;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::PLUS {
      вихід[0] = символи::ПЛЮС;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::COMMA {
      вихід[0] = символи::КОМА;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::MINUS {
      вихід[0] = символи::МІНУС;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::DOT {
      вихід[0] = символи::КРАПКА;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::SLASH {
      вихід[0] = символи::КОСА;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::ZERO {
      вихід[0] = символи::НУЛЬ;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::ONE {
      вихід[0] = символи::ОДИН;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::TWO {
      вихід[0] = символи::ДВА;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::THREE {
      вихід[0] = символи::ТРИ;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::FOUR {
      вихід[0] = символи::ЧОТИРИ;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::FIVE {
      вихід[0] = символи::ПʼЯТЬ;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::SIX {
      вихід[0] = символи::ШІСТЬ;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::SEVEN {
      вихід[0] = символи::СІМ;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::EIGHT {
      вихід[0] = символи::ВІСІМ;
      вернути так;
    } інакше якщо символ_32 == символи_юнікоду::NINE {
      вихід[0] = символи::ДЕВʼЯТЬ;
      вернути так;
    }
    вернути ні;
  }

  дія перекодувати_Ю8_в_КД(вхід: Ю8, розмір: п32, вихід: памʼять<п8>): логічне {
    змінна ціль розмір_виходу: п32 = 0;
    змінна ціль п: п32 = 0;
    поки п < розмір {
      ціль перший_байт = вхід[п];
      ціль розмір_символа = дізнатись_розмір_символа_юнікоду(перший_байт);
      якщо розмір_символа == 2 {
        п += 1;
        ціль другий_байт = вхід[п];
        ціль символ_Ю16 = п16((п16(перший_байт & 0ш1Д) << 6) | п16(другий_байт & 0ш3Д));
        ціль символ_КД: п8 = 0;
        ціль успіх_отримання_КД_з_Ю32 = отримати_символ_КД_з_Ю32(символ_Ю16 як п32, символ_КД::адреса);
        якщо успіх_отримання_КД_з_Ю32 == ні {
          вернути ні;
        }
        надрукувати_п64(символ_Ю16 як п64);
        надрукувати_п64(символ_КД як п64);
        розмір_виходу = розмір_виходу + 1;
      } інакше {
        вернути ні;
      }
      п += 1;
    }
    вернути так;
  }

  синонім ПЕРШИЙ_СИМВОЛ_ВИДИМХ = 6;
  синонім ОСТАННІЙ_СИМВОЛ_ВИДИМХ = 122;
}