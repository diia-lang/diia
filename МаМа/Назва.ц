взяти визначення МаМа;

секція МаМа {
  місцева дія назва_з_Ю8(М: адреса<Машина>, значення: Ю8): адреса<Назва> {
    вернути знайти_або_виділити_й_додати_назву_з_ю8(М, М.БН::адреса, значення);
  }

  місцева дія позиція_назви_з_ю8(М: адреса<Машина>, значення: Ю8): позитивне {
    вернути додати_назву_з_ю8(М, М.БН::адреса, значення);
  }

  місцева дія перевірити_чи_назви_рівні(назва1: адреса<Назва>, назва2: адреса<Назва>): логічне {
    вернути назва1 == назва2;
  }

  місцева дія виділити_назву(М: адреса<Машина>, кодування: позитивне, значення: памʼять<п8>): адреса<Назва> {
    ціль назва = виділити<Назва>(М);
    назва.кодування = кодування;
    назва.значення = пусто;
    виділити_копію_Ю8(М, значення, порахувати_розмір_Ю8(значення), назва.значення::адреса);
    якщо назва.значення == пусто {
      ПОМЕРТИ(М, ю8сі"Не вдалося виділити копію Ю8");
    }
    вернути назва;
  }

  місцева дія зробити_базу_назв(М: адреса<Машина>): БазаНазв {
    ціль БН: БазаНазв;
    БН.дані = зробити_накопичувач<адреса<Назва>>(М);
    БН.С.предок = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"предок");
    БН.С.чародія_додати = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_додати");
    БН.С.чародія_відняти = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_відняти");
    БН.С.чародія_помножити = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_помножити");
    БН.С.чародія_поділити = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_поділити");
    БН.С.чародія_остача = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_остача");
    БН.С.чародія_неповна_частка = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_неповна_частка");
    БН.С.чародія_степінь = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_степінь");
    БН.С.чародія_вліво = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_вліво");
    БН.С.чародія_вправо = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_вправо");
    БН.С.чародія_вправо_зі_заповненням = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_вправо_зі_заповненням");
    БН.С.чародія_двійкове_і = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_двійкове_і");
    БН.С.чародія_двійкове_або = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_двійкове_або");
    БН.С.чародія_двійкове_виключне_або = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_двійкове_виключне_або");
    БН.С.чародія_двійкове_не = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_двійкове_не");
    БН.С.чародія_більше = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_більше");
    БН.С.чародія_менше = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_менше");
    БН.С.чародія_містить = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_містить");
    БН.С.чародія_відʼємне = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_відʼємне");
    БН.С.чародія_виконати = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_виконати");
    БН.С.чародія_отримати_елемент = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_отримати_елемент");
    БН.С.чародія_змінити_елемент = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_змінити_елемент");
    БН.С.чародія_видалити_елемент = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_видалити_елемент");
    БН.С.чародія_перебір = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_перебір");
    БН.С.чародія_число = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_число");
    БН.С.чародія_текст = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_текст");
    БН.С.чародія_юнікод = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_юнікод");
    БН.С.чародія_список = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_список");
    БН.С.чародія_словник = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_словник");
    БН.С.чародія_збільшити = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_збільшити");
    БН.С.чародія_зменшити = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_зменшити");
    БН.С.чародія_байти = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_байти");
    БН.С.предмет = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"предмет");
    БН.С.Структура = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"Структура");
    БН.С.НативнаДія = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"НативнаДія");
    БН.С.Дія = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"Дія");
    БН.С.число = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"число");
    БН.С.текст = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"текст");
    БН.С.юнікод = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"юнікод");
    БН.С.друк = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"друк");
    БН.С.модуль = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"модуль");
    БН.С.біб = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"біб");
    БН.С.пак = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"пак");
    БН.С.Модуль = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"Модуль");
    БН.С.список = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"список");
    БН.С.словник = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"словник");
    БН.С.логічне = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"логічне");
    БН.С.так = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"так");
    БН.С.ні = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"ні");
    БН.С.додати = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"додати");
    БН.С.значення = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"значення");
    БН.С.назва = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"назва");
    БН.С.забрати = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"забрати");
    БН.С.ключ = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"ключ");
    БН.С.розмір = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"розмір");
    БН.С.довжина = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"довжина");
    БН.С.фільтрувати = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"фільтрувати");
    БН.С.д = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"д");
    БН.С.новий_список = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"новий_список");
    БН.С.знайти = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"знайти");
    БН.С.знайти_позицію = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"знайти_позицію");
    БН.С.перетворити = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"перетворити");
    БН.С.обернути = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"обернути");
    БН.С.М = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"М");
    БН.С.мавка = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"мавка");
    БН.С.МаМа = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"МаМа");
    БН.С.перебір = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"перебір");
    БН.С.далі = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"далі");
    БН.С.сп = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"сп");
    БН.С.позиція = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"позиція");
    БН.С.визначення = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"визначення");
    БН.С.ключі = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"ключі");
    БН.С.видалити = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"видалити");
    БН.С.байти = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"байти");
    БН.С.байт = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"байт");
    БН.С.читати = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"читати");
    БН.С.читати_юнікод = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"читати_юнікод");
    БН.С.префікс = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"префікс");
    БН.С.додати_символ = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"додати_символ");
    БН.С.адреса = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"адреса");
    БН.С.чародія_адреса = знайти_або_виділити_й_додати_назву_з_ю8(М, БН::адреса, ю8сі"чародія_адреса");
    вернути БН;
  }

  місцева дія додати_назву_з_ю8(М: адреса<Машина>, БН: адреса<БазаНазв>, значення: Ю8): позитивне {
    ціль розмір_значення_ю8 = порахувати_розмір_Ю8(значення);
    змінна ціль кодування: позитивне = КОДУВАННЯ_НАЗВИ_Ю8;
    ціль значення_КД = виділити<п8>(М, розмір_значення_ю8 + 1);
    ціль розмір_перекодованого_в_КД = КД::перекодувати_з_Ю8(значення, розмір_значення_ю8, значення_КД);
    якщо розмір_перекодованого_в_КД == 0 {
      кодування = КОДУВАННЯ_НАЗВИ_Ю8;
    } інакше {
      значення_КД[розмір_перекодованого_в_КД] = 0;
      значення = значення_КД;
      кодування = КОДУВАННЯ_НАЗВИ_КД;
    }
    змінна ціль позиція: позитивне = 0;
    поки позиція < БН.дані.розмір {
      ціль назва = БН.дані.дані[позиція];
      якщо назва.кодування == кодування {
        якщо перевірити_чи_ю8_рівні(назва.значення, значення) {
          вернути позиція;
        }
      }
      позиція = позиція + 1;
    }
    ціль назва = виділити_назву(М, кодування, значення);
    звільнити(М, значення_КД як адреса);
    покласти_в_накопичувач<адреса<Назва>>(М, БН.дані::адреса, назва);
    вернути БН.дані.розмір - 1;
  }

  місцева дія знайти_або_виділити_й_додати_назву_з_ю8(М: адреса<Машина>, БН: адреса<БазаНазв>, значення: Ю8): адреса<Назва> {
    ціль позиція_назви = додати_назву_з_ю8(М, БН, значення);
    вернути БН.дані.дані[позиція_назви];
  }

  місцева дія виділити_ю8_з_назви(М: адреса<Машина>, назва: адреса<Назва>, вихід: адреса<Ю8>): логічне {
    якщо назва.кодування == КОДУВАННЯ_НАЗВИ_Ю8 {
      вихід::вміст = пусто як Ю8;
      виділити_копію_Ю8(М, назва.значення, порахувати_розмір_Ю8(назва.значення), вихід);
      якщо вихід::вміст == пусто {
        ПОМЕРТИ(М, ю8сі"Не вдалося виділити копію Ю8");
      }
      вернути так;
    } інакше {
      ціль розмір_значення_КД = порахувати_розмір_КД(назва.значення);
      ціль значення_ю8 = виділити<п8>(М, розмір_значення_КД * 3 + 1);
      ціль розмір_перекодованого_в_Ю8 = КД::перекодувати_в_Ю8(назва.значення, розмір_значення_КД, значення_ю8);
      якщо розмір_перекодованого_в_Ю8 == 0 {
        надрукувати_Ю8(М, ю8сі"!!! Щось пішло не так під час отримання Ю8 з назви!");
        вернути ні;
      } інакше {
        значення_ю8[розмір_перекодованого_в_Ю8] = 0;
        вихід::вміст = значення_ю8;
        вернути так;
      }
    }
  }

  місцева дія перевірити_чи_назва_чародія(М: адреса<Машина>, назва: адреса<Назва>): логічне {
    якщо назва == М.БН.С.чародія_отримати_елемент {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_змінити_елемент {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_перебір {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_додати {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_відняти {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_помножити {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_поділити {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_остача {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_неповна_частка {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_степінь {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_вліво {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_вправо {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_вправо_зі_заповненням {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_двійкове_і {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_двійкове_або {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_двійкове_виключне_або {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_двійкове_не {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_більше {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_менше {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_містить {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_відʼємне {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_число {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_текст {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_юнікод {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_список {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_словник {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_збільшити {
      вернути так;
    }
    якщо назва == М.БН.С.чародія_зменшити {
      вернути так;
    }
    вернути ні;
  }
}