взяти визначення МаМа;

секція МаМа {
  місцева дія надрукувати_обʼєкт_структури_в_буфер_ю8(М: адреса<Машина>, буфер_ю8: адреса<БуферЮ8>, обʼєкт: адреса<Обʼєкт>, глибина: позитивне) {
    додати_до_буфера_ю8(буфер_ю8, ю8"<структура>");
  }

  місцева дія виділити_обʼєкт_структури(М: адреса<Машина>, назва: адреса<Назва>, предок: адреса<Обʼєкт>): адреса<Обʼєкт> {
    ціль обʼєкт_структури = виділити_обʼєкт(М, М.обʼєкт_структури_Структура);
    ціль дані_обʼєкта_структури = ДаніОбʼєктаСтруктури {};
    дані_обʼєкта_структури.назва = назва;
    якщо предок == пусто {
      дані_обʼєкта_структури.предок = М.обʼєкт_структури_обʼєкт;
    } інакше {
      дані_обʼєкта_структури.предок = предок;
    }
    дані_обʼєкта_структури.параметри = виділити_реєстр<адреса<Назва>, Параметр>(перевірити_чи_назви_рівні); // потім: тут тече памʼять
    дані_обʼєкта_структури.методи = зробити_реєстр<адреса<Назва>, адреса<Обʼєкт>>(перевірити_чи_назви_рівні);
    обʼєкт_структури.дані = дані_обʼєкта_структури;
    вернути обʼєкт_структури;
  }

  місцева дія виділити_обʼєкт_структури_назва_ю8(М: адреса<Машина>, назва: Ю8, предок: адреса<Обʼєкт>): адреса<Обʼєкт> {
    вернути виділити_обʼєкт_структури(М, знайти_або_виділити_й_додати_назву(М.БН::адреса, назва), предок);
  }

  місцева дія додати_метод_до_обʼєкту_структури(обʼєкт_структури: адреса<Обʼєкт>, М: адреса<Машина>, назва: адреса<Назва>, обʼєкт_методу: адреса<Обʼєкт>) {
    синонім дані_структури = обʼєкт_структури.дані як ДаніОбʼєктаСтруктури;
    змінити_в_реєстрі<адреса<Назва>, адреса<Обʼєкт>>(дані_структури.методи::адреса, назва, обʼєкт_методу);
  }

  дія структура_чародія_виконати(обʼєкт_чародії: адреса<Обʼєкт>, М: адреса<Машина>, середовище: адреса<Середовище>, обʼєкт_я: адреса<Обʼєкт>, аргументи: адреса<Вектор<адреса<Обʼєкт>>>, аргументи_з_назвами: адреса_або_пусто<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>): адреса_або_стан_помилки<Обʼєкт> {
    якщо обʼєкт_я.обʼєкт_структури != М.обʼєкт_структури_Структура {
      увімкнути_стан_помилки(М);
      вернути виділити_обʼєкт_тексту_з_ю8(М, ю8"обʼєкт_я не є структурою");
    }
    ціль обʼєкт_зі_структури = виділити_обʼєкт(М, обʼєкт_я);
    синонім дані_структури = обʼєкт_я.дані як ДаніОбʼєктаСтруктури;
    змінна ціль пп: позитивне = 0;
    поки пп < дані_структури.параметри.розмір {
      ціль параметр = дані_структури.параметри.елементи[пп].значення;
      змінна ціль аргумент: адреса<Обʼєкт> = пусто;
      якщо аргументи.довжина > пп {
        аргумент = аргументи.дані[пп];
      } інакше {
        якщо аргументи_з_назвами == пусто {
          // потім: перевірити чи є значення за замовчуванням
          увімкнути_стан_помилки(М);
          вернути виділити_обʼєкт_тексту_з_ю8(М, ю8"недостатньо аргументів");
        }
        ціль елемент_аргумента_з_назвою = отримати_з_реєстру<адреса<Назва>, адреса<Обʼєкт>>(аргументи_з_назвами, параметр.назва);
        якщо елемент_аргумента_з_назвою == пусто {
          // потім: перевірити чи є значення за замовчуванням
          увімкнути_стан_помилки(М);
          вернути виділити_обʼєкт_тексту_з_ю8(М, ю8"недостатньо аргументів");
        } інакше {
          аргумент = елемент_аргумента_з_назвою.значення;
        }
      }
      якщо параметр.типи.розмір > 0 {
        // потім: перевірити типи
      }
      змінити_властивість(обʼєкт_зі_структури, М, параметр.назва, аргумент);
      пп = пп + 1;
    }
    вернути обʼєкт_зі_структури;
  }

  місцева дія виділити_обʼєкт_структури_Структура(М: адреса<Машина>): адреса<Обʼєкт> {
    ціль обʼєкт_структури = виділити_обʼєкт(М, пусто);
    обʼєкт_структури.дані = ДаніОбʼєктаСтруктури {
      назва = знайти_або_виділити_й_додати_назву(М.БН::адреса, ю8"Структура"),
      предок = М.обʼєкт_структури_обʼєкт,
      параметри = виділити_реєстр<адреса<Назва>, Параметр>(перевірити_чи_назви_рівні),
      методи = зробити_реєстр<адреса<Назва>, адреса<Обʼєкт>>(перевірити_чи_назви_рівні)
    };
    вернути обʼєкт_структури;
  }

  місцева дія додати_методи_до_обʼєкта_структури_Структура(обʼєкт_структури: адреса<Обʼєкт>, М: адреса<Машина>): адреса<Обʼєкт> {
    додати_метод_до_обʼєкту_структури(обʼєкт_структури, М, М.БН.чародія_виконати, виділити_обʼєкт_нативної_дії(М, структура_чародія_виконати));
  }
}