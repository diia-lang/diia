взяти визначення МаМа/допоміжне/біб;
взяти визначення МаМа/допоміжне/реєстр;
взяти визначення МаМа/допоміжне/накопичувач;
взяти визначення МаМа/допоміжне/вектор;
взяти визначення МаМа/допоміжне/БуферЮ8;
взяти визначення МаМа/допоміжне/різне;
взяти визначення МаМа/розбирач;

секція МаМа {
  синонім ВВизначити = 1; // [обʼєкт](позиція_назви:п32){} -> []
  синонім ВЗвернутись = 2; // [](позиція_назви:п32){} -> [обʼєкт]
  синонім ВВиконати = 3; // [обʼєкт](кількість_аргументів:п32){} -> [результат]
  синонім ВВиконатиЗНазвами = 98; // [обʼєкт](кількість_аргументів:п32){-РА} -> [результат]
  синонім ВДодати = 13; // [а, б](){} -> [результат]

  синонім ВПопроситиВластивість = 4; // [обʼєкт](позиція_назви:п32){} -> [результат]
  синонім ВПопроситиЗмінитиВластивість = 5; // [обʼєкт, значення](позиція_назви:п32){} -> []
  синонім ВПопроситиВиконати = 97; // [обʼєкт](позиція_назви:п32, кількість_аргументів:п32){} -> [результат]
  синонім ВПопроситиВиконатиЗНазвами = 99; // [обʼєкт](позиція_назви:п32, кількість_аргументів:п32){-РА} -> [результат]

  синонім ВПокластиПусто = 110; // [](){} -> []
  синонім ВСтворитиДію = 9; // ...
  синонім ВСтворитиСтруктуру = 10; // ...
  синонім ВСтворитиСловник = 11; // ...
  синонім ВСтворитиСписок = 12; // ...

  синонім ВПокластиРеєстрАргументівЗНазвами = 100; // [](){+РА} -> []
  синонім ВЗареєструватиАргументЗНазвою = 101; // [обʼєкт](позиція_назви:п32){++РА} -> []
  синонім ВПокластиРеєстрПараметрів = 111; // [](){+НП} -> []
  синонім ВТриматиКод = 113; // [](позиція_підкоду:п32){=ТК} -> []
  синонім ВЗареєструватиПараметр = 112; // [тип](позиція_назви:п32, кількість_типів:п32){++НП} -> []

  синонім ВПочатиСпробу = 150; // [](позиція_вказівки_зловити:п32){} -> []
  синонім ВЗакінчитиСпробу = 151; // [](позиція_вказівки_виходу:п32){} -> []
  синонім ВВпасти = 152; // [обʼєкт](){} -> []
  синонім ВЗабрати = 153; // [обʼєкт](){} -> []
  синонім ВСтрибнути = 154; // [](позиція_вказівки:п32){} -> []
  синонім ВСтрибнутиЯкщоНі = 155; // [значення](позиція_вказівки:п32){} -> []
  синонім ВПокластиКонстанту = 156; // [](позиція_константи:п32){} -> []

  структура Код;
  структура Назва;
  структура МісцезнаходженняВказівки;

  структура МісцезнаходженняВказівки {
    позиція_вказівки: п32;
    рядок: п32;
    стовпець: п32;
  }

  структура Код {
    шлях_до_файлу: Ю8;
    розмір_вказівок: п32;
    вказівки: памʼять<п32>;
    розмір_місцезнаходження_вказівок: п32;
    місцезнаходження_вказівок: памʼять<МісцезнаходженняВказівки>;
  }

  місцева дія виділити_код(шлях_до_файлу: Ю8): адреса<Код>;
  місцева дія додати_вказівку_до_коду(код: адреса<Код>, рядок: п32, стовпець: п32, вказівка: п32): п32;
  місцева дія додати_вказівку_до_коду_з_аргументом_п32(код: адреса<Код>, рядок: п32, стовпець: п32, вказівка: п32, аргумент: п32): п32;
  місцева дія додати_вказівку_до_коду_з_двома_аргументами_п32(код: адреса<Код>, рядок: п32, стовпець: п32, вказівка: п32, аргумент1: п32, аргумент2: п32): п32;
  місцева дія надрукувати_код(код: адреса<Код>);
  місцева дія знайти_місцезнаходження_вказівки(код: адреса<Код>, позиція_вказівки: п32): адреса<МісцезнаходженняВказівки>;

  структура Назва {
    значення: Ю8;
  }

  місцева дія виділити_назву(значення: Ю8): адреса<Назва>;
  місцева дія перевірити_чи_назви_рівні(назва1: адреса<Назва>, назва2: адреса<Назва>): логічне;
}

секція МаМа {
  структура Утилізатор;
  структура Параметр;
  структура ДаніОбʼєктаСтруктури;
  структура Обʼєкт;
  структура МісцезнаходженняПомилки;
  структура Машина;
  структура Середовище;
}

секція МаМа {
  структура Утилізатор {
    початок_обʼєктів: адреса<Обʼєкт>;
    кількість_обʼєктів: позитивне;
    кількість_обʼєктів_щоб_запустити_утилізацію: позитивне;
    кількість_середовищ_щоб_запустити_утилізацію: позитивне;
    кількість_безсмертних_обʼєктів: позитивне;
    початок_середовищ: адреса<Середовище>;
    кількість_середовищ: позитивне;
  }

  місцева дія зробити_утилізатор(): Утилізатор;
  місцева дія позначити(М: адреса<Машина>);
  місцева дія утилізувати(М: адреса<Машина>);
  місцева дія позначити_обʼєкт(М: адреса<Машина>, обʼєкт: адреса<Обʼєкт>);
  місцева дія позначити_середовище(М: адреса<Машина>, середовище: адреса<Середовище>);
}

секція МаМа {
  синонім адреса_або_стан_помилки<Т> = адреса<Т>;
  синонім адреса_або_пусто<Т> = адреса<Т>;

  структура Параметр {
    назва: адреса<Назва>;
    типи: Накопичувач<адреса<Обʼєкт>>;
    код_значення_за_замовчуванням: адреса<Код>;
  }

  структура ДаніОбʼєктаСтруктури {
    назва: адреса<Назва>;
    предок: адреса<Обʼєкт>;
    параметри: адреса<Реєстр<адреса<Назва>, Параметр>>;
    методи: Реєстр<адреса<Назва>, адреса<Обʼєкт>>;
    середовище_створення: адреса<Середовище>;
  }

  структура ДаніОбʼєктаДії {
    назва: адреса<Назва>;
    параметри: адреса<Реєстр<адреса<Назва>, Параметр>>;
    середовище_створення: адреса<Середовище>;
    код: адреса<Код>;
  }

  синонім ДаніОбʼєктаЧисла = д64;
  синонім ДаніОбʼєктаТексту = Ю32;
  синонім ДаніОбʼєктаНативноїДії = (я: адреса<Обʼєкт>, М: адреса<Машина>, середовище: адреса<Середовище>, обʼєкт_я: адреса<Обʼєкт>, аргументи: адреса<Вектор<адреса<Обʼєкт>>>, аргументи_з_назвами: адреса_або_пусто<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>) -> адреса_або_стан_помилки<Обʼєкт>;

  структура Обʼєкт {
    наступний_обʼєкт: адреса<Обʼєкт>;
    позначено: логічне;
    обʼєкт_структури: адреса<Обʼєкт>;
    властивості: Реєстр<адреса<Назва>, адреса<Обʼєкт>>;
    дані: ДаніОбʼєктаСтруктури | ДаніОбʼєктаДії | ДаніОбʼєктаЧисла | ДаніОбʼєктаТексту | ДаніОбʼєктаНативноїДії;
  }

  місцева дія надрукувати_обʼєкт(М: адреса<Машина>, обʼєкт: адреса<Обʼєкт>, глибина: позитивне);
  місцева дія надрукувати_обʼєкт_в_буфер_ю8(М: адреса<Машина>, буфер_ю8: адреса<БуферЮ8>, обʼєкт: адреса<Обʼєкт>, глибина: позитивне);
  місцева дія надрукувати_обʼєкт_числа_в_буфер_ю8(М: адреса<Машина>, буфер_ю8: адреса<БуферЮ8>, обʼєкт: адреса<Обʼєкт>, глибина: позитивне);
  місцева дія надрукувати_обʼєкт_тексту_в_буфер_ю8(М: адреса<Машина>, буфер_ю8: адреса<БуферЮ8>, обʼєкт: адреса<Обʼєкт>, глибина: позитивне);
  місцева дія надрукувати_обʼєкт_нативної_дії_в_буфер_ю8(М: адреса<Машина>, буфер_ю8: адреса<БуферЮ8>, обʼєкт: адреса<Обʼєкт>, глибина: позитивне);
  місцева дія надрукувати_обʼєкт_структури_в_буфер_ю8(М: адреса<Машина>, буфер_ю8: адреса<БуферЮ8>, обʼєкт: адреса<Обʼєкт>, глибина: позитивне);
  місцева дія виділити_обʼєкт(М: адреса<Машина>, обʼєкт_структури: адреса<Обʼєкт>): адреса<Обʼєкт>;
  місцева дія виділити_обʼєкт_числа(М: адреса<Машина>, значення: д64): адреса<Обʼєкт>;
  місцева дія виділити_обʼєкт_тексту(М: адреса<Машина>, значення: Ю32): адреса<Обʼєкт>;
  місцева дія виділити_обʼєкт_тексту_з_ю8(М: адреса<Машина>, значення: Ю8): адреса<Обʼєкт>;
  місцева дія виділити_обʼєкт_структури(М: адреса<Машина>, назва: адреса<Назва>, предок: адреса<Обʼєкт>): адреса<Обʼєкт>;
  місцева дія виділити_обʼєкт_структури_назва_ю8(М: адреса<Машина>, назва: Ю8, предок: адреса<Обʼєкт>): адреса<Обʼєкт>;
  місцева дія виділити_обʼєкт_дії(М: адреса<Машина>, назва: адреса<Назва>, середовище_створення: адреса<Середовище>, код: адреса<Код>): адреса<Обʼєкт>;
  місцева дія виділити_обʼєкт_нативної_дії(М: адреса<Машина>, дія_виконання: ДаніОбʼєктаНативноїДії): адреса<Обʼєкт>;
  місцева дія виділити_обʼєкт_структури_число(М: адреса<Машина>): адреса<Обʼєкт>;
  місцева дія виділити_обʼєкт_структури_Структура(М: адреса<Машина>): адреса<Обʼєкт>;
  місцева дія отримати_властивість(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, назва: адреса<Назва>): адреса<Обʼєкт>;
  місцева дія змінити_властивість(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, назва: адреса<Назва>, значення: адреса<Обʼєкт>);
  місцева дія обʼєкт_додати(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, середовище: адреса<Середовище>, аргумент: адреса<Обʼєкт>): адреса_або_стан_помилки<Обʼєкт>;
  місцева дія обʼєкт_виконати(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, середовище: адреса<Середовище>, обʼєкт_я: адреса<Обʼєкт>, аргументи: адреса<Вектор<адреса<Обʼєкт>>>, аргументи_з_назвами: адреса_або_пусто<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>): адреса_або_стан_помилки<Обʼєкт>;
  місцева дія обʼєкт_нативної_дії_виконати(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, середовище: адреса<Середовище>, обʼєкт_я: адреса<Обʼєкт>, аргументи: адреса<Вектор<адреса<Обʼєкт>>>, аргументи_з_назвами: адреса_або_пусто<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>): адреса_або_стан_помилки<Обʼєкт>;
  місцева дія обʼєкт_дії_виконати(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, середовище: адреса<Середовище>, обʼєкт_я: адреса<Обʼєкт>, аргументи: адреса<Вектор<адреса<Обʼєкт>>>, аргументи_з_назвами: адреса_або_пусто<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>): адреса_або_стан_помилки<Обʼєкт>;
  місцева дія обʼєкт_структури_виконати(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, середовище: адреса<Середовище>, аргументи: адреса<Вектор<адреса<Обʼєкт>>>, аргументи_з_назвами: адреса_або_пусто<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>): адреса_або_стан_помилки<Обʼєкт>;
  місцева дія звільнити_обʼєкт(М: адреса<Машина>, обʼєкт: адреса<Обʼєкт>);

  місцева дія додати_метод_до_обʼєкту_структури(обʼєкт_структури: адреса<Обʼєкт>, М: адреса<Машина>, назва: адреса<Назва>, обʼєкт_методу: адреса<Обʼєкт>);
  місцева дія перевірити_чи_обʼєкт_є(М: адреса<Машина>, обʼєкт: адреса<Обʼєкт>, обʼєкт_структури: адреса<Обʼєкт>): логічне;
  місцева дія перевірити_чи_обʼєкт_так(М: адреса<Машина>, обʼєкт: адреса<Обʼєкт>): логічне;

  структура СтатичніНазви {
    предок: адреса<Назва>;
    чародія_додати: адреса<Назва>;
    чародія_виконати: адреса<Назва>;
  }

  структура БазаНазв {
    дані: Вектор<адреса<Назва>>;
    С: СтатичніНазви;
  }

  місцева дія зробити_базу_назв(): БазаНазв;
  місцева дія знайти_або_виділити_й_додати_назву(БН: адреса<БазаНазв>, значення: Ю8): адреса<Назва>;
  місцева дія додати_назву(БН: адреса<БазаНазв>, значення: Ю8): позитивне;

  структура МісцезнаходженняПомилки {
    шлях_до_файлу: Ю8;
    рядок: п32;
    стовпець: п32;
  }

  місцева дія виділити_місцезнаходження_помилки(шлях_до_файлу: Ю8, рядок: п32, стовпець: п32): адреса<МісцезнаходженняПомилки>;

  структура ІсторіяВиконання {
    обʼєкт_дії: адреса<Обʼєкт>;
    середовище: адреса<Середовище>;
  }

  структура Машина {
    утилізатор: Утилізатор;
    БН: БазаНазв;
    накопичувач_виконання: Накопичувач<адреса<Обʼєкт>>;
    накопичувач_реєстрів_аргументів: Накопичувач<адреса<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>>;
    накопичувач_реєстрів_параметрів: Накопичувач<адреса<Реєстр<адреса<Назва>, Параметр>>>;
    тримач_коду: адреса<Код>;
    накопичувач_історії_виконання: Накопичувач<ІсторіяВиконання>;
    глобальне_середовище: адреса<Середовище>;
    стан_помилки: логічне;
    місцезнаходження_помилки: адреса<МісцезнаходженняПомилки>;
    накопичувач_констант: Накопичувач<адреса<Обʼєкт>>;
    накопичувач_кодів: Накопичувач<адреса<Код>>;
    обʼєкт_структури_обʼєкт: адреса<Обʼєкт>;
    обʼєкт_структури_Структура: адреса<Обʼєкт>;
    обʼєкт_структури_число: адреса<Обʼєкт>;
    обʼєкт_структури_текст: адреса<Обʼєкт>;
    обʼєкт_структури_Дія: адреса<Обʼєкт>;
    обʼєкт_структури_НативнаДія: адреса<Обʼєкт>;
  }

  місцева дія виділити_машину(): адреса<Машина>;
  місцева дія виконати_код(М: адреса<Машина>, середовище: адреса<Середовище>, код: адреса<Код>): адреса_або_стан_помилки<Обʼєкт>;
  місцева дія увімкнути_стан_помилки(М: адреса<Машина>);
  місцева дія вимкнути_стан_помилки(М: адреса<Машина>);
  місцева дія виділити_місцезнаходження_помилки_з_вказівки_або_пусто(М: адреса<Машина>, код: адреса<Код>, позиція_вказівки: п32): адреса<МісцезнаходженняПомилки>;

  структура Середовище {
    наступне_середовище: адреса<Середовище>;
    позначено: логічне;
    батьківське: адреса<Середовище>;
    субʼєкти: Реєстр<адреса<Назва>, адреса<Обʼєкт>>;
  }

  місцева дія виділити_середовище(М: адреса<Машина>, батьківське: адреса<Середовище>): адреса<Середовище>;
  місцева дія змінити_в_середовищі(середовище: адреса<Середовище>, назва: адреса<Назва>, обʼєкт: адреса<Обʼєкт>);
  місцева дія знайти_в_середовищі(середовище: адреса<Середовище>, назва: адреса<Назва>): адреса<Обʼєкт>;
  місцева дія звільнити_середовище(М: адреса<Машина>, середовище: адреса<Середовище>);
}

секція МаМа {
  структура ПомилкаКомпіляції {
    повідомлення: Ю8;
    місцезнаходження: адреса<Місцезнаходження>;
  }

  місцева дія виділити_помилку_компіляції(): адреса<ПомилкаКомпіляції>;

  структура КонтекстКомпіляції {
    код_дії: адреса<Код>;
  }

  місцева дія виділити_контекст_компіляції(): адреса<КонтекстКомпіляції>;
  місцева дія звільнити_контекст_компіляції(контекст: адреса<КонтекстКомпіляції>);
  місцева дія скомпілювати_елемент_значення(М: адреса<Машина>, контекст: адреса<КонтекстКомпіляції>, код: адреса<Код>, елемент: адреса<АСДЗначення>): адреса<ПомилкаКомпіляції>;
  місцева дія скомпілювати_тіло(М: адреса<Машина>, контекст: адреса<КонтекстКомпіляції>, код: адреса<Код>, тіло: адреса<СписокАСДЗначень>): адреса<ПомилкаКомпіляції>;
}

секція МаМа {
  місцева дія виділити_обʼєкт_тексту_помилки_чародію_не_знайдено(М: адреса<Машина>, назва_чародії: Ю8, обʼєкт: адреса<Обʼєкт>): адреса<Обʼєкт>;
}