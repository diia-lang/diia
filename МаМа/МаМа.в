////
// Автор це Богданович Давид Когут Прихожденко та Організація Мавки та Організація Організацій
////

взяти визначення допоміжне/біб;
взяти визначення допоміжне/реєстр;
взяти визначення допоміжне/накопичувач;
взяти визначення допоміжне/накопичувач32;
взяти визначення допоміжне/НакопичувачЮ8;
взяти визначення допоміжне/різне;

// Перелік усіх вказівок МаМа, їх код та опис.
секція МаМа {
  синонім ВВизначити = 1; // [обʼєкт](позиція_назви:п32){} -> []{}
  синонім ВЗвернутись = 2; // [](позиція_назви:п32){} -> [обʼєкт]{}
  синонім ВВиконати = 3; // [обʼєкт, ...аргументи](кількість_аргументів:п32){} -> [результат]{}
  синонім ВВиконатиЗНазвами = 98; // [обʼєкт, ...аргументи](кількість_аргументів:п32){-РА} -> [результат]{}
  синонім ВДодати = 13; // [а, б](){} -> [результат]{}

  синонім ВПопроситиВластивість = 4; // [обʼєкт](позиція_назви:п32){} -> [результат]
  синонім ВПопроситиЗмінитиВластивість = 5; // [обʼєкт, значення](позиція_назви:п32){} -> []
  синонім ВПопроситиВиконати = 97; // [обʼєкт](позиція_назви:п32, кількість_аргументів:п32){} -> [результат]
  синонім ВПопроситиВиконатиЗНазвами = 99; // [обʼєкт](позиція_назви:п32, кількість_аргументів:п32){-РА} -> [результат]

  синонім ВПокластиПусто = 110; // [](){} -> []
  синонім ВСтворитиДію = 9; // ...
  синонім ВСтворитиСтруктуру = 10; // ...
  синонім ВСтворитиСловник = 11; // ...
  синонім ВСтворитиСписок = 12; // ...

  синонім ВПокластиРеєстрАргументівЗНазвами = 100; // [](){+РА} -> []
  синонім ВЗареєструватиАргументЗНазвою = 101; // [обʼєкт](позиція_назви:п32){++РА} -> []
  синонім ВПокластиРеєстрПараметрів = 111; // [](){+НП} -> []
  синонім ВТриматиКод = 113; // [](позиція_підкоду:п32){=ТК} -> []
  синонім ВЗареєструватиПараметр = 112; // [тип](позиція_назви:п32, кількість_типів:п32){++НП} -> []

  синонім ВПочатиСпробу = 150; // [](позиція_вказівки_зловити:п32){} -> []
  синонім ВЗакінчитиСпробу = 151; // [](позиція_вказівки_виходу:п32){} -> []
  синонім ВВпасти = 152; // [обʼєкт](){} -> []
  синонім ВЗабрати = 153; // [обʼєкт](){} -> []
  синонім ВСтрибнути = 154; // [](позиція_вказівки:п32){} -> []
  синонім ВСтрибнутиЯкщоНі = 155; // [значення](позиція_вказівки:п32){} -> []
  синонім ВПокластиКонстанту = 156; // [](позиція_константи:п32){} -> []
}

// Перелік усіх структур і синонімів, що використовуються в МаМа.
секція МаМа {
  структура Назва;
  структура Код;
  структура МісцезнаходженняВказівки;
  структура Утилізатор;
  структура Обʼєкт;
  структура Параметр;
  структура Обʼєкт;
  структура ОбʼєктСтруктури;
  структура ОбʼєктДії;
  структура ОбʼєктНативноїДії;
  структура ОбʼєктЧисла;
  структура ОбʼєктТексту;
  структура СкладенийОбʼєкт;
  структура СтатичніНазви;
  структура БазаНазв;
  структура МісцезнаходженняПадіння;
  структура ЕлементІсторіїВиконання;
  структура Середовище;
  структура Машина;

  синонім обʼєкт_або_стан_падіння = адреса<Обʼєкт>; // дії, що вертають обʼєкт_або_стан_падіння можуть вмикати стан падіння Машини, який необхідно обробляти
  синонім НативнаДія = (обʼєкт_нативної_дії: адреса<ОбʼєктНативноїДії>, М: адреса<Машина>, обʼєкт_я: адреса<Обʼєкт>, аргументи: адреса<Накопичувач<адреса<Обʼєкт>>>, іменовані_аргументи: адреса<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>) -> обʼєкт_або_стан_падіння;
  синонім ВідкликПередЗвільненнямОбʼєктаНативноїДії = (обʼєкт_нативної_дії: адреса<ОбʼєктНативноїДії>, М: адреса<Машина>) -> ніщо;

  структура Назва {
    значення: Ю8;
  }

  структура МісцезнаходженняВказівки {
    позиція_вказівки: п32;
    рядок: п32;
    стовпець: п32;
  }

  структура Код {
    шлях_до_файлу: Ю8;
    накопичувач_вказівок: Накопичувач32<п32>;
    накопичувач_місцезнаходжень_вказівок: Накопичувач32<МісцезнаходженняВказівки>;
  }

  структура Параметр {
    типи: Накопичувач<адреса<ОбʼєктСтруктури>>;
    код_значення_за_замовчуванням: адреса<Код>;
  }

  структура Утилізатор {
    початок_обʼєктів: адреса<Обʼєкт>;
    кількість_обʼєктів: позитивне;
    кількість_обʼєктів_щоб_запустити_утилізацію: позитивне;
    кількість_середовищ_щоб_запустити_утилізацію: позитивне;
    початок_середовищ: адреса<Середовище>;
    кількість_середовищ: позитивне;
  }

  структура Обʼєкт {
    наступний_обʼєкт: адреса<Обʼєкт>;
    позначено: логічне;
    тип: адреса<ОбʼєктСтруктури>;
  }

  структура ОбʼєктСтруктури {
    наступний_обʼєкт: адреса<Обʼєкт>;
    позначено: логічне;
    тип: адреса<ОбʼєктСтруктури>;
    властивості: Реєстр<адреса<Назва>, адреса<Обʼєкт>>;
    назва: адреса<Назва>;
    предок: адреса<ОбʼєктСтруктури>;
    параметри: адреса<Реєстр<адреса<Назва>, Параметр>>;
    методи: Реєстр<адреса<Назва>, адреса<Обʼєкт>>;
    середовище_створення: адреса<Середовище>;
  }

  структура ОбʼєктДії {
    наступний_обʼєкт: адреса<Обʼєкт>;
    позначено: логічне;
    тип: адреса<ОбʼєктСтруктури>;
    властивості: Реєстр<адреса<Назва>, адреса<Обʼєкт>>;
    назва: адреса<Назва>;
    параметри: адреса<Реєстр<адреса<Назва>, Параметр>>;
    середовище_створення: адреса<Середовище>;
    код: адреса<Код>;
  }

  структура ОбʼєктНативноїДії {
    наступний_обʼєкт: адреса<Обʼєкт>;
    позначено: логічне;
    тип: адреса<ОбʼєктСтруктури>;
    властивості: Реєстр<адреса<Назва>, адреса<Обʼєкт>>;
    нативна_дія: НативнаДія;
    дані: адреса;
    відклик_перед_звільненням: ВідкликПередЗвільненнямОбʼєктаНативноїДії;
  }

  структура ОбʼєктЧисла {
    наступний_обʼєкт: адреса<Обʼєкт>;
    позначено: логічне;
    тип: адреса<ОбʼєктСтруктури>;
    значення: д64;
  }

  структура ОбʼєктТексту {
    наступний_обʼєкт: адреса<Обʼєкт>;
    позначено: логічне;
    тип: адреса<ОбʼєктСтруктури>;
    значення: Ю32;
  }

  структура СкладенийОбʼєкт {
    наступний_обʼєкт: адреса<Обʼєкт>;
    позначено: логічне;
    тип: адреса<ОбʼєктСтруктури>;
    властивості: Реєстр<адреса<Назва>, адреса<Обʼєкт>>;
  }

  структура СтатичніНазви {
    предок: адреса<Назва>;
    чародія_додати: адреса<Назва>;
    чародія_виконати: адреса<Назва>;
    обʼєкт: адреса<Назва>;
    Структура: адреса<Назва>;
    НативнаДія: адреса<Назва>;
    Дія: адреса<Назва>;
    число: адреса<Назва>;
    текст: адреса<Назва>;
    друк: адреса<Назва>;
    значення: адреса<Назва>;
  }

  структура БазаНазв {
    дані: Накопичувач<адреса<Назва>>;
    С: СтатичніНазви;
  }

  структура МісцезнаходженняПадіння {
    шлях_до_файлу: Ю8;
    рядок: п32;
    стовпець: п32;
  }

  структура ЕлементІсторіїВиконання {
    обʼєкт_дії: адреса<ОбʼєктДії>;
    середовище: адреса<Середовище>;
  }

  структура Середовище {
    наступне_середовище: адреса<Середовище>;
    позначено: логічне;
    батьківське: адреса<Середовище>;
    субʼєкти: Реєстр<адреса<Назва>, адреса<Обʼєкт>>;
  }

  структура Машина {
    БН: БазаНазв;
    утилізатор: Утилізатор;
    НаКомКонст: Накопичувач<адреса<Обʼєкт>>; // накопичувач констант під час компіляції
    НаКомК: Накопичувач<адреса<Код>>; // накопичувач кодів під час компіляції
    НаВикІст: Накопичувач<ЕлементІсторіїВиконання>; // накопичувач історії виконання
    НаВикО: Накопичувач<адреса<Обʼєкт>>; // загальний накопичувач обʼєктів під час виконання
    НаВикРАрг: Накопичувач<адреса<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>>; // накопичувач реєстрів аргументів під час виконання
    НаВикРПар: Накопичувач<адреса<Реєстр<адреса<Назва>, Параметр>>>; // накопичувач реєстрів параметрів під час виконання
    ТрВикК: адреса<Код>; // тримач коду
    стан_падіння: логічне; // стан падіння під час виконання
    місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>; // місцезнаходження падіння під час виконання (якщо є стан падіння)
    глобальне_середовище: адреса<Середовище>;
    обʼєкт_структури_обʼєкт: адреса<ОбʼєктСтруктури>;
    обʼєкт_структури_Структура: адреса<ОбʼєктСтруктури>;
    обʼєкт_структури_число: адреса<ОбʼєктСтруктури>;
    обʼєкт_структури_текст: адреса<ОбʼєктСтруктури>;
    обʼєкт_структури_Дія: адреса<ОбʼєктСтруктури>;
    обʼєкт_структури_НативнаДія: адреса<ОбʼєктСтруктури>;
  }
}

// Публічні дії, які можна безпечно використовувати для створення мови.
секція МаМа {
  // Машина
  місцева дія виділити_машину(): адреса<Машина>;
  місцева дія звільнити_машину(М: адреса<Машина>);
  місцева дія виконати_код(М: адреса<Машина>, середовище: адреса<Середовище>, код: адреса<Код>): обʼєкт_або_стан_падіння;
  місцева дія виконати_код_в_середовищі(М: адреса<Машина>, середовище: адреса<Середовище>, код: адреса<Код>): обʼєкт_або_стан_падіння;
  місцева дія увімкнути_стан_падіння(М: адреса<Машина>);
  місцева дія покласти_константу(М: адреса<Машина>, обʼєкт: адреса<Обʼєкт>): п32;

  // Середовище.
  місцева дія виділити_середовище(М: адреса<Машина>, батьківське: адреса<Середовище>): адреса<Середовище>;
  місцева дія змінити_в_середовищі(середовище: адреса<Середовище>, назва: адреса<Назва>, обʼєкт: адреса<Обʼєкт>);
  місцева дія знайти_в_середовищі(середовище: адреса<Середовище>, назва: адреса<Назва>): адреса<Обʼєкт>;

  // Назва!
  // Назви використовуються всюди, де потрібно вказати ідентифікатор (наприклад назва дії, назва структури, назва параметра і тд).
  // Кожна назва унікальна в межах Машини. Назва звільняється з памʼяті лише разом зі звільненням самої Машини.
  місцева дія назва(М: адреса<Машина>, значення: Ю8): адреса<Назва>;
  місцева дія позиція_назви(М: адреса<Машина>, значення: Ю8): п32;

  // Код!
  // Код зберігає вказівки які виконує Машина, а також їх місцезнаходження (рядок та стовпець).
  // Код наразі звільняється з памʼяті лише разом зі звільненням самої Машини.
  місцева дія виділити_код(шлях_до_файлу: Ю8): адреса<Код>;
  місцева дія звільнити_код(код: адреса<Код>);
  місцева дія надрукувати_код(код: адреса<Код>);
  місцева дія покласти_вказівку_Визначити(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_назви: п32): п32;
  місцева дія покласти_вказівку_Звернутись(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_назви: п32): п32;
  місцева дія покласти_вказівку_Виконати(код: адреса<Код>, рядок: п32, стовпець: п32, кількість_аргументів: п32): п32;
  місцева дія покласти_вказівку_ВиконатиЗНазвами(код: адреса<Код>, рядок: п32, стовпець: п32, кількість_аргументів: п32): п32;
  місцева дія покласти_вказівку_Додати(код: адреса<Код>, рядок: п32, стовпець: п32): п32;
  місцева дія покласти_вказівку_ПопроситиВластивість(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_назви: п32): п32;
  місцева дія покласти_вказівку_ПопроситиЗмінитиВластивість(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_назви: п32): п32;
  місцева дія покласти_вказівку_ПопроситиВиконати(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_назви: п32, кількість_аргументів: п32): п32;
  місцева дія покласти_вказівку_ПопроситиВиконатиЗНазвами(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_назви: п32, кількість_аргументів: п32): п32;
  місцева дія покласти_вказівку_ПокластиПусто(код: адреса<Код>, рядок: п32, стовпець: п32): п32;
  місцева дія покласти_вказівку_СтворитиДію(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_назви: п32, позиція_коду: п32): п32;
  місцева дія покласти_вказівку_СтворитиСтруктуру(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_назви: п32): п32;
  місцева дія покласти_вказівку_СтворитиСписок(код: адреса<Код>, рядок: п32, стовпець: п32, розмір: п32): п32;
  місцева дія покласти_вказівку_СтворитиСловник(код: адреса<Код>, рядок: п32, стовпець: п32, розмір: п32): п32;
  місцева дія покласти_вказівку_ПокластиРеєстрАргументівЗНазвами(код: адреса<Код>, рядок: п32, стовпець: п32): п32;
  місцева дія покласти_вказівку_ЗареєструватиАргументЗНазвою(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_назви: п32): п32;
  місцева дія покласти_вказівку_ПокластиРеєстрПараметрів(код: адреса<Код>, рядок: п32, стовпець: п32): п32;
  місцева дія покласти_вказівку_ТриматиКод(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_коду: п32): п32;
  місцева дія покласти_вказівку_ЗареєструватиПараметр(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_назви: п32, кількість_типів: п32): п32;
  місцева дія покласти_вказівку_ПочатиСпробу(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_вказівки_зловити: п32): п32;
  місцева дія покласти_вказівку_ЗакінчитиСпробу(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_вказівки_виходу: п32): п32;
  місцева дія покласти_вказівку_Впасти(код: адреса<Код>, рядок: п32, стовпець: п32): п32;
  місцева дія покласти_вказівку_Забрати(код: адреса<Код>, рядок: п32, стовпець: п32): п32;
  місцева дія покласти_вказівку_Стрибнути(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_вказівки: п32): п32;
  місцева дія покласти_вказівку_СтрибнутиЯкщоНі(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_вказівки: п32): п32;
  місцева дія покласти_вказівку_ПокластиКонстанту(код: адреса<Код>, рядок: п32, стовпець: п32, позиція_константи: п32): п32;

  // Обʼєкти.
  // Обʼєкт є основою МаМа. Всі вказівки Машини стосуються саме обʼєктів.
  // МаМа має декілька видів обʼєктів: ОбʼєктСтруктури, ОбʼєктДії, ОбʼєктНативноїДії, ОбʼєктЧисла, ОбʼєктТексту та СкладенийОбʼєкт.
  місцева дія виділити_обʼєкт_структури(М: адреса<Машина>, назва: адреса<Назва>, предок: адреса<ОбʼєктСтруктури>): адреса<ОбʼєктСтруктури>;
  місцева дія додати_параметр_до_обʼєкта_структури(М: адреса<Машина>, обʼєкт_структури: адреса<ОбʼєктСтруктури>, параметр: Параметр);
  місцева дія виділити_обʼєкт_дії(М: адреса<Машина>, назва: адреса<Назва>, параметри: адреса<Реєстр<адреса<Назва>, Параметр>>, середовище_створення: адреса<Середовище>, код: адреса<Код>): адреса<ОбʼєктДії>;
  місцева дія додати_параметр_до_обʼєкта_дії(М: адреса<Машина>, обʼєкт_структури: адреса<ОбʼєктСтруктури>, параметр: Параметр);
  місцева дія виділити_обʼєкт_нативної_дії(М: адреса<Машина>, назва: адреса<Назва>, нативна_дія: НативнаДія, дані: адреса, відклик_перед_звільненням: ВідкликПередЗвільненнямОбʼєктаНативноїДії): адреса<ОбʼєктНативноїДії>;
  місцева дія виділити_обʼєкт_числа(М: адреса<Машина>, значення: д64): адреса<ОбʼєктЧисла>;
  місцева дія виділити_обʼєкт_тексту(М: адреса<Машина>, значення: Ю32): адреса<ОбʼєктТексту>;
  місцева дія виділити_обʼєкт_тексту_з_ю8(М: адреса<Машина>, значення: Ю8): адреса<ОбʼєктТексту>;
  місцева дія виділити_складений_обʼєкт(М: адреса<Машина>, тип: адреса<ОбʼєктСтруктури>): адреса<СкладенийОбʼєкт>;
  місцева дія обʼєкт_може_бути_так(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>): логічне;
  місцева дія обʼєкт_є(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, обʼєкт_структури: адреса<ОбʼєктСтруктури>): логічне;
  місцева дія обʼєкт_отримати_властивість(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, назва: адреса<Назва>): обʼєкт_або_стан_падіння;
  місцева дія обʼєкт_змінити_властивість(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, назва: адреса<Назва>, аргумент: адреса<Обʼєкт>): обʼєкт_або_стан_падіння;
  місцева дія обʼєкт_додати(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, аргумент: адреса<Обʼєкт>): обʼєкт_або_стан_падіння;
  // ... обʼєкт_відняти
  // ... обʼєкт_помножити
  // ... обʼєкт_поділити
  // ... обʼєкт_поділити_модуль
  // ... обʼєкт_поділити_націло
  // ... обʼєкт_піднести_до_степеня
  // ... обʼєкт_двійкове_і
  // ... обʼєкт_двійкове_або
  // ... обʼєкт_двійкове_вабо
  // ... обʼєкт_зсув_вліво
  // ... обʼєкт_зсув_вправо
  // ... обʼєкт_зсув_вправо_з_заповненням
  // ... обʼєкт_рівно
  // ... обʼєкт_не_рівно
  // ... обʼєкт_більше
  // ... обʼєкт_менше
  // ... обʼєкт_містить
  // ... обʼєкт_заперечити
  // ... обʼєкт_відʼємний
  місцева дія обʼєкт_виконати(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, обʼєкт_я: адреса<Обʼєкт>, аргументи: адреса<Накопичувач<адреса<Обʼєкт>>>, іменовані_аргументи: адреса<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>): обʼєкт_або_стан_падіння;
  місцева дія обʼєкт_структури_виконати(обʼєкт_структури: адреса<ОбʼєктСтруктури>, М: адреса<Машина>, аргументи: адреса<Накопичувач<адреса<Обʼєкт>>>, іменовані_аргументи: адреса<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>): обʼєкт_або_стан_падіння;
  місцева дія обʼєкт_дії_виконати(обʼєкт_дії: адреса<ОбʼєктДії>, М: адреса<Машина>, обʼєкт_я: адреса<Обʼєкт>, аргументи: адреса<Накопичувач<адреса<Обʼєкт>>>, іменовані_аргументи: адреса<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>): обʼєкт_або_стан_падіння;
  місцева дія обʼєкт_нативної_дії_виконати(обʼєкт_нативної_дії: адреса<ОбʼєктНативноїДії>, М: адреса<Машина>, обʼєкт_я: адреса<Обʼєкт>, аргументи: адреса<Накопичувач<адреса<Обʼєкт>>>, іменовані_аргументи: адреса<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>): обʼєкт_або_стан_падіння;
  місцева дія надрукувати_обʼєкт(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, глибина: позитивне);
  місцева дія надрукувати_обʼєкт_в_накопичувач_ю8(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>, накопичувач_ю8: адреса<НакопичувачЮ8>, глибина: позитивне);
  місцева дія надрукувати_обʼєкт_структури_в_накопичувач_ю8(обʼєкт_структури: адреса<ОбʼєктСтруктури>, М: адреса<Машина>, накопичувач_ю8: адреса<НакопичувачЮ8>, глибина: позитивне);
  місцева дія надрукувати_обʼєкт_дії_в_накопичувач_ю8(обʼєкт_дії: адреса<ОбʼєктДії>, М: адреса<Машина>, накопичувач_ю8: адреса<НакопичувачЮ8>, глибина: позитивне);
  місцева дія надрукувати_обʼєкт_нативної_дії_в_накопичувач_ю8(обʼєкт_нативної_дії: адреса<ОбʼєктНативноїДії>, М: адреса<Машина>, накопичувач_ю8: адреса<НакопичувачЮ8>, глибина: позитивне);
  місцева дія надрукувати_обʼєкт_числа_в_накопичувач_ю8(обʼєкт_числа: адреса<ОбʼєктЧисла>, М: адреса<Машина>, накопичувач_ю8: адреса<НакопичувачЮ8>, глибина: позитивне);
  місцева дія надрукувати_обʼєкт_тексту_в_накопичувач_ю8(обʼєкт_тексту: адреса<ОбʼєктТексту>, М: адреса<Машина>, накопичувач_ю8: адреса<НакопичувачЮ8>, глибина: позитивне);
  місцева дія надрукувати_складений_обʼєкт_в_накопичувач_ю8(складений_обʼєкт: адреса<СкладенийОбʼєкт>, М: адреса<Машина>, накопичувач_ю8: адреса<НакопичувачЮ8>, глибина: позитивне);

  // Утилізатор.
  місцева дія утилізувати(М: адреса<Машина>);
}

// Приватні дії, що використовуються в самій МаМа.
секція МаМа {
  місцева дія виділити_назву(значення: Ю8): адреса<Назва>;
  місцева дія перевірити_чи_назви_рівні(назва1: адреса<Назва>, назва2: адреса<Назва>): логічне;
  місцева дія зробити_базу_назв(): БазаНазв;
  місцева дія знайти_або_виділити_й_додати_назву(БН: адреса<БазаНазв>, значення: Ю8): адреса<Назва>;
  місцева дія додати_назву(БН: адреса<БазаНазв>, значення: Ю8): позитивне;

  місцева дія додати_вказівку_до_коду(код: адреса<Код>, рядок: п32, стовпець: п32, вказівка: п32): п32;
  місцева дія додати_вказівку_до_коду_з_аргументом_п32(код: адреса<Код>, рядок: п32, стовпець: п32, вказівка: п32, аргумент: п32): п32;
  місцева дія додати_вказівку_до_коду_з_двома_аргументами_п32(код: адреса<Код>, рядок: п32, стовпець: п32, вказівка: п32, аргумент1: п32, аргумент2: п32): п32;
  місцева дія знайти_місцезнаходження_вказівки(код: адреса<Код>, позиція_вказівки: п32): адреса<МісцезнаходженняВказівки>;

  дія виділити_обʼєкт<Т>(М: адреса<Машина>, тип: адреса<ОбʼєктСтруктури>): адреса<Т> {
    вивести_ю8(ю8"[МАВКА] виділяємо обʼєкт");
    якщо тип != пусто {
      якщо тип.назва == пусто {
        надрукувати_ю8(ю8" невідомого типу");
      } інакше {
        вивести_ю8(ю8" структури ");
        надрукувати_ю8(тип.назва.значення);
      }
    } інакше {
      надрукувати_ю8(ю8"");
    }
    ціль обʼєкт = виділити<Т>();
    обʼєкт.наступний_обʼєкт = М.утилізатор.початок_обʼєктів;
    обʼєкт.позначено = ні;
    обʼєкт.тип = тип;
    М.утилізатор.початок_обʼєктів = обʼєкт як адреса<Обʼєкт>;
    М.утилізатор.кількість_обʼєктів = М.утилізатор.кількість_обʼєктів + 1;
    вернути обʼєкт;
  }
  місцева дія створити_структуру_числа(М: адреса<Машина>): адреса<ОбʼєктСтруктури>;

  місцева дія зробити_утилізатор(): Утилізатор;
  місцева дія позначити(М: адреса<Машина>);
  місцева дія позначити_властивості(М: адреса<Машина>, властивості: адреса<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>);
  місцева дія позначити_параметри(М: адреса<Машина>, параметри: адреса<Реєстр<адреса<Назва>, Параметр>>);
  місцева дія позначити_методи(М: адреса<Машина>, методи: адреса<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>);
  місцева дія позначити_обʼєкт(М: адреса<Машина>, обʼєкт: адреса<Обʼєкт>);
  місцева дія позначити_обʼєкт_структури(М: адреса<Машина>, обʼєкт_структури: адреса<ОбʼєктСтруктури>);
  місцева дія позначити_обʼєкт_дії(М: адреса<Машина>, обʼєкт_дії: адреса<ОбʼєктДії>);
  місцева дія позначити_обʼєкт_нативної_дії(М: адреса<Машина>, обʼєкт_нативної_дії: адреса<ОбʼєктНативноїДії>);
  місцева дія позначити_обʼєкт_числа(М: адреса<Машина>, обʼєкт_числа: адреса<ОбʼєктЧисла>);
  місцева дія позначити_обʼєкт_тексту(М: адреса<Машина>, обʼєкт_тексту: адреса<ОбʼєктТексту>);
  місцева дія позначити_складений_обʼєкт(М: адреса<Машина>, складений_обʼєкт: адреса<СкладенийОбʼєкт>);
  місцева дія звільнити_обʼєкт(обʼєкт: адреса<Обʼєкт>, М: адреса<Машина>);
  місцева дія звільнити_обʼєкт_структури(обʼєкт_структури: адреса<ОбʼєктСтруктури>, М: адреса<Машина>);
  місцева дія звільнити_обʼєкт_дії(обʼєкт_дії: адреса<ОбʼєктДії>, М: адреса<Машина>);
  місцева дія звільнити_обʼєкт_нативної_дії(обʼєкт_нативної_дії: адреса<ОбʼєктНативноїДії>, М: адреса<Машина>);
  місцева дія звільнити_обʼєкт_числа(обʼєкт_числа: адреса<ОбʼєктЧисла>, М: адреса<Машина>);
  місцева дія звільнити_обʼєкт_тексту(обʼєкт_тексту: адреса<ОбʼєктТексту>, М: адреса<Машина>);
  місцева дія звільнити_складений_обʼєкт(складений_обʼєкт: адреса<СкладенийОбʼєкт>, М: адреса<Машина>);

  місцева дія звільнити_середовище(М: адреса<Машина>, середовище: адреса<Середовище>);
  місцева дія позначити_середовище(М: адреса<Машина>, середовище: адреса<Середовище>);

  місцева дія виділити_місцезнаходження_падіння(шлях_до_файлу: Ю8, рядок: п32, стовпець: п32): адреса<МісцезнаходженняПадіння>;
  місцева дія виділити_місцезнаходження_падіння_з_вказівки_або_пусто(М: адреса<Машина>, код: адреса<Код>, позиція_вказівки: п32): адреса<МісцезнаходженняПадіння>;

  місцева дія виділити_обʼєкт_тексту_помилки_невірний_тип_аргумента(М: адреса<Машина>, назва: Ю8, очікується: Накопичувач<адреса<ОбʼєктСтруктури>>, отримано: адреса<ОбʼєктСтруктури>): адреса<Обʼєкт>;
}