взяти визначення МаМа;

секція МаМа {
  місцева дія виділити_код(): адреса<Код> {
    ціль код = виділити<Код>();
    код.розмір_вказівок = 0;
    код.вказівки = пусто;
    код.кількість_назв = 0;
    код.назви = пусто;
    код.кількість_чисел = 0;
    код.числа = пусто;
    код.кількість_текстів = 0;
    код.тексти = пусто;
    код.кількість_юнікодів = 0;
    код.юнікоди = пусто;
    код.кількість_підкодів = 0;
    код.підкоди = пусто;
    вернути код;
  }

  місцева дія додати_назву_до_коду(код: адреса<Код>, назва: адреса<Назва>): п32 {
    код.назви = перевиділити<адреса<Назва>>(код.назви, (код.кількість_назв + 1) як ц32);
    код.назви[код.кількість_назв] = назва;
    код.кількість_назв = код.кількість_назв + 1;
    вернути код.кількість_назв - 1;
  }

  місцева дія додати_число_до_коду(код: адреса<Код>, значення: д64): п32 {
    код.числа = перевиділити<д64>(код.числа, (код.кількість_чисел + 1) як ц32);
    код.числа[код.кількість_чисел] = значення;
    код.кількість_чисел = код.кількість_чисел + 1;
    вернути код.кількість_чисел - 1;
  }

  місцева дія додати_текст_до_коду(код: адреса<Код>, текст: памʼять<п32>): п32 {
    код.тексти = перевиділити<памʼять<п32>>(код.тексти, (код.кількість_текстів + 1) як ц32);
    код.тексти[код.кількість_текстів] = текст;
    код.кількість_текстів = код.кількість_текстів + 1;
    вернути код.кількість_текстів - 1;
  }

  місцева дія додати_юнікод_до_коду(код: адреса<Код>, юнікод: памʼять<п32>): п32 {
    код.юнікоди = перевиділити<памʼять<п32>>(код.юнікоди, (код.кількість_юнікодів + 1) як ц32);
    код.юнікоди[код.кількість_юнікодів] = юнікод;
    код.кількість_юнікодів = код.кількість_юнікодів + 1;
    вернути код.кількість_юнікодів - 1;
  }

  місцева дія додати_вказівку_до_коду(код: адреса<Код>, вказівка: п8): п32 {
    код.вказівки = перевиділити<п8>(код.вказівки, (код.розмір_вказівок + 1) як ц32);
    код.вказівки[код.розмір_вказівок] = вказівка;
    код.розмір_вказівок = код.розмір_вказівок + 1;
    вернути код.розмір_вказівок - 1;
  }

  місцева дія додати_вказівку_до_коду_з_аргументом_п32(код: адреса<Код>, вказівка: п8, аргумент: п32): п32 {
    код.вказівки = перевиділити<п8>(код.вказівки, (код.розмір_вказівок + 1 + 4) як ц32);
    код.вказівки[код.розмір_вказівок] = вказівка;
    код.вказівки[код.розмір_вказівок + 1] = (аргумент & 0шДД) як п8;
    код.вказівки[код.розмір_вказівок + 2] = ((аргумент >> 8) & 0шДД) як п8;
    код.вказівки[код.розмір_вказівок + 3] = ((аргумент >> 16) & 0шДД) як п8;
    код.вказівки[код.розмір_вказівок + 4] = ((аргумент >> 24) & 0шДД) як п8;
    код.розмір_вказівок = код.розмір_вказівок + 1 + 4;
    вернути код.розмір_вказівок - 1 - 4;
  }

  місцева дія прочитати_аргумент_вказівки_п32(код: адреса<Код>, позиція: п32): п32 {
    вернути (код.вказівки[позиція + 1] як п32)
          + ((код.вказівки[позиція + 2] як п32) << 8)
          + ((код.вказівки[позиція + 3] як п32) << 16)
          + ((код.вказівки[позиція + 4] як п32) << 24);
  }

  місцева дія виділити_назву(значення: Ю8): адреса<Назва> {
    ціль назва = виділити<Назва>();
    назва.значення = виділити_копію_ю8(значення);
    вернути назва;
  }

  місцева дія перевірити_чи_назви_рівні(назва1: адреса<Назва>, назва2: адреса<Назва>): логічне {
    вернути назва1 == назва2;
  }
}