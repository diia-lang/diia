взяти визначення МаМа;

секція МаМа {
  місцева дія надрукувати_обʼєкт_структури_в_буфер_ю8(обʼєкт_структури: адреса<ОбʼєктСтруктури>, М: адреса<Машина>, буфер_ю8: адреса<БуферЮ8>, глибина: позитивне) {
    додати_до_буфера_ю8(буфер_ю8, ю8"<структура");
    якщо обʼєкт_структури.назва != пусто {
      додати_до_буфера_ю8(буфер_ю8, ю8" ");
      додати_до_буфера_ю8(буфер_ю8, обʼєкт_структури.назва.значення);
    }
    додати_до_буфера_ю8(буфер_ю8, ю8">");
  }

  місцева дія створити_структуру(М: адреса<Машина>, назва: адреса<Назва>, предок: адреса<ОбʼєктСтруктури>): адреса<ОбʼєктСтруктури> {
    ціль обʼєкт_структури = виділити<ОбʼєктСтруктури>();
    обʼєкт_структури.наступний_обʼєкт = М.утилізатор.початок_обʼєктів;
    обʼєкт_структури.позначено = ні;
    обʼєкт_структури.тип = М.обʼєкт_структури_Структура;

    обʼєкт_структури.назва = назва;
    обʼєкт_структури.предок = предок;
    обʼєкт_структури.параметри = виділити_реєстр<адреса<Назва>, Параметр>(перевірити_чи_назви_рівні);  // потім: тут тече памʼять
    // потім: скопіювати параметри з предка
    обʼєкт_структури.методи = зробити_реєстр<адреса<Назва>, адреса<Обʼєкт>>(перевірити_чи_назви_рівні);
    обʼєкт_структури.середовище_створення = пусто;

    М.утилізатор.початок_обʼєктів = обʼєкт_структури як адреса<Обʼєкт>;
    М.утилізатор.кількість_обʼєктів = М.утилізатор.кількість_обʼєктів + 1;
    вернути обʼєкт_структури;
  }
}