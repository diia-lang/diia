////
// Автор це Богданович Давид Когут Прихожденко та Організація Мавки та Організація Організацій
////

взяти визначення МаМа;

секція МаМа {
  місцева дія зробити_базу_назв(): БазаНазв {
    ціль БН: БазаНазв;
    БН.дані = зробити_накопичувач<адреса<Назва>>();
    БН.С.предок = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"предок");
    БН.С.чародія_додати = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_додати");
    БН.С.чародія_відняти = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_відняти");
    БН.С.чародія_помножити = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_помножити");
    БН.С.чародія_поділити = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_поділити");
    БН.С.чародія_поділити_за_модулем = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_поділити_за_модулем");
    БН.С.чародія_поділити_націло = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_поділити_націло");
    БН.С.чародія_зсунути_вліво = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_зсунути_вліво");
    БН.С.чародія_зсунути_вправо = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_зсунути_вправо");
    БН.С.чародія_зсунути_вправо_знаково = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_зсунути_вправо_знаково");
    БН.С.чародія_ді = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_ді");
    БН.С.чародія_дабо = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_дабо");
    БН.С.чародія_вабо = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_вабо");
    БН.С.чародія_більше = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_більше");
    БН.С.чародія_менше = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_менше");
    БН.С.чародія_не_більше = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_не_більше");
    БН.С.чародія_не_менше = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_не_менше");
    БН.С.чародія_виконати = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"чародія_виконати");
    БН.С.обʼєкт = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"обʼєкт");
    БН.С.Структура = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"Структура");
    БН.С.НативнаДія = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"НативнаДія");
    БН.С.Дія = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"Дія");
    БН.С.число = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"число");
    БН.С.текст = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"текст");
    БН.С.юнікод = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"юнікод");
    БН.С.друк = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"друк");
    БН.С.значення = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"значення");
    БН.С.модуль = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"модуль");
    БН.С.біб = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"біб");
    БН.С.пак = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"пак");
    БН.С.Модуль = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"Модуль");
    БН.С.список = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"список");
    БН.С.словник = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"словник");
    БН.С.логічне = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"логічне");
    БН.С.так = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"так");
    БН.С.ні = знайти_або_виділити_й_додати_назву(БН::адреса, ю8"ні");
    вернути БН;
  }

  місцева дія знайти_або_виділити_й_додати_назву(БН: адреса<БазаНазв>, значення: Ю8): адреса<Назва> {
    змінна ціль позиція: позитивне = 0;
    поки позиція < БН.дані.розмір {
      ціль назва = БН.дані.дані[позиція];
      якщо перевірити_чи_ю8_рівні(назва.значення, значення) {
        вернути назва;
      }
      позиція = позиція + 1;
    }
    ціль назва = виділити_назву(значення);
    покласти_в_накопичувач<адреса<Назва>>(БН.дані::адреса, назва);
    вернути назва;
  }

  місцева дія додати_назву(БН: адреса<БазаНазв>, значення: Ю8): позитивне {
    змінна ціль позиція: позитивне = 0;
    поки позиція < БН.дані.розмір {
      ціль назва = БН.дані.дані[позиція];
      якщо перевірити_чи_ю8_рівні(назва.значення, значення) {
        вернути позиція;
      }
      позиція = позиція + 1;
    }
    ціль назва = виділити_назву(значення);
    покласти_в_накопичувач<адреса<Назва>>(БН.дані::адреса, назва);
    вернути БН.дані.розмір - 1;
  }

  місцева дія назва(М: адреса<Машина>, значення: Ю8): адреса<Назва> {
    вернути знайти_або_виділити_й_додати_назву(М.БН::адреса, значення);
  }

  місцева дія позиція_назви(М: адреса<Машина>, значення: Ю8): п32 {
    вернути додати_назву(М.БН::адреса, значення) як п32;
  }
}