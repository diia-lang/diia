////
// Автор це Богданович Давид Когут Прихожденко та Організація Мавки та Організація Організацій
////

взяти визначення МаМа;

секція МаМа {
  місцева дія надрукувати_обʼєкт_числа_в_буфер_ю8(обʼєкт_числа: адреса<ОбʼєктЧисла>, М: адреса<Машина>, буфер_ю8: адреса<БуферЮ8>, глибина: позитивне) {
    ціль д64ю8 = перетворити_д64_в_ю8(обʼєкт_числа.значення);
    додати_до_буфера_ю8(буфер_ю8, д64ю8);
    звільнити(д64ю8);
  }

  дія нативна_дія_числа_додати(обʼєкт_нативної_дії: адреса<МаМа::ОбʼєктНативноїДії>, М: адреса<МаМа::Машина>, обʼєкт_я: адреса<МаМа::Обʼєкт>, аргументи: адреса<Накопичувач<адреса<МаМа::Обʼєкт>>>, іменовані_аргументи: адреса<Реєстр<адреса<МаМа::Назва>, адреса<МаМа::Обʼєкт>>>): адреса<МаМа::Обʼєкт> {
    якщо обʼєкт_я == пусто {
      увімкнути_стан_падіння(М);
      вернути виділити_обʼєкт_тексту_з_ю8(М, ю8"Неможливо додати пусто") як адреса<Обʼєкт>;
    }
    якщо обʼєкт_я.тип != М.обʼєкт_структури_число {
      увімкнути_стан_падіння(М);
      вернути виділити_обʼєкт_тексту_з_ю8(М, ю8"Неможливо додати") як адреса<Обʼєкт>;
    }
    змінна ціль аргумент_значення: адреса<Обʼєкт> = пусто;
    якщо аргументи == пусто {
      якщо іменовані_аргументи == пусто {
      } інакше {
        ціль елемент_реєстру = отримати_з_реєстру<адреса<Назва>, адреса<Обʼєкт>>(іменовані_аргументи, М.БН.С.значення);
        якщо елемент_реєстру == пусто {
          // потім: помилка?
        } інакше {
          аргумент_значення = елемент_реєстру.значення;
        }
      }
    } інакше {
      якщо аргументи.розмір == 0 {
        якщо іменовані_аргументи == пусто {
        } інакше {
          ціль елемент_реєстру = отримати_з_реєстру<адреса<Назва>, адреса<Обʼєкт>>(іменовані_аргументи, М.БН.С.значення);
          якщо елемент_реєстру == пусто {
            // потім: помилка?
          } інакше {
            аргумент_значення = елемент_реєстру.значення;
          }
        }
      } інакше {
        аргумент_значення = аргументи.дані[0];
      }
    }
    якщо аргумент_значення == пусто {
      увімкнути_стан_падіння(М);
      вернути виділити_обʼєкт_тексту_з_ю8(М, ю8"Неможливо додати пусто") як адреса<Обʼєкт>;
    }
    якщо аргумент_значення.тип != М.обʼєкт_структури_число {
      увімкнути_стан_падіння(М);
      вернути виділити_обʼєкт_тексту_з_ю8(М, ю8"Неможливо додати") як адреса<Обʼєкт>;
    }
    ціль оч1 = обʼєкт_я як адреса<ОбʼєктЧисла>;
    ціль оч2 = аргумент_значення як адреса<ОбʼєктЧисла>;
    вернути виділити_обʼєкт_числа(М, оч1.значення + оч2.значення) як адреса<Обʼєкт>;
  }

  місцева дія створити_структуру_числа(М: адреса<Машина>): адреса<ОбʼєктСтруктури> {
    ціль обʼєкт_структури = виділити_обʼєкт_структури(М, М.БН.С.число, М.обʼєкт_структури_обʼєкт);

    ціль обʼєкт_нативної_дії_додати = виділити_обʼєкт_нативної_дії(М, М.БН.С.чародія_додати, нативна_дія_числа_додати, пусто, пусто);
    змінити_в_реєстрі<адреса<Назва>, адреса<Обʼєкт>>(обʼєкт_структури.методи::адреса, М.БН.С.чародія_додати, обʼєкт_нативної_дії_додати як адреса<Обʼєкт>);

    вернути обʼєкт_структури;
  }

  місцева дія виділити_обʼєкт_числа(М: адреса<Машина>, значення: д64): адреса<ОбʼєктЧисла> {
    ціль обʼєкт_числа = виділити_обʼєкт<ОбʼєктЧисла>(М, М.обʼєкт_структури_число);

    обʼєкт_числа.значення = значення;

    вернути обʼєкт_числа;
  }

  місцева дія звільнити_обʼєкт_числа(обʼєкт_числа: адреса<ОбʼєктЧисла>, М: адреса<Машина>) {
    звільнити(обʼєкт_числа);
  }
}