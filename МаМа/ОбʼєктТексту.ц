////
// Автор це Богданович Давид Когут Прихожденко та Організація Мавки та Організація Організацій
////

взяти визначення МаМа;

секція МаМа {
  місцева дія надрукувати_обʼєкт_тексту_в_накопичувач_ю8(обʼєкт_тексту: адреса<ОбʼєктТексту>, М: адреса<Машина>, накопичувач_ю8: адреса<НакопичувачЮ8>, глибина: позитивне) {
    якщо глибина > 0 {
      покласти_в_накопичувач_ю8(накопичувач_ю8, ю8"\"");
    }
    ціль розмір_значення_КД = strlen(обʼєкт_тексту.значення);
    ціль значення_ю8 = виділити<п8>((розмір_значення_КД * 3) + 1);
    ціль розмір_перекодованого_в_Ю8 = КД::перекодувати_в_Ю8(обʼєкт_тексту.значення, розмір_значення_КД як позитивне, значення_ю8);
    значення_ю8[розмір_перекодованого_в_Ю8] = 0;
    якщо розмір_перекодованого_в_Ю8 == 0 {
      надрукувати_ю8(ю8"!!! Щось пішло не так під час отримання Ю8 з тексту!");
    } інакше {
      покласти_в_накопичувач_ю8(накопичувач_ю8, значення_ю8);
    }
    звільнити(значення_ю8);
    якщо глибина > 0 {
      покласти_в_накопичувач_ю8(накопичувач_ю8, ю8"\"");
    }
  }

  місцева дія обʼєкт_тексту_містисть(обʼєкт_тексту: адреса<ОбʼєктТексту>, М: адреса<Машина>, аргумент: адреса<Обʼєкт>): обʼєкт_або_стан_падіння {
    // потім: втілити
    вернути М.обʼєкт_логічного_ні як адреса<Обʼєкт>;
  }

  дія нативна_дія_тексту_чародія_додати(обʼєкт_нативної_дії: адреса<ОбʼєктНативноїДії>, М: адреса<Машина>, обʼєкт_я: адреса<Обʼєкт>, аргументи: адреса<Накопичувач<адреса<Обʼєкт>>>, іменовані_аргументи: адреса<Реєстр<адреса<Назва>, адреса<Обʼєкт>>>): адреса<Обʼєкт> {
    якщо обʼєкт_я == пусто {
      увімкнути_стан_падіння(М, пусто);
      вернути виділити_обʼєкт_тексту_з_ю8(М, ю8"Обʼєкт пусто не може виконати дію тексту \"чародія_додати\"") як адреса<Обʼєкт>;
    }
    якщо обʼєкт_я.тип != М.обʼєкт_структури_текст {
      увімкнути_стан_падіння(М, пусто);
      вернути виділити_обʼєкт_тексту_з_ю8(М, ю8"Обʼєкт не є текстом") як адреса<Обʼєкт>;
    }
    ціль обʼєкт_тексту = обʼєкт_я як адреса<ОбʼєктТексту>;
    змінна ціль значення_знайдено = ні;
    змінна ціль значення: адреса<Обʼєкт> = пусто;
    якщо іменовані_аргументи != пусто {
      ціль елемент_аргумента_значення = отримати_з_реєстру<адреса<Назва>, адреса<Обʼєкт>>(іменовані_аргументи, М.БН.С.значення);
      якщо елемент_аргумента_значення == пусто {
        значення_знайдено = так;
        значення = елемент_аргумента_значення.значення;
      }
    }
    якщо аргументи != пусто {
      якщо аргументи.розмір > 0 {
        якщо значення_знайдено == ні {
          значення_знайдено = так;
          значення = аргументи.дані[0];
        }
      }
    }
    якщо значення_знайдено == ні {
      вернути пусто; // потім: помилка
    }
    // потім: втілити
    вернути пусто;
  }


  місцева дія створити_структуру_тексту(М: адреса<Машина>): адреса<ОбʼєктСтруктури> {
    ціль обʼєкт_структури = виділити_обʼєкт_структури(М, М.БН.С.текст, М.обʼєкт_структури_обʼєкт);

    ціль обʼєкт_нативної_дії_чародія_додати = виділити_обʼєкт_нативної_дії(М, М.БН.С.чародія_додати, нативна_дія_тексту_чародія_додати, пусто, пусто);
    змінити_в_реєстрі<адреса<Назва>, адреса<Обʼєкт>>(обʼєкт_структури.методи::адреса, М.БН.С.чародія_додати, обʼєкт_нативної_дії_чародія_додати як адреса<Обʼєкт>);

    вернути обʼєкт_структури;
  }

  місцева дія виділити_обʼєкт_тексту(М: адреса<Машина>, значення: памʼять<п8>): адреса<ОбʼєктТексту> {
    ціль обʼєкт_тексту = виділити_обʼєкт<ОбʼєктТексту>(М, М.обʼєкт_структури_текст);

    обʼєкт_тексту.значення = виділити_копію_ю8(значення);

    вернути обʼєкт_тексту;
  }

  місцева дія виділити_обʼєкт_тексту_з_ю8(М: адреса<Машина>, значення: Ю8): адреса<ОбʼєктТексту> {
    змінна ціль вихід_КД: памʼять<п8> = пусто;
    ціль довжина_Ю8 = strlen(значення);
    якщо довжина_Ю8 == 0 {
      вихід_КД = виділити<п8>(1);
      вихід_КД[0] = 0;
    } інакше {
      вихід_КД = виділити<п8>(довжина_Ю8 + 1);
      ціль розмір_перекодованого_виходу_КД = КД::перекодувати_з_Ю8(
        значення,
        довжина_Ю8 як позитивне,
        вихід_КД
      );
      вихід_КД[розмір_перекодованого_виходу_КД] = 0;
      якщо розмір_перекодованого_виходу_КД == 0 {
        ПОМЕРТИ(ю8"Не вдалось перекодувати в КД");
      }
    }

    ціль обʼєкт_тексту = виділити_обʼєкт<ОбʼєктТексту>(М, М.обʼєкт_структури_текст);

    обʼєкт_тексту.значення = виділити_копію_ю8(вихід_КД);

    звільнити(вихід_КД);

    вернути обʼєкт_тексту;
  }

  місцева дія звільнити_обʼєкт_тексту(обʼєкт_тексту: адреса<ОбʼєктТексту>, М: адреса<Машина>) {
    звільнити(обʼєкт_тексту.значення);
    звільнити(обʼєкт_тексту);
  }
}