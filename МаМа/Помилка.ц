////
// Автор це Богданович Давид Когут Прихожденко та Організація Мавки та Організація Організацій
////

взяти визначення МаМа;

секція МаМа {
  місцева дія виділити_місцезнаходження_падіння(шлях_до_файлу: Ю8, рядок: п32, стовпець: п32): адреса<МісцезнаходженняПадіння> {
    ціль місцезнаходження_падіння = виділити<МісцезнаходженняПадіння>();
    місцезнаходження_падіння.шлях_до_файлу = виділити_копію_ю8(шлях_до_файлу);
    місцезнаходження_падіння.рядок = рядок;
    місцезнаходження_падіння.стовпець = стовпець;
    вернути місцезнаходження_падіння;
  }

  місцева дія виділити_місцезнаходження_падіння_з_вказівки_або_пусто(М: адреса<Машина>, код: адреса<Код>, позиція_вказівки: п32): адреса<МісцезнаходженняПадіння> {
    ціль місцезнаходження_вказівки = знайти_місцезнаходження_вказівки(код, позиція_вказівки);
    якщо місцезнаходження_вказівки != пусто {
      вернути виділити_місцезнаходження_падіння(код.шлях_до_файлу, місцезнаходження_вказівки.рядок, місцезнаходження_вказівки.стовпець);
    }
    вернути пусто;
  }

  місцева дія виділити_обʼєкт_тексту_помилки_невірний_тип_аргумента(М: адреса<Машина>, назва: Ю8, очікується: Накопичувач<адреса<ОбʼєктСтруктури>>, отримано: адреса<ОбʼєктСтруктури>): адреса<Обʼєкт> {
    ціль накопичувач_ю8 = зробити_накопичувач_ю8();
    покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, ю8"Невірний тип аргумента \"");
    покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, назва);
    покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, ю8"\"");
    покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, ю8": очікується ");
    змінна ціль пп: позитивне = 0;
    поки пп < очікується.розмір {
      ціль тип = очікується.дані[пп];
      якщо тип == пусто {
        покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, ю8"\"пусто\"");
      } інакше {
        якщо тип.назва == пусто {
          покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, ю8"<структура без назви>");
        } інакше {
          покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, ю8"\"");
          ціль назва = отримати_ю8_з_назви(тип.назва);
          покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, назва);
          звільнити(назва);
          покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, ю8"\"");
        }
      }
      якщо пп < очікується.розмір - 1 {
        покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, ю8" або ");
      }
      пп += 1;
    }
    покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, ю8", отримано ");
    якщо отримано == пусто {
      покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, ю8"\"пусто\"");
    } інакше {
      якщо отримано.назва == пусто {
        покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, ю8"<структура без назви>");
      } інакше {
        покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, ю8"\"");
        ціль назва = отримати_ю8_з_назви(отримано.назва);
        покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, назва);
        звільнити(назва);
        покласти_в_накопичувач_ю8(накопичувач_ю8::адреса, ю8"\"");
      }
    }
    ціль ю8 = виділити_ю8_з_накопичувача_ю8(накопичувач_ю8::адреса);
    звільнити_значення_накопичувача_ю8(накопичувач_ю8);
    ціль обʼєкт_тексу = виділити_обʼєкт_тексту_з_ю8(М, ю8);
    звільнити(ю8);
    вернути обʼєкт_тексу як адреса<Обʼєкт>;
  }
}