#pragma once

#ifndef OPS_H
#define OPS_H

typedef enum {
  OP_POP,

  OP_CONSTANT,
  OP_NUMBER,
  OP_EMPTY,
  OP_YES,
  OP_NO,

  OP_INITCALL,
  OP_STORE_ARG,
  OP_CALL,
  OP_RETURN,
  OP_DIIA,
  OP_DIIA_PARAM,

  OP_STORE,
  OP_LOAD,

  OP_JUMP,
  OP_JUMP_IF_TRUE,
  OP_JUMP_IF_FALSE,
  OP_E_JUMP_IF_TRUE,
  OP_E_JUMP_IF_FALSE,

  OP_GET,
  OP_SET,
  OP_E_SETR,

  OP_TRY,
  OP_TRY_DONE,
  OP_THROW,

  OP_LIST,
  OP_LIST_APPEND,
  OP_DICT,
  OP_DICT_SET,

  OP_STRUCT,
  OP_STRUCT_PARAM,
  OP_STRUCT_METHOD,

  OP_MODULE,
  OP_GIVE,
  OP_MODULE_DONE,
  OP_KEEP_MODULE,
  OP_LOAD_MODULE,
  OP_MODULE_LOAD,

  OP_EQ,
  OP_GT,
  OP_GE,
  OP_LT,
  OP_LE,
  OP_CONTAINS,
  OP_IS,

  OP_NOT,

  OP_NEGATIVE,
  OP_POSITIVE,
  OP_BNOT,

  OP_ADD,
  OP_SUB,
  OP_MUL,
  OP_DIV,
  OP_MOD,
  OP_DIVDIV,
  OP_POW,

  OP_XOR,
  OP_BOR,
  OP_BAND,
  OP_SHL,
  OP_SHR,

  OP_TAKE,
} OP;

std::string getopname(const OP op);

#endif // OPS_H