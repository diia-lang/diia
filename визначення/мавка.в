////
// Визначення для вбудовування Мавки у свій проект.
////

////
// Автор це Богданович Давид Когут Прихожденко та Організація Мавки та Організація Організацій
////

// Доступні публічні структури Мавки.
// Не отримуйте властивості їх обʼєктів напряму, а натомість використовуйте публічні дії нижче.
секція мавка {
  структура Виконувач;
  структура Обʼєкт;
  структура Назва;
  структура ІменованіАргументи;

  структура МісцезнаходженняПадіння {
    шлях_до_файлу: памʼять<п8>;
    рядок: позитивне;
  }

  структура ЕлементІсторіїПадіння {
    шлях_до_файлу: памʼять<п8>;
    рядок: позитивне;
    назва_дії: адреса<Назва>;
  }

  структура Падіння {
    місцезнаходження: адреса<МісцезнаходженняПадіння>;
    розмір_історії: позитивне;
    історія: памʼять<ЕлементІсторіїПадіння>;
  }

  структура Результат {
    падіння: адреса<Падіння>;
    значення: адреса<Обʼєкт>;
  }
}

// Публічні дії, що можна вільно використовувати.
секція мавка {
  синонім НативнаДія = (обʼєкт_нативної_дії: адреса<Обʼєкт>, В: адреса<Виконувач>, обʼєкт_я: адреса<Обʼєкт>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Обʼєкт>>, іменовані_аргументи: адреса<ІменованіАргументи>, дані: адреса) -> Результат;
  синонім ВідкликПередЗвільненнямОбʼєктаНативноїДії = (обʼєкт_нативної_дії: адреса<Обʼєкт>, В: адреса<Виконувач>, дані: адреса) -> ніщо;

  зовнішня дія виділити_байти(В: адреса<Виконувач>, розмір: позитивне): памʼять<п8>;
  зовнішня дія перевиділити_байти(В: адреса<Виконувач>, значення: памʼять<п8>, розмір: позитивне): памʼять<п8>;
  зовнішня дія звільнити_байти(В: адреса<Виконувач>, значення: памʼять<п8>);

  дія виділити<Т>(В: адреса<Виконувач>): адреса<Т>;
  дія виділити<Т>(В: адреса<Виконувач>, кількість: позитивне): памʼять<Т>;
  дія перевиділити<Т>(В: адреса<Виконувач>, значення: памʼять<Т>, кількість: позитивне): памʼять<Т>;
  дія звільнити(В: адреса<Виконувач>, значення: адреса);

  дія виділити<Т>(В: адреса<Виконувач>): адреса<Т> {
    вернути виділити_байти(В, Т.розмір) як адреса<Т>;
  }

  дія виділити<Т>(В: адреса<Виконувач>, кількість: позитивне): памʼять<Т> {
    вернути виділити_байти(В, кількість * Т.розмір) як памʼять<Т>;
  }

  дія перевиділити<Т>(В: адреса<Виконувач>, значення: памʼять<Т>, кількість: позитивне): памʼять<Т> {
    вернути перевиділити_байти(В, значення як памʼять<п8>, кількість * Т.розмір) як памʼять<Т>;
  }

  дія звільнити(В: адреса<Виконувач>, значення: адреса) {
    звільнити_байти(В, значення як памʼять<п8>);
  }

  зовнішня дія створити_виконувач(): адреса<Виконувач>;
  зовнішня дія знищити_виконувач(В: адреса<Виконувач>);
  зовнішня дія почати_діалог(В: адреса<Виконувач>): Результат;
  зовнішня дія взяти_файл_Ю8(В: адреса<Виконувач>, назва_модуля: адреса<Назва>, шлях_до_файлу: памʼять<п8>): Результат;
  зовнішня дія виконати_ю8(В: адреса<Виконувач>, значення: памʼять<п8>): Результат;
  зовнішня дія зберегти_обʼєкт(В: адреса<Виконувач>, обʼєкт: адреса<Обʼєкт>);
  зовнішня дія видалити_збережений_обʼєкт(В: адреса<Виконувач>);
  зовнішня дія назва_з_Ю8(В: адреса<Виконувач>, значення: памʼять<п8>): адреса<Назва>;
  зовнішня дія отримати_так(В: адреса<Виконувач>): адреса<Обʼєкт>;
  зовнішня дія отримати_ні(В: адреса<Виконувач>): адреса<Обʼєкт>;
  зовнішня дія визначити_глобальний_субʼєкт(В: адреса<Виконувач>, назва: адреса<Назва>, обʼєкт: адреса<Обʼєкт>);
  зовнішня дія утилізувати(В: адреса<Виконувач>);

  зовнішня дія створити_нативну_дію(В: адреса<Виконувач>, назва: адреса<Назва>, значення: НативнаДія, дані: адреса, відклик_перед_звільненням: ВідкликПередЗвільненнямОбʼєктаНативноїДії): адреса<Обʼєкт>;
  зовнішня дія створити_число(В: адреса<Виконувач>, значення: д64): адреса<Обʼєкт>;
  зовнішня дія створити_текст_з_Ю8(В: адреса<Виконувач>, значення: памʼять<п8>): адреса<Обʼєкт>;
  зовнішня дія створити_юнікод_з_Ю8(В: адреса<Виконувач>, значення: памʼять<п8>): адреса<Обʼєкт>;
  зовнішня дія створити_модуль(В: адреса<Виконувач>, назва: адреса<Назва>): адреса<Обʼєкт>;
  зовнішня дія створити_список(В: адреса<Виконувач>): адреса<Обʼєкт>;
  зовнішня дія створити_словник(В: адреса<Виконувач>): адреса<Обʼєкт>;
  зовнішня дія створити_байти(В: адреса<Виконувач>, розмір: позитивне): адреса<Обʼєкт>;
  зовнішня дія створити_обʼєкт(В: адреса<Виконувач>): адреса<Обʼєкт>;

  зовнішня дія обʼєкт_виконати(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, обʼєкт_я: адреса<Обʼєкт>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Обʼєкт>>, іменовані_аргументи: адреса<ІменованіАргументи>): Результат;
  зовнішня дія обʼєкт_отримати_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: адреса<Назва>): Результат;
  зовнішня дія обʼєкт_змінити_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: адреса<Назва>, значення: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_видалити_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: адреса<Назва>): Результат;
  зовнішня дія обʼєкт_виконати_властивість(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, назва: адреса<Назва>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Обʼєкт>>, іменовані_аргументи: адреса<ІменованіАргументи>): Результат;
  зовнішня дія обʼєкт_отримати_елемент(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, ключ: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_змінити_елемент(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, ключ: адреса<Обʼєкт>, значення: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_видалити_елемент(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, ключ: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_отримати_перебір(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;
  зовнішня дія обʼєкт_додати(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_відняти(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_помножити(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_поділити(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_остача(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_неповна_частка(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_степінь(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_вліво(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_вправо_зі_заповненням(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_двійкове_і(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_двійкове_або(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_двійкове_виключне_або(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_двійкове_не(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;
  зовнішня дія обʼєкт_більше(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_менше(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_рівно(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_містить(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_є(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, аргумент: адреса<Обʼєкт>): Результат;
  зовнішня дія обʼєкт_відʼємне(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;
  зовнішня дія обʼєкт_числове(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;
  зовнішня дія обʼєкт_заперечити(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;
  зовнішня дія обʼєкт_збільшити(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;
  зовнішня дія обʼєкт_зменшити(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): Результат;

  зовнішня дія скопіювати_значення_обʼєкта_юнікоду_як_Ю8(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, адреса_на_розмір_виходу: адреса<позитивне>, адреса_на_вихід: адреса<памʼять<п8>>): логічне;

  зовнішня дія результат_успіх(В: адреса<Виконувач>, обʼєкт: адреса<Обʼєкт>): Результат;
  зовнішня дія результат_падіння(В: адреса<Виконувач>, обʼєкт: адреса<Обʼєкт>, місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>): Результат;
  зовнішня дія виділити_падіння(В: адреса<Виконувач>, місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>, розмір_історії: позитивне, історія: памʼять<ЕлементІсторіїПадіння>): адреса<Падіння>;
  зовнішня дія звільнити_падіння(В: адреса<Виконувач>, падіння: адреса<Падіння>);
  зовнішня дія виділити_місцезнаходження_падіння(В: адреса<Виконувач>, шлях_до_файлу: памʼять<п8>, рядок: позитивне): адреса<МісцезнаходженняПадіння>;
  зовнішня дія звільнити_місцезнаходження_падіння(В: адреса<Виконувач>, місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>);
  зовнішня дія отримати_шлях_до_файлу_з_місцезнаходження_падіння(В: адреса<Виконувач>, місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>): памʼять<п8>;
  зовнішня дія отримати_рядок_з_місцезнаходження_падіння(В: адреса<Виконувач>, місцезнаходження_падіння: адреса<МісцезнаходженняПадіння>): позитивне;
  зовнішня дія отримати_текстове_зображення_обʼєкта_як_Ю8(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п8>>): позитивне;

  зовнішня дія отримати_значення_числа(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): д64;

  зовнішня дія перевірити_чи_обʼєкт_виражається_логічним_так(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  зовнішня дія перевірити_чи_обʼєкт_є_дією(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  зовнішня дія перевірити_чи_обʼєкт_є_нативною_дією(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  зовнішня дія перевірити_чи_обʼєкт_є_числом(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  зовнішня дія перевірити_чи_обʼєкт_є_текстом(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  зовнішня дія перевірити_чи_обʼєкт_є_юнікодом(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  зовнішня дія перевірити_чи_обʼєкт_є_модулем(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  зовнішня дія перевірити_чи_обʼєкт_є_списком(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  зовнішня дія перевірити_чи_обʼєкт_є_словником(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  зовнішня дія перевірити_чи_обʼєкт_є_логічним(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;
  зовнішня дія перевірити_чи_обʼєкт_є_байтами(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>): логічне;

  зовнішня дія записати_в_байти(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, дані: памʼять<п8>, розмір: позитивне, зсув: позитивне);

  зовнішня дія отримати_копію_даних_тексту(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п8>>): позитивне;
  зовнішня дія отримати_дані_тексту(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п8>>): позитивне;
  зовнішня дія отримати_копію_даних_юнікоду(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п32>>): позитивне;
  зовнішня дія отримати_дані_юнікоду(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п32>>): позитивне;
  зовнішня дія отримати_копію_даних_юнікоду_як_Ю8(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п8>>): позитивне;
  зовнішня дія отримати_копію_даних_байтів(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п8>>): позитивне;
  зовнішня дія отримати_дані_байтів(обʼєкт: адреса<Обʼєкт>, В: адреса<Виконувач>, вихід: адреса<памʼять<п8>>): позитивне;

  зовнішня дія знайти_іменований_аргумент(В: адреса<Виконувач>, іменовані_аргументи: адреса<ІменованіАргументи>, назва: адреса<Назва>, вихід: адреса<адреса<Обʼєкт>>): логічне;
  зовнішня дія записати_іменований_аргумент(В: адреса<Виконувач>, іменовані_аргументи: адреса<ІменованіАргументи>, назва: адреса<Назва>, значення: адреса<Обʼєкт>);
  зовнішня дія виділити_іменовані_аргументи(В: адреса<Виконувач>): адреса<ІменованіАргументи>;
  зовнішня дія звільнити_іменовані_аргументи(В: адреса<Виконувач>, іменовані_аргументи: адреса<ІменованіАргументи>);
}