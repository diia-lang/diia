взяти визначення біб;

структура ЗначенняЧерги<Т>;
структура Черга<Т>;

структура ЗначенняЧерги<Т> {
  дані: Т;
  наступне: комірка<ЗначенняЧерги<Т>>;
}

структура Черга<Т> {
  розмір: позитивне;
  перше_значення: комірка<ЗначенняЧерги<Т>>;
  останнє_значення: комірка<ЗначенняЧерги<Т>>;
}

дія зробити_чергу<Т>(): Черга<Т> {
  ціль черга = Черга<Т> {};
  черга.розмір = 0;
  черга.перше_значення = пусто;
  черга.останнє_значення = пусто;
  вернути черга;
}

дія виділити_значення_черги<Т>(дані: Т): комірка<ЗначенняЧерги<Т>> {
  ціль значення = виділити<ЗначенняЧерги<Т>>();
  значення.дані = дані;
  значення.наступне = пусто;
  вернути значення;
}

дія додати_в_чергу<Т>(черга: комірка<Черга<Т>>, дані: Т) {
  ціль нове_значення = виділити_значення_черги<Т>(дані);
  якщо черга.розмір == 0 {
    черга.перше_значення = нове_значення;
    черга.останнє_значення = нове_значення;
  } інакше {
    черга.останнє_значення.наступне = нове_значення;
    черга.останнє_значення = нове_значення;
  }
  черга.розмір = черга.розмір + 1;
}

дія забрати_з_черги<Т>(черга: комірка<Черга<Т>>): Т {
  ціль перше_значення = черга.перше_значення;
  черга.перше_значення = перше_значення.наступне;
  черга.розмір = черга.розмір - 1;
  звільнити(перше_значення);
  вернути перше_значення.дані;
}

дія звільнити_чергу<Т>(черга: комірка<Черга<Т>>) {
  змінна ціль поточне_значення = черга.перше_значення;
  поки поточне_значення != пусто {
    ціль наступне_значення = поточне_значення.наступне;
    звільнити(поточне_значення);
    поточне_значення = наступне_значення;
  }
  звільнити(черга);
}