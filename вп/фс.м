js """
var { default: fs } = await import("fs");

м_прочитати = мДія(
  "прочитати",
  [мПарм("шлях", м_текст)],
  async function(args) {
    const path = args[0] ?? args["а"];

    return await fs.promises.readFile(path) ?? null;
  }
);
м_прочитати_текст = мДія(
  "прочитати",
  [мПарм("шлях", м_текст)],
  async function(args) {
    const path = args[0] ?? args["а"];

    return await fs.promises.readFile(path, "utf8") ?? null;
  }
);
м_записати = мДія(
  "записати",
  [мПарм("шлях", м_текст), мПарм("дані", [м_байти, м_текст])],
  async function(args) {
    const path = args[0] ?? args["шлях"];
    const data = args[1] ?? args["дані"];

    return await fs.promises.writeFile(path, data) ?? null;
  }
);
м_дописати = мДія(
  "дописати",
  [мПарм("шлях", м_текст), мПарм("дані", [м_байти, м_текст])],
  async function(args) {
    const path = args[0] ?? args["шлях"];
    const data = args[1] ?? args["дані"];

    return await fs.promises.appendFile(path, data) ?? null;
  }
);
м_перейменувати = мДія(
  "перейменувати",
  [мПарм("шлях", м_текст), мПарм("новий_шлях", м_текст)],
  async function(args) {
    const path = args[0] ?? args["шлях"];
    const newPath = args[1] ?? args["новий_шлях"];

    return await fs.promises.rename(path, newPath) ?? null;
  }
);
м_видалити = мДія(
  "видалити",
  [мПарм("шлях", м_текст)],
  async function(args) {
    const path = args[0] ?? args["а"];

    return await fs.promises.unlink(path);
  }
);
м_створити_папку = мДія(
  "створити_папку",
  [мПарм("шлях", м_текст)],
  async function(args) {
    const path = args[0] ?? args["а"];

    return await fs.promises.mkdir(path);
  }
);
м_створити_папку_рекурсивно = мДія(
  "створити_папку_рекурсивно",
  [мПарм("шлях", м_текст)],
  async function(args) {
    const path = args[0] ?? args["а"];

    return await fs.promises.mkdir(path, { recursive: true });
  }
);
м_видалити_папку = мДія(
  "видалити_папку",
  [мПарм("шлях", м_текст)],
  async function(args) {
    const path = args[0] ?? args["а"];

    return fs.rmdirSync(path);
  }
)
м_видалити_папку_рекурсивно = мДія(
  "видалити_папку_рекурсивно",
  [мПарм("шлях", м_текст)],
  async function(args) {
    const path = args[0] ?? args["а"];

    return fs.rmdirSync(path, { recursive: true });
  }
)
м_існує = мДія(
  "існує",
  [мПарм("шлях", м_текст)],
  async function(args) {
    const path = args[0] ?? args["а"];

    return fs.existsSync(path);
  }
)
"""

макет тривала дія прочитати(шлях текст) байти
макет тривала дія прочитати_текст(шлях текст) текст
макет тривала дія записати(шлях текст, дані байти|текст) ніщо
макет тривала дія дописати(шлях текст, дані байти|текст) ніщо
макет тривала дія перейменувати(шлях текст, новий_шлях текст) ніщо
макет тривала дія видалити(шлях текст) ніщо
макет тривала дія створити_папку(шлях текст) ніщо
макет тривала дія створити_папку_рекурсивно(шлях текст) ніщо
макет тривала дія видалити_папку(шлях текст) ніщо
макет тривала дія видалити_папку_рекурсивно(шлях текст) ніщо
макет тривала дія існує(шлях текст) логічне

дати прочитати
дати прочитати_текст
дати записати
дати дописати
дати перейменувати
дати видалити
дати створити_папку
дати створити_папку_рекурсивно
дати видалити_папку
дати видалити_папку_рекурсивно
дати існує
