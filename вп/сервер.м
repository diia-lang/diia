js """
var { default: http } = await import("http");

м_Опції = мСтрк("Опції", [
  мПарм("хост", м_текст, "localhost"),
  мПарм("порт", м_число, 8080),
]);
м_Сервер = мСтрк("Сервер", [
  мПарм("обробник", м_Дія),
  мПарм("опції", м_Опції, new Map()),
]);
м_Сервер[MAVKA].methods.push(мМетд("запустити", [], function(me, args) {
  var handler = me["обробник"];
  var options = me["опції"];
  var callback = args[0] ?? args["зворот"] ?? null;
  var host = мОтрм(options, "хост");
  var port = мОтрм(options, "порт");

  var server = http.createServer((req, res) => {
    var parts = [];

    req.on("data", (chunk) => {
      parts.push(chunk);
    }).on("end", async () => {
      var requestBody = Buffer.concat(parts);
      var headers = new Map();
      for (var header in req.headers) {
        headers.set(header, req.headers[header]);
      }
      var zapyt = мВикл(
        м_Запит,
        [
          req.method,
          decodeURI(req.url),
          headers,
          requestBody
        ]
      );

      var result = await мВикл(handler, [zapyt]);
      if (result) {
        var responseBody;
        if (мЄ(result, м_текст)) {
          responseBody = result;
        } else if (мЄ(result, м_байти)) {
          responseBody = result;
        } else if (мЄ(result, м_Відповідь)) {
          res.statusCode = result["код"];
          for (var [hk, vv] of result["заголовки"].entries()) {
            res.setHeader(hk, vv);
          }
          responseBody = result["дані"];
        } else {
          throw new Error("Обробник повинен повертати байти, текст або Відповідь.");
        }
        var contentType = res.getHeader("content-type");
        if (!contentType) {
          if (responseBody instanceof Uint8Array) {
            contentType = "application/octet-stream";
          } else {
            contentType = "text/plain; charset=utf-8";
          }
        } else if (!contentType.includes("charset")) {
          contentType += "; charset=utf-8";
        }
        res.setHeader("content-type", contentType);
        res.end(responseBody);
      } else {
        res.end();
      }
    });
  });

  server.listen(port, host, function(err) {
    if (err) {
      throw err;
    } else if (callback) {
      мВикл(callback, []);
    }
  });

  return null;
}));
м_Запит = мСтрк("Запит", [
  мПарм("метод", м_текст),
  мПарм("шлях", м_текст),
  мПарм("заголовки", м_словник),
  мПарм("дані", м_байти),
]);
м_Відповідь = мСтрк("Відповідь", [
  мПарм("код", м_число, 200),
  мПарм("заголовки", м_словник, new Map()),
  мПарм("дані", [м_байти, м_текст], ""),
]);
м_запустити = мДія("запустити", [
  мПарм("обробник", м_Дія),
  мПарм("опції", м_Опції, new Map()),
  мПарм("зворот", [м_Дія, м_пусто], м_пусто),
], function(args) {
  var handler = args[0] ?? args["обробник"];
  var options = args[1] ?? args["опції"] ?? new Map();
  var callback = args[2] ?? args["зворот"] ?? null;
  var server = мВикл(
    м_Сервер,
    [
      handler,
      options
    ]
  );
  мВикл(мОтрм(server, "запустити"), [callback]);
  return server;
});
"""

макет структура Опції
  хост текст = "localhost"
  порт число = 8080
кінець

макет структура Сервер
  обробник Дія
  опції Опції = ()

  ;; запустити(зворот Дія або пусто = пусто) ніщо
кінець

макет структура Запит
  метод текст
  шлях текст
  заголовки словник
  дані байти
кінець

макет структура Відповідь
  код число = 200
  заголовки словник = ()
  дані байти або текст = ""
кінець

макет дія запустити(обробник Дія, опції Опції = (), зворот Дія або пусто = пусто) Сервер

дати Опції
дати Сервер
дати Запит
дати Відповідь
дати запустити
